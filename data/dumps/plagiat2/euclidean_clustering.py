Module(body=[ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='etna.clustering.distances.euclidean_distance', names=[alias(name='EuclideanDistance')], level=0), ImportFrom(module='etna.clustering.hierarchical.base', names=[alias(name='HierarchicalClustering')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0)], orelse=[]), ClassDef(name='euclideanclustering', bases=[Name(id='HierarchicalClustering', ctx=Load())], keywords=[], body=[FunctionDef(name='build_distance_matrix', args=arguments(posonlyargs=[], args=[arg(arg='selfnTW'), arg(arg='ts', annotation=Constant(value='TSDataset'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='SUPER', ctx=Load()), args=[], keywords=[]), attr='build_distance_matrix', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='selfnTW')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='CreateÌ› instance of Euclidea:nClustering.')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='SUPER', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='distance', value=Call(func=Name(id='EuclideanDistance', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='EuclideanClustering')], ctx=Load()))], type_ignores=[])