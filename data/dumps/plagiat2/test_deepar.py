Module(body=[Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='pytorch_forecasting.data', names=[alias(name='GroupNormalizer')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='PytorchForecastingTransform')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.models.nn', names=[alias(name='DeepARModel')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='AddConstTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='DateFlagsTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='StandardScalerTransform')], level=0), ImportFrom(module='etna.datasets.tsdataset', names=[alias(name='TSDataset')], level=0), FunctionDef(name='test_fit_wrong_order_transform', args=arguments(posonlyargs=[], args=[arg(arg='weekly_period_df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='tssWdru', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='weekly_period_df', ctx=Load())], keywords=[]), Constant(value='D')], keywords=[])), Assign(targets=[Name(id='add_const', ctx=Store())], value=Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='value', value=Constant(value=1.0))])), Assign(targets=[Name(id='pft', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Constant(value=21)), keyword(arg='max_prediction_length', value=Constant(value=8)), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='target_normalizer', value=Call(func=Name(id='GroupNormalizer', ctx=Load()), args=[], keywords=[keyword(arg='groups', value=List(elts=[Constant(value='segment')], ctx=Load()))]))])), Expr(value=Call(func=Attribute(value=Name(id='tssWdru', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='pft', ctx=Load()), Name(id='add_const', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mode_l', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=300)), keyword(arg='learning_rate', value=List(elts=[Constant(value=0.1)], ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='VALUEERROR', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='add PytorchForecastingTransform'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='tssWdru', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_deepar_model_run_weekly_overfit', args=arguments(posonlyargs=[], args=[arg(arg='weekly_period_df'), arg(arg='HORIZON')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ts_start', ctx=Store())], value=Subscript(value=Call(func=Name(id='sortedr', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='weekly_period_df', ctx=Load()), attr='timestamp', ctx=Load())], keywords=[])], keywords=[]), slice=UnaryOp(op=USub(), operand=Name(id='HORIZON', ctx=Load())), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='test', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='weekly_period_df', ctx=Load()), slice=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x_')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Attribute(value=Name(id='x_', ctx=Load()), attr='timestamp', ctx=Load()), ops=[Lt()], comparators=[Name(id='ts_start', ctx=Load())])), ctx=Load()), Subscript(value=Name(id='weekly_period_df', ctx=Load()), slice=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x_')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Attribute(value=Name(id='x_', ctx=Load()), attr='timestamp', ctx=Load()), ops=[GtE()], comparators=[Name(id='ts_start', ctx=Load())])), ctx=Load())], ctx=Load())), Assign(targets=[Name(id='ts_trainZ', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[]), Constant(value='D')], keywords=[])), Assign(targets=[Name(id='ts_t', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='test', ctx=Load())], keywords=[]), Constant(value='D')], keywords=[])), Assign(targets=[Name(id='dft', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_week', value=Constant(value=True)), keyword(arg='day_number_in_month', value=Constant(value=False)), keyword(arg='out_column', value=Constant(value='regressor_dateflags'))])), Assign(targets=[Name(id='pft', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Constant(value=21)), keyword(arg='max_prediction_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_known_categoricals', value=List(elts=[Constant(value='regressor_dateflags_day_number_in_week')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='target_normalizer', value=Call(func=Name(id='GroupNormalizer', ctx=Load()), args=[], keywords=[keyword(arg='groups', value=List(elts=[Constant(value='segment')], ctx=Load()))]))])), Expr(value=Call(func=Attribute(value=Name(id='ts_trainZ', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='dft', ctx=Load()), Name(id='pft', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mode_l', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=300)), keyword(arg='learning_rate', value=List(elts=[Constant(value=0.1)], ctx=Load()))])), Assign(targets=[Name(id='ts_pred', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts_trainZ', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='HORIZON', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts_trainZ', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts_pred', ctx=Store())], value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='ts_pred', ctx=Load())], keywords=[])), Assign(targets=[Name(id='mae', ctx=Store())], value=Call(func=Name(id='MAE', ctx=Load()), args=[Constant(value='macro')], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='mae', ctx=Load()), args=[Name(id='ts_t', ctx=Load()), Name(id='ts_pred', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Constant(value=0.2207)]))], decorator_list=[Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='long_2', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='horizon'), List(elts=[Constant(value=8), Constant(value=21)], ctx=Load())], keywords=[])]), FunctionDef(name='test_forecast_without_make_future', args=arguments(posonlyargs=[], args=[arg(arg='weekly_period_df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='tssWdru', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='weekly_period_df', ctx=Load())], keywords=[]), Constant(value='D')], keywords=[])), Assign(targets=[Name(id='pft', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Constant(value=21)), keyword(arg='min_encoder_length', value=Constant(value=21)), keyword(arg='max_prediction_length', value=Constant(value=8)), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='static_categoricals', value=List(elts=[Constant(value='segment')], ctx=Load())), keyword(arg='target_normalizer', value=Constant(value=None))])), Expr(value=Call(func=Attribute(value=Name(id='tssWdru', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='pft', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mode_l', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='tssWdru', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Name(id='tssWdru', ctx=Load()), attr='df', ctx=Load()), attr='index', ctx=Store())], value=BinOp(left=Attribute(value=Attribute(value=Name(id='tssWdru', ctx=Load()), attr='df', ctx=Load()), attr='index', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timedelta', ctx=Load()), args=[], keywords=[keyword(arg='days', value=Call(func=Name(id='lenbQA', ctx=Load()), args=[Attribute(value=Name(id='tssWdru', ctx=Load()), attr='df', ctx=Load())], keywords=[]))]))), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='VALUEERROR', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='The future is not generated!'))]))], body=[Assign(targets=[Name(id='__', ctx=Store())], value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='forecast', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='tssWdru', ctx=Load()))]))])], decorator_list=[]), FunctionDef(name='test__prediction_interval_run_infuture', args=arguments(posonlyargs=[], args=[arg(arg='exam')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ɸȇ  α¦ǀ ż   ɸσ   ϊ')), Assign(targets=[Name(id='HORIZON', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='max_prediction_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='target_normalizer', value=Call(func=Name(id='GroupNormalizer', ctx=Load()), args=[], keywords=[keyword(arg='groups', value=List(elts=[Constant(value='segment')], ctx=Load()))]))])), Expr(value=Call(func=Attribute(value=Name(id='exam', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='transform', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mode_l', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=2)), keyword(arg='learning_rate', value=List(elts=[Constant(value=0.01)], ctx=Load())), keyword(arg='gpus', value=Constant(value=0)), keyword(arg='batch_size', value=Constant(value=64))])), Expr(value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='exam', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='exam', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='HORIZON', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fo', ctx=Store())], value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_interval', value=Constant(value=True)), keyword(arg='quantiles', value=List(elts=[Constant(value=0.025), Constant(value=0.975)], ctx=Load()))])), For(target=Name(id='SEGMENT', ctx=Store()), iter=Attribute(value=Name(id='fo', ctx=Load()), attr='segments', ctx=Load()), body=[Assign(targets=[Name(id='segme', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='fo', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='SEGMENT', ctx=Load()), Slice()], ctx=Load()), ctx=Load()), slice=Name(id='SEGMENT', ctx=Load()), ctx=Load())), Assert(test=Call(func=Attribute(value=Set(elts=[Constant(value='target_0.025'), Constant(value='target_0.975'), Constant(value='target')]), attr='issubset', ctx=Load()), args=[Attribute(value=Name(id='segme', ctx=Load()), attr='columns', ctx=Load())], keywords=[])), Assert(test=Call(func=Attribute(value=Compare(left=BinOp(left=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target_0.975'), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target_0.025'), ctx=Load())), ops=[GtE()], comparators=[Constant(value=0)]), attr='all', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Compare(left=BinOp(left=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target'), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target_0.025'), ctx=Load())), ops=[GtE()], comparators=[Constant(value=0)]), attr='all', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Attribute(value=Compare(left=BinOp(left=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target_0.975'), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='segme', ctx=Load()), slice=Constant(value='target'), ctx=Load())), ops=[GtE()], comparators=[Constant(value=0)]), attr='all', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_forecast_w', args=arguments(posonlyargs=[], args=[arg(arg='weekly_period_df'), arg(arg='freq')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='             ')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='weekly_period_df', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='df', ctx=Load()), attr='index', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Index', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2021-01-01')], keywords=[keyword(arg='freq', value=Name(id='freq', ctx=Load())), keyword(arg='periods', value=Call(func=Name(id='lenbQA', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]))])], keywords=[keyword(arg='name', value=Constant(value='timestamp'))])), Assign(targets=[Name(id='tssWdru', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Name(id='freq', ctx=Load()))])), Assign(targets=[Name(id='HORIZON', ctx=Store())], value=Constant(value=20)), Assign(targets=[Name(id='transform_deepar', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='max_prediction_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='target_normalizer', value=Call(func=Name(id='GroupNormalizer', ctx=Load()), args=[], keywords=[keyword(arg='groups', value=List(elts=[Constant(value='segment')], ctx=Load()))]))])), Assign(targets=[Name(id='model_deepar', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=2)), keyword(arg='learning_rate', value=List(elts=[Constant(value=0.01)], ctx=Load())), keyword(arg='gpus', value=Constant(value=0)), keyword(arg='batch_size', value=Constant(value=64))])), Assign(targets=[Name(id='pipeline_deepar', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='model_deepar', ctx=Load())), keyword(arg='horizon', value=Name(id='HORIZON', ctx=Load())), keyword(arg='transforms', value=List(elts=[Name(id='transform_deepar', ctx=Load())], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='pipeline_deepar', ctx=Load()), attr='fit', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='tssWdru', ctx=Load()))])), Assign(targets=[Name(id='fo', ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline_deepar', ctx=Load()), attr='forecast', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='lenbQA', ctx=Load()), args=[Attribute(value=Name(id='fo', ctx=Load()), attr='df', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='HORIZON', ctx=Load())])), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='infer_freq', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='fo', ctx=Load()), attr='df', ctx=Load()), attr='index', ctx=Load())], keywords=[]), ops=[In()], comparators=[Set(elts=[Name(id='freq', ctx=Load()), Subscript(value=Name(id='freq', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load())])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='freq'), List(elts=[Constant(value='1M'), Constant(value='1D'), Constant(value='A-DEC'), Constant(value='1B'), Constant(value='1H')], ctx=Load())], keywords=[])]), FunctionDef(name='test_deepar_model_run_weekly_overfit_with_scaleru', args=arguments(posonlyargs=[], args=[arg(arg='ts_dataset_weekly_function_wi_th_horizon'), arg(arg='HORIZON')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ts_trainZ', ctx=Store()), Name(id='ts_t', ctx=Store())], ctx=Store())], value=Call(func=Name(id='ts_dataset_weekly_function_wi_th_horizon', ctx=Load()), args=[Name(id='HORIZON', ctx=Load())], keywords=[])), Assign(targets=[Name(id='std', ctx=Store())], value=Call(func=Name(id='StandardScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))])), Assign(targets=[Name(id='dft', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_week', value=Constant(value=True)), keyword(arg='day_number_in_month', value=Constant(value=False)), keyword(arg='out_column', value=Constant(value='regressor_dateflags'))])), Assign(targets=[Name(id='pft', ctx=Store())], value=Call(func=Name(id='PytorchForecastingTransform', ctx=Load()), args=[], keywords=[keyword(arg='max_encoder_length', value=Constant(value=21)), keyword(arg='max_prediction_length', value=Name(id='HORIZON', ctx=Load())), keyword(arg='time_varying_known_reals', value=List(elts=[Constant(value='time_idx')], ctx=Load())), keyword(arg='time_varying_known_categoricals', value=List(elts=[Constant(value='regressor_dateflags_day_number_in_week')], ctx=Load())), keyword(arg='time_varying_unknown_reals', value=List(elts=[Constant(value='target')], ctx=Load())), keyword(arg='target_normalizer', value=Call(func=Name(id='GroupNormalizer', ctx=Load()), args=[], keywords=[keyword(arg='groups', value=List(elts=[Constant(value='segment')], ctx=Load()))]))])), Expr(value=Call(func=Attribute(value=Name(id='ts_trainZ', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='std', ctx=Load()), Name(id='dft', ctx=Load()), Name(id='pft', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mode_l', ctx=Store())], value=Call(func=Name(id='DeepARModel', ctx=Load()), args=[], keywords=[keyword(arg='max_epochs', value=Constant(value=300)), keyword(arg='learning_rate', value=List(elts=[Constant(value=0.1)], ctx=Load()))])), Assign(targets=[Name(id='ts_pred', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts_trainZ', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='HORIZON', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts_trainZ', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts_pred', ctx=Store())], value=Call(func=Attribute(value=Name(id='mode_l', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='ts_pred', ctx=Load())], keywords=[])), Assign(targets=[Name(id='mae', ctx=Store())], value=Call(func=Name(id='MAE', ctx=Load()), args=[Constant(value='macro')], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='mae', ctx=Load()), args=[Name(id='ts_t', ctx=Load()), Name(id='ts_pred', ctx=Load())], keywords=[]), ops=[Lt()], comparators=[Constant(value=0.2207)]))], decorator_list=[Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='long_2', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='horizon'), List(elts=[Constant(value=8)], ctx=Load())], keywords=[])])], type_ignores=[])