Module(body=[ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), ImportFrom(module='proxynca', names=[alias(name='ProxyNCALoss')], level=1), ImportFrom(module='catalyst', names=[alias(name='dl')], level=0), Import(names=[alias(name='torch')]), ImportFrom(module='config', names=[alias(name='prepare_config')], level=2), ImportFrom(module='torch', names=[alias(name='get_base_module'), alias(name='disable_amp')], level=2), ImportFrom(module='multisim', names=[alias(name='MultiSimilarityLoss')], level=1), ImportFrom(module='catalyst.utils.misc', names=[alias(name='get_attr')], level=0), ClassDef(name='criterion', bases=[Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[FunctionDef(name='_p', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='distributions'), arg(arg='labelsvWcD')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     ͛   Ȃ Ȥ   ʮ ')), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='logmls', ctx=Load()), args=[Subscript(value=Name(id='distributions', ctx=Load()), slice=Constant(value=None), ctx=Load()), Subscript(value=Name(id='distributions', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='same_maskSsHk', ctx=Store())], value=Compare(left=Subscript(value=Name(id='labelsvWcD', ctx=Load()), slice=Constant(value=None), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='labelsvWcD', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())])), If(test=UnaryOp(op=Not(), operand=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='pfe_match_self'), ctx=Load())), body=[Expr(value=Call(func=Attribute(value=Name(id='same_maskSsHk', ctx=Load()), attr='fill_diagonal_', ctx=Load()), args=[Constant(value=False)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='same_mls', ctx=Store())], value=Subscript(value=Name(id='p', ctx=Load()), slice=Name(id='same_maskSsHk', ctx=Load()), ctx=Load())), Return(value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Name(id='same_mls', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])))], decorator_list=[]), FunctionDef(name='get_default_co_nfig', args=arguments(posonlyargs=[], args=[arg(arg='use_softmax'), arg(arg='xent_weight'), arg(arg='xent_smoothi'), arg(arg='hing_e_weight'), arg(arg='hinge_marginFevXJ'), arg(arg='proxy_archor_weightjw'), arg(arg='proxy_nca_weightUFVWw'), arg(arg='multi_similarity_weight'), arg(arg='multi'), arg(arg='prior_kld__weight'), arg(arg='pfe_weight_'), arg(arg='pfe_match_selfQBpi'), arg(arg='hib_weight')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=1.0), Constant(value=0.0), Constant(value=0.0), Constant(value=1.0), Constant(value=0.0), Constant(value=0.0), Constant(value=0.0), Constant(value=None), Constant(value=0.0), Constant(value=0.0), Constant(value=True), Constant(value=0.0)]), body=[Return(value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='use_softmax'), Name(id='use_softmax', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='xent_weight'), Name(id='xent_weight', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='xent_smoothing'), Name(id='xent_smoothi', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='hinge_weight'), Name(id='hing_e_weight', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='hinge_margin'), Name(id='hinge_marginFevXJ', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='proxy_anchor_weight'), Name(id='proxy_archor_weightjw', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='proxy_nca_weight'), Name(id='proxy_nca_weightUFVWw', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='multi_similarity_weight'), Name(id='multi_similarity_weight', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='multi_similarity_params'), Name(id='multi', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='prior_kld_weight'), Name(id='prior_kld__weight', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='pfe_weight'), Name(id='pfe_weight_', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='pfe_match_self'), Name(id='pfe_match_selfQBpi', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='hib_weight'), Name(id='hib_weight', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_hinge_loss', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='logits'), arg(arg='labelsvWcD')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='_n', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='logits', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='gt_logits', ctx=Store())], value=Call(func=Attribute(value=Name(id='logits', ctx=Load()), attr='take_along_dim', ctx=Load()), args=[Call(func=Attribute(value=Name(id='labelsvWcD', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='alt_mask', ctx=Store())], value=Compare(left=Call(func=Attribute(value=Name(id='labelsvWcD', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), ops=[NotEq()], comparators=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='_n', ctx=Load())], keywords=[keyword(arg='device', value=Attribute(value=Name(id='logits', ctx=Load()), attr='device', ctx=Load()))])])), Assign(targets=[Name(id='los', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='hinge_margin'), ctx=Load()), op=Sub(), right=Name(id='gt_logits', ctx=Load())), op=Add(), right=Name(id='logits', ctx=Load())), attr='clip', ctx=Load()), args=[], keywords=[keyword(arg='min', value=Constant(value=0))]), slice=Name(id='alt_mask', ctx=Load()), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='los', ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='embeddings'), arg(arg='labelsvWcD'), arg(arg='logits'), arg(arg='targ_et_embeddings'), arg(arg='final_weightsO'), arg(arg='final_bias'), arg(arg='final_variance')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value=' ʒ  ϚȜ   Ϡ  ϥJ  ΐϣ  ')), Assign(targets=[Name(id='los', ctx=Store())], value=Constant(value=0)), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='xent_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='logits', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need logits for Xent loss.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='xent_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_xent_loss', ctx=Load()), args=[Name(id='logits', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='hinge_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='logits', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need logits for Hinge loss.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='hinge_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_hinge_loss', ctx=Load()), args=[Name(id='logits', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='proxy_anchor_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Name(id='logits', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need logits for Proxy-Anchor loss.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='proxy_anchor_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proxy_anchor_loss', ctx=Load()), args=[Name(id='logits', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='proxy_nca_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need scorer for Proxy-NCA loss.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='final_weightsO', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need final weights for Proxy-NCA loss.')], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='final_bias', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Final bias is redundant for Proxy-NCA loss.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='proxy_nca_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_proxy_nca_loss', ctx=Load()), args=[Name(id='embeddings', ctx=Load()), Name(id='labelsvWcD', ctx=Load()), Name(id='final_weightsO', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='multi_similarity_weight'), ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='ValueErro_r', ctx=Load()), args=[Constant(value='Need scorer for Multi-similarity loss.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='multi_similarity_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_multi_similarity_loss', ctx=Load()), args=[Name(id='embeddings', ctx=Load()), Name(id='labelsvWcD', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='prior_kld_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='prior_kld_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_prior_kld_loss', ctx=Load()), args=[Name(id='embeddings', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='pfe_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='pfe_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_pfe_loss', ctx=Load()), args=[Name(id='embeddings', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='hib_weight'), ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='los', ctx=Store())], value=BinOp(left=Name(id='los', ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='hib_weight'), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_hib_loss', ctx=Load()), args=[Name(id='embeddings', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))))], orelse=[]), Return(value=Name(id='los', ctx=Load()))], decorator_list=[]), FunctionDef(name='_proxy_an', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='logits'), arg(arg='labelsvWcD')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='See PȪrţoxy An¾chor Lo͞ss forʕ Deep Metric Leasrning (ʀ2020):\nhttps://aʖrxiv.o\x87rg/pdf/ɨ200ɵ3.13ľ9é11.̕pdf')), Assign(targets=[Tuple(elts=[Name(id='b', ctx=Store()), Name(id='c', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='logits', ctx=Load()), attr='shape', ctx=Load())), Assign(targets=[Name(id='_one_hot', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Name(id='logits', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_one_hot', ctx=Load()), attr='scatter_', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='labelsvWcD', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='long', ctx=Load()), args=[], keywords=[]), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='num_positives', ctx=Store())], value=Call(func=Attribute(value=Name(id='_one_hot', ctx=Load()), attr='sum', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='ninf', ctx=Store())], value=UnaryOp(op=USub(), operand=Constant(value=10000000000.0))), Assign(targets=[Name(id='positive', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=BinOp(left=UnaryOp(op=USub(), operand=Name(id='logits', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='_one_hot', ctx=Load())), op=Mult(), right=Name(id='ninf', ctx=Load()))), slice=Tuple(elts=[Slice(), Compare(left=Name(id='num_positives', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)])], ctx=Load()), ctx=Load()), attr='logsumexp', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='positive', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='softplus', ctx=Load()), args=[Name(id='positive', ctx=Load())], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='negative', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=BinOp(left=Name(id='logits', ctx=Load()), op=Add(), right=BinOp(left=Name(id='_one_hot', ctx=Load()), op=Mult(), right=Name(id='ninf', ctx=Load()))), slice=Tuple(elts=[Slice(), Compare(left=Name(id='num_positives', ctx=Load()), ops=[Lt()], comparators=[Name(id='b', ctx=Load())])], ctx=Load()), ctx=Load()), attr='logsumexp', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='negative', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='softplus', ctx=Load()), args=[Name(id='negative', ctx=Load())], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[])), Return(value=BinOp(left=Name(id='positive', ctx=Load()), op=Add(), right=Name(id='negative', ctx=Load())))], decorator_list=[]), FunctionDef(name='_prior_kld_loss', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='distributions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     ȶ')), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Load()), attr='prior_kld', ctx=Load()), args=[Name(id='distributions', ctx=Load())], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[arg(arg='config')], kw_defaults=[Constant(value=None)], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='multi_similarity_weight'), ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_multi_similarity_loss', ctx=Store())], value=Call(func=Name(id='MultiSimilarityLoss', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='multi_similarity_params'), ctx=Load()))]))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='proxy_nca_weight'), ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_proxy_nca_loss', ctx=Store())], value=Call(func=Name(id='ProxyNCALoss', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='distribution', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='_xent_loss', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='logits'), arg(arg='labelsvWcD')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='use_softmax'), ctx=Load()), body=[Assign(targets=[Name(id='kwarg_s', ctx=Store())], value=Dict(keys=[], values=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='xent_smoothing'), ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Subscript(value=Name(id='kwarg_s', ctx=Load()), slice=Constant(value='label_smoothing'), ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='xent_smoothing'), ctx=Load()))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='cross_entropy', ctx=Load()), args=[Name(id='logits', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[keyword(value=Name(id='kwarg_s', ctx=Load()))]))], orelse=[Return(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='nll_loss', ctx=Load()), args=[Name(id='logits', ctx=Load()), Name(id='labelsvWcD', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='_hib_lossjgORA', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='distributions'), arg(arg='labelsvWcD')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ƃʮ  ˞  õ ')), Assign(targets=[Name(id='same_pro_bs', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='scorer', ctx=Load()), args=[Subscript(value=Name(id='distributions', ctx=Load()), slice=Constant(value=None), ctx=Load()), Subscript(value=Name(id='distributions', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='same_maskSsHk', ctx=Store())], value=Compare(left=Subscript(value=Name(id='labelsvWcD', ctx=Load()), slice=Constant(value=None), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='labelsvWcD', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())])), Assign(targets=[Name(id='positive_probsTSqdn', ctx=Store())], value=Subscript(value=Name(id='same_pro_bs', ctx=Load()), slice=Name(id='same_maskSsHk', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='neg_ative_probs', ctx=Store())], value=Subscript(value=Name(id='same_pro_bs', ctx=Load()), slice=UnaryOp(op=Invert(), operand=Name(id='same_maskSsHk', ctx=Load())), ctx=Load())), Assign(targets=[Name(id='positive_xent', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='binary_cross_entropy', ctx=Load()), args=[Name(id='positive_probsTSqdn', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones_like', ctx=Load()), args=[Name(id='positive_probsTSqdn', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='negative_xent', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='binary_cross_entropy', ctx=Load()), args=[Name(id='neg_ative_probs', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Name(id='neg_ative_probs', ctx=Load())], keywords=[])], keywords=[])), Return(value=BinOp(left=Constant(value=0.5), op=Mult(), right=BinOp(left=Name(id='positive_xent', ctx=Load()), op=Add(), right=Name(id='negative_xent', ctx=Load()))))], decorator_list=[])], decorator_list=[]), ClassDef(name='Criter', bases=[Attribute(value=Name(id='dl', ctx=Load()), attr='CriterionCallback', ctx=Load())], keywords=[], body=[FunctionDef(name='on_stage_start', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='runner', annotation=Constant(value='IRunner'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='on_stage_start', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='get_attr', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[keyword(arg='key', value=Constant(value='model')), keyword(arg='inner_key', value=Constant(value='model'))])), Assign(targets=[Name(id='scorer', ctx=Store())], value=Call(func=Name(id='get_attr', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[keyword(arg='key', value=Constant(value='model')), keyword(arg='inner_key', value=Constant(value='scorer'))])), Assert(test=Compare(left=Name(id='scorer', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='criterion', ctx=Load()), attr='scorer', ctx=Store())], value=Name(id='scorer', ctx=Load())), Assign(targets=[Name(id='distribution', ctx=Store())], value=Attribute(value=Call(func=Name(id='get_base_module', ctx=Load()), args=[Name(id='model', ctx=Load())], keywords=[]), attr='distribution', ctx=Load())), Assert(test=Compare(left=Name(id='distribution', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])), Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='criterion', ctx=Load()), attr='distribution', ctx=Store())], value=Name(id='distribution', ctx=Load()))], decorator_list=[]), FunctionDef(name='o_n_stage_end', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='runner', annotation=Constant(value='IRunner'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='΅   ')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='on_stage_end', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='criterion', ctx=Load()), attr='scorer', ctx=Store())], value=Constant(value=None)), Assign(targets=[Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='criterion', ctx=Load()), attr='distribution', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='_metric_fn', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwarg_s'), defaults=[]), body=[Expr(value=Constant(value='         Ł ͕  ')), With(items=[withitem(context_expr=Call(func=Name(id='disable_amp', ctx=Load()), args=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='self', ctx=Load()), attr='_amp', ctx=Load()))], keywords=[]))], body=[Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='criterion', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwarg_s', ctx=Load()))]))])], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], vararg=arg(arg='args'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwarg_s'), defaults=[]), body=[Expr(value=Constant(value=' ͕')), Assign(targets=[Name(id='ampJOH', ctx=Store())], value=Call(func=Attribute(value=Name(id='kwarg_s', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='amp'), Constant(value=False)], keywords=[])), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[Starred(value=Name(id='args', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwarg_s', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_amp', ctx=Store())], value=Name(id='ampJOH', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])