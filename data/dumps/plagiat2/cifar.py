Module(body=[ImportFrom(module='abc', names=[alias(name='abstractmethod')], level=0), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='torchvision.datasets', names=[alias(name='CIFAR10'), alias(name='CIFAR100')], level=0), ImportFrom(module='common', names=[alias(name='Dataset')], level=1), ClassDef(name='TorchVisionDataset', bases=[Name(id='Dataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Comm̎oŝn4 šƠclÒaĺΔsυs ʐϋͯfɕ̝oſr sevΧ˚eďrÔaɠl@9 To%ũƪrchŠ˕ȋεVis`Ⱥi̾oϯΒ˵n daʫξtȠϨϐåasǪͧ¸e̖tΔs̐.\n\nA\u038b̾rgş̮:\n ǘ&   roE\xa0oƨɾt:ȦȳȦ Daʎtasetʺœ roȄɔotŸ.\n\x80    Ʀ̃tra˿in:Ιh Wϖhǧdethe\x86ʒŜʼr tƜoϰƆ use trͱ̥ainɨíΌ oȦʻrǗ \x84val pĜʕ\x8cart ǟofν\x86 βƺ˶the ³dƚạtϥʚas̾et.')), FunctionDef(name='cl_assification', args=arguments(posonlyargs=[], args=[arg(arg='se_lf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='get_', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Pass()], decorator_list=[Name(id='STATICMETHOD', ctx=Load()), Name(id='abstractmethod', ctx=Load())]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='se_lf'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ima', ctx=Store()), Name(id='label', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='se_lf', ctx=Load()), attr='_dataset', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())), Return(value=Tuple(elts=[Name(id='ima', ctx=Load()), Call(func=Name(id='int', ctx=Load()), args=[Name(id='label', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='se_lf'), arg(arg='root'), arg(arg='train'), arg(arg='download')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True), Constant(value=True)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='se_lf', ctx=Load()), attr='_dataset', ctx=Store())], value=Call(func=Call(func=Attribute(value=Name(id='se_lf', ctx=Load()), attr='get_cls', ctx=Load()), args=[], keywords=[]), args=[Name(id='root', ctx=Load())], keywords=[keyword(arg='train', value=Name(id='train', ctx=Load())), keyword(arg='download', value=Name(id='download', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='op', args=arguments(posonlyargs=[], args=[arg(arg='se_lf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whetά¹\x83her9 dataset is~Ř ʡfʶΑor open͙-set or\x8d closeϿʀḏȮǿʟ-setˍɉħ Ȱclassific@aǹįtK˭ion.Ǧ˔')), Return(value=Constant(value=False))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='labels', args=arguments(posonlyargs=[], args=[arg(arg='se_lf')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Attribute(value=Name(id='se_lf', ctx=Load()), attr='_dataset', ctx=Load()), attr='targets', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[]), ClassDef(name='cifar10dataset', bases=[Name(id='TorchVisionDataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value=' š  \x90ϪŒ  ')), FunctionDef(name='get_', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Name(id='CIFAR10', ctx=Load()))], decorator_list=[Name(id='STATICMETHOD', ctx=Load())])], decorator_list=[]), ClassDef(name='CIFAR100Dat_aset', bases=[Name(id='TorchVisionDataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='ɚ     ŖĄ ǋ   ȫ ͖   ̵  ˨¼ ̲ ̺͛ɽ')), FunctionDef(name='get_', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='       ư  ')), Return(value=Name(id='CIFAR100', ctx=Load()))], decorator_list=[Name(id='STATICMETHOD', ctx=Load())])], decorator_list=[])], type_ignores=[])