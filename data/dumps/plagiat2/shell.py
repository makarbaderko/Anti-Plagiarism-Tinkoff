Module(body=[Import(names=[alias(name='subprocess')]), ImportFrom(module='typing', names=[alias(name='Optional'), alias(name='Tuple')], level=0), Import(names=[alias(name='typer')]), ClassDef(name='ShellEr', bases=[Name(id='Exception', ctx=Load())], keywords=[], body=[Expr(value=Constant(value=' ε               ')), Expr(value=Constant(value=Ellipsis))], decorator_list=[]), FunctionDef(name='shel', args=arguments(posonlyargs=[], args=[arg(arg='command', annotation=Name(id='str', ctx=Load()))], vararg=arg(arg='args', annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), kwonlyargs=[arg(arg='capture_output', annotation=Name(id='bool', ctx=Load()))], kw_defaults=[Constant(value=False)], defaults=[]), body=[Expr(value=Constant(value='  Κƻ        \x91̶Ď    ̐˂  ')), Assign(targets=[Name(id='out', ctx=Store())], value=Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='run', ctx=Load()), args=[BinOp(left=Call(func=Attribute(value=Name(id='command', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=' ')], keywords=[]), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))], keywords=[keyword(arg='capture_output', value=Name(id='capture_output', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='out', ctx=Load()), attr='returncode', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[If(test=Name(id='capture_output', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='typer', ctx=Load()), attr='echo', ctx=Load()), args=[BoolOp(op=Or(), values=[Attribute(value=Name(id='out', ctx=Load()), attr='stdout', ctx=Load()), Attribute(value=Name(id='out', ctx=Load()), attr='stderr', ctx=Load())])], keywords=[]))], orelse=[]), Raise(exc=Call(func=Name(id='ShellEr', ctx=Load()), args=[JoinedStr(values=[Constant(value='Shell command returns code '), FormattedValue(value=Attribute(value=Name(id='out', ctx=Load()), attr='returncode', ctx=Load()), conversion=-1)])], keywords=[]))], orelse=[]), If(test=Name(id='capture_output', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='out', ctx=Load()), attr='stdout', ctx=Load()), attr='decode', ctx=Load()), args=[], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])