Module(body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='etna.transforms.math', names=[alias(name='MADTransform')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='typing', names=[alias(name='Any')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='StdTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='MaxTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='MeanTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='MedianTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='MinMaxDifferenceTransform')], level=0), Import(names=[alias(name='pandas', asname='pd')]), ImportFrom(module='etna.transforms.math', names=[alias(name='QuantileTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='MinTransform')], level=0), ImportFrom(module='etna.transforms.math', names=[alias(name='SumTransform')], level=0), FunctionDef(name='simpl', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[keyword(arg='periods', value=Name(id='n', ctx=Load()))])])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='n', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_1')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Return(value=Name(id='df', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), FunctionDef(name='d_f_for_agg', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[keyword(arg='periods', value=Name(id='n', ctx=Load()))])])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=3), Constant(value=2), Constant(value=4), Constant(value=9), Constant(value=8), Constant(value=5), Constant(value=6), Constant(value=0)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_1')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Return(value=Name(id='df', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), FunctionDef(name='test_interface_simple', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='class_name', annotation=Name(id='Any', ctx=Load())), arg(arg='out_co_lumn', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ũķ ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='class_name', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='out_column', value=Name(id='out_co_lumn', ctx=Load())), keyword(arg='in_column', value=Constant(value='target'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='simpl', ctx=Load()))])), Assign(targets=[Name(id='result_column', ctx=Store())], value=IfExp(test=Compare(left=Name(id='out_co_lumn', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='out_co_lumn', ctx=Load()), orelse=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sorted', ctx=Load()), args=[BinOp(left=List(elts=[Name(id='result_column', ctx=Load())], ctx=Load()), op=Add(), right=List(elts=[Constant(value='target')], ctx=Load()))], keywords=[])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='class_name,out_column'), Tuple(elts=[Tuple(elts=[Name(id='MaxTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MaxTransform', ctx=Load()), Constant(value='test_max')], ctx=Load()), Tuple(elts=[Name(id='MinTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MinTransform', ctx=Load()), Constant(value='test_min')], ctx=Load()), Tuple(elts=[Name(id='MedianTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MedianTransform', ctx=Load()), Constant(value='test_median')], ctx=Load()), Tuple(elts=[Name(id='MeanTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MeanTransform', ctx=Load()), Constant(value='test_mean')], ctx=Load()), Tuple(elts=[Name(id='StdTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='StdTransform', ctx=Load()), Constant(value='test_std')], ctx=Load()), Tuple(elts=[Name(id='MADTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MADTransform', ctx=Load()), Constant(value='test_mad')], ctx=Load()), Tuple(elts=[Name(id='MinMaxDifferenceTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='MinMaxDifferenceTransform', ctx=Load()), Constant(value='test_min_max_diff')], ctx=Load()), Tuple(elts=[Name(id='SumTransform', ctx=Load()), Constant(value=None)], ctx=Load()), Tuple(elts=[Name(id='SumTransform', ctx=Load()), Constant(value='test_sum')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_mad_transform', args=arguments(posonlyargs=[], args=[arg(arg='d_f_for_agg', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MADTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='d_f_for_agg', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='expect_ed', ctx=Load()), Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=3), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=17)), List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), BinOp(left=Constant(value=4), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=8), op=Div(), right=Constant(value=3)), Constant(value=2), BinOp(left=Constant(value=14), op=Div(), right=Constant(value=9)), BinOp(left=Constant(value=10), op=Div(), right=Constant(value=9)), BinOp(left=Constant(value=22), op=Div(), right=Constant(value=9))], ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value=4), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), List(elts=[Constant(value=0), Constant(value=1), BinOp(left=Constant(value=4), op=Div(), right=Constant(value=3)), Constant(value=1.25), Constant(value=1), Constant(value=2.25), Constant(value=2.75), Constant(value=2), Constant(value=1.5), BinOp(left=Constant(value=9.5), op=Div(), right=Constant(value=4))], ctx=Load())], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=0), List(elts=[Constant(value=0), Constant(value=1), BinOp(left=Constant(value=4), op=Div(), right=Constant(value=3)), Constant(value=1.25), Constant(value=1.44), BinOp(left=Constant(value=7), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=138), op=Div(), right=Constant(value=49)), Constant(value=2.625), BinOp(left=Constant(value=208), op=Div(), right=Constant(value=81)), BinOp(left=Constant(value=27), op=Div(), right=Constant(value=10))], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='t_est_interface_quantile', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='out_co_lumn', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='QuantileTransform', ctx=Load()), args=[], keywords=[keyword(arg='quantile', value=Constant(value=0.7)), keyword(arg='window', value=Constant(value=4)), keyword(arg='out_column', value=Name(id='out_co_lumn', ctx=Load())), keyword(arg='in_column', value=Constant(value='target'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='simpl', ctx=Load()))])), Assign(targets=[Name(id='result_column', ctx=Store())], value=IfExp(test=Compare(left=Name(id='out_co_lumn', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Name(id='out_co_lumn', ctx=Load()), orelse=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sorted', ctx=Load()), args=[BinOp(left=List(elts=[Name(id='result_column', ctx=Load())], ctx=Load()), op=Add(), right=List(elts=[Constant(value='target')], ctx=Load()))], keywords=[])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='out_column'), Tuple(elts=[Constant(value=None), Constant(value='test_q')], ctx=Load())], keywords=[])]), FunctionDef(name='test__sum_feature', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='SumTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='expect_ed', ctx=Load()), Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=3), Constant(value=6), Constant(value=10), Constant(value=15), Constant(value=21), Constant(value=28), Constant(value=36), Constant(value=45)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=3), Constant(value=6), Constant(value=10), Constant(value=15), Constant(value=21), Constant(value=28), Constant(value=36), Constant(value=45)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=3), Constant(value=6), Constant(value=9), Constant(value=12), Constant(value=15), Constant(value=18), Constant(value=21), Constant(value=24)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=3), Constant(value=6), Constant(value=9), Constant(value=12), Constant(value=15), Constant(value=18), Constant(value=21), Constant(value=24)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_min_max_d', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ͱǣ  ë ¤ē   ¹êϞǛͩ   ̉ ʢ   ʘ̑ ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MinMaxDifferenceTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=2), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=1), Constant(value=2), Constant(value=2), Constant(value=2), Constant(value=2), Constant(value=2), Constant(value=2), Constant(value=2), Constant(value=2)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_max_featureOyW', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MaxTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=2), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8), Constant(value=9)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_median_feature', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ȁ  Ŀ      ǃ  ŵ Ϩ    ĺȆ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MedianTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=3), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0.5), Constant(value=1), Constant(value=1.5), Constant(value=2), Constant(value=2.5), Constant(value=3), Constant(value=3.5), Constant(value=4), Constant(value=4.5)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_std_feature', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='StdTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=3), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), BinOp(left=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=2)), op=Pow(), right=Constant(value=0.5)), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='df_for_agg_with_nan', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=10)), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[keyword(arg='periods', value=Name(id='n', ctx=Load()))])])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=3), Constant(value=None), Constant(value=4), Constant(value=9), Constant(value=8), Constant(value=5), Constant(value=6), Constant(value=0)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_1')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Return(value=Name(id='df', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), FunctionDef(name='test_mad_transform_with_nans', args=arguments(posonlyargs=[], args=[arg(arg='df_for_agg_with_nan', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MADTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='df_for_agg_with_nan', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='expect_ed', ctx=Load()), Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=3), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=17)), List(elts=[UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), BinOp(left=Constant(value=4), op=Div(), right=Constant(value=3)), UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), UnaryOp(op=USub(), operand=Constant(value=17)), Constant(value=2), BinOp(left=Constant(value=14), op=Div(), right=Constant(value=9)), BinOp(left=Constant(value=10), op=Div(), right=Constant(value=9)), BinOp(left=Constant(value=22), op=Div(), right=Constant(value=9))], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_min_feature', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='seasonality', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='         ˀ \x9f      ǭ   Ή')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MinTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='seasonality', value=Name(id='seasonality', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,seasonality,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=2), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=0), Constant(value=1), Constant(value=0), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_sum_feature_with_nan', args=arguments(posonlyargs=[], args=[arg(arg='df_for_agg_with_nan', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ͩ ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='SumTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='df_for_agg_with_nan', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='expect_ed', ctx=Load()), Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=0), Constant(value=3), Constant(value=3), Constant(value=7), Constant(value=16), Constant(value=24), Constant(value=29), Constant(value=35), Constant(value=35)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_mean_feature', args=arguments(posonlyargs=[], args=[arg(arg='simpl', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='window', annotation=Name(id='int', ctx=Load())), arg(arg='seasonality', annotation=Name(id='int', ctx=Load())), arg(arg='alpha', annotation=Name(id='float', ctx=Load())), arg(arg='pe_riods', annotation=Name(id='int', ctx=Load())), arg(arg='fill_na', annotation=Name(id='float', ctx=Load())), arg(arg='expect_ed', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='MeanTransform', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='seasonality', value=Name(id='seasonality', ctx=Load())), keyword(arg='alpha', value=Name(id='alpha', ctx=Load())), keyword(arg='min_periods', value=Name(id='pe_riods', ctx=Load())), keyword(arg='fillna', value=Name(id='fill_na', ctx=Load())), keyword(arg='in_column', value=Constant(value='target')), keyword(arg='out_column', value=Constant(value='result'))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='simpl', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Store())], value=Name(id='expect_ed', ctx=Load())), Assert(test=Call(func=Attribute(value=Compare(left=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='expected'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Constant(value='segment_1'), ctx=Load()), slice=Constant(value='result'), ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='window,seasonality,alpha,periods,fill_na,expected'), Tuple(elts=[Tuple(elts=[Constant(value=10), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0.5), Constant(value=1), Constant(value=1.5), Constant(value=2), Constant(value=2.5), Constant(value=3), Constant(value=3.5), Constant(value=4), Constant(value=4.5)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1), Constant(value=1), Constant(value=1), Constant(value=0), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0.5), Constant(value=1), Constant(value=1.5), Constant(value=2), Constant(value=2.5), Constant(value=3), Constant(value=3.5), Constant(value=4), Constant(value=4.5)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), Constant(value=1), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0.5), Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7), Constant(value=8)], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), Constant(value=0.5), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=0.5), BinOp(left=Constant(value=2.5), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=4.25), op=Div(), right=Constant(value=3)), Constant(value=2), BinOp(left=Constant(value=7.75), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=9.5), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=11.25), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=13), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=14.75), op=Div(), right=Constant(value=3))], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=1), Constant(value=0.5), Constant(value=3), UnaryOp(op=USub(), operand=Constant(value=12)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=12)), UnaryOp(op=USub(), operand=Constant(value=12)), BinOp(left=Constant(value=2.5), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=4.25), op=Div(), right=Constant(value=3)), Constant(value=2), BinOp(left=Constant(value=7.75), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=9.5), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=11.25), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=13), op=Div(), right=Constant(value=3)), BinOp(left=Constant(value=14.75), op=Div(), right=Constant(value=3))], ctx=Load())], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value=3), Constant(value=2), Constant(value=1), Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=17)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=1), Constant(value=2), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6), Constant(value=7)], ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_fit_transform_with__nans', args=arguments(posonlyargs=[], args=[arg(arg='transform'), arg(arg='ts_diff_endings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='R̘Ϧ            ϳĚ ʿǶ    ϣ  ')), Expr(value=Call(func=Attribute(value=Name(id='ts_diff_endings', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='transform', ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='transform'), Tuple(elts=[Call(func=Name(id='MaxTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='MinTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='MedianTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='MeanTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='StdTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='MADTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='MinMaxDifferenceTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))]), Call(func=Name(id='SumTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='window', value=Constant(value=5))])], ctx=Load())], keywords=[])])], type_ignores=[])