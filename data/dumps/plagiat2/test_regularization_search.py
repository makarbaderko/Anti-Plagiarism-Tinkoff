Module(body=[Import(names=[alias(name='pytest')]), ImportFrom(module='etna.experimental.change_points', names=[alias(name='get_ruptures_regularization')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_ar_df')], level=0), ImportFrom(module='ruptures', names=[alias(name='Binseg')], level=0), ImportFrom(module='etna.experimental.change_points.regularization_search', names=[alias(name='_get_n_bkps')], level=0), FunctionDef(name='SIMPLE_CHANGE_POINTS_TS', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='κ\x8e̩ \x8f    ȝǩ')), Assign(targets=[Name(id='_df', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Constant(value=125)), keyword(arg='start_time', value=Constant(value='2021-05-20')), keyword(arg='n_segments', value=Constant(value=3)), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=42))])), Assign(targets=[Name(id='df_ts_format', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='_df', ctx=Load())], keywords=[])), Return(value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df_ts_format', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='D'))]))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='test_fail_get_regularization_low', args=arguments(posonlyargs=[], args=[arg(arg='n_bkps'), arg(arg='mo'), arg(arg='SIMPLE_CHANGE_POINTS_TS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ƞ  \u0382  ͨ Ř͓˽ Ȕ ͩ͒  Ϙ  ̄ ȴ& `')), Assign(targets=[Name(id='in_column', ctx=Store())], value=Constant(value='target')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Impossible number of changepoints. Please, increase max_value or increase n_bkps value.'))]))], body=[Assign(targets=[Name(id='_UGZv', ctx=Store())], value=Call(func=Name(id='get_ruptures_regularization', ctx=Load()), args=[Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load())], keywords=[keyword(arg='in_column', value=Name(id='in_column', ctx=Load())), keyword(arg='change_point_model', value=Call(func=Name(id='Binseg', ctx=Load()), args=[], keywords=[])), keyword(arg='n_bkps', value=Name(id='n_bkps', ctx=Load())), keyword(arg='mode', value=Name(id='mo', ctx=Load())), keyword(arg='max_value', value=Constant(value=1))]))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='n_bkps,mode'), Tuple(elts=[Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=3), Constant(value=1), Constant(value=19)]), Constant(value='pen')], ctx=Load()), Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=1), Constant(value=2), Constant(value=8)]), Constant(value='epsilon')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_get_regularization', args=arguments(posonlyargs=[], args=[arg(arg='n_bkps'), arg(arg='mo'), arg(arg='SIMPLE_CHANGE_POINTS_TS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='in_column', ctx=Store())], value=Constant(value='target')), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Name(id='get_ruptures_regularization', ctx=Load()), args=[Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load())], keywords=[keyword(arg='in_column', value=Name(id='in_column', ctx=Load())), keyword(arg='change_point_model', value=Call(func=Name(id='Binseg', ctx=Load()), args=[], keywords=[])), keyword(arg='n_bkps', value=Name(id='n_bkps', ctx=Load())), keyword(arg='mode', value=Name(id='mo', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[]), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[])])), For(target=Name(id='se', ctx=Store()), iter=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='series', ctx=Store())], value=Subscript(value=Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='se', ctx=Load()), Name(id='in_column', ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='answer', ctx=Store())], value=Call(func=Name(id='_get_n_bkps', ctx=Load()), args=[Name(id='series', ctx=Load()), Call(func=Name(id='Binseg', ctx=Load()), args=[], keywords=[])], keywords=[keyword(value=Dict(keys=[Name(id='mo', ctx=Load())], values=[Subscript(value=Subscript(value=Name(id='res', ctx=Load()), slice=Name(id='se', ctx=Load()), ctx=Load()), slice=Name(id='mo', ctx=Load()), ctx=Load())]))])), Assert(test=Compare(left=Name(id='answer', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='n_bkps', ctx=Load()), slice=Name(id='se', ctx=Load()), ctx=Load())]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='n_bkps,mode'), Tuple(elts=[Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=3), Constant(value=14), Constant(value=19)]), Constant(value='pen')], ctx=Load()), Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=5), Constant(value=2), Constant(value=8)]), Constant(value='epsilon')], ctx=Load()), Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=11), Constant(value=18), Constant(value=4)]), Constant(value='pen')], ctx=Load()), Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=18), Constant(value=21), Constant(value=7)]), Constant(value='epsilon')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_fail_get_regularization_high', args=arguments(posonlyargs=[], args=[arg(arg='n_bkps'), arg(arg='mo'), arg(arg='SIMPLE_CHANGE_POINTS_TS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='in_column', ctx=Store())], value=Constant(value='target')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Impossible number of changepoints. Please, decrease n_bkps value.'))]))], body=[Assign(targets=[Name(id='_UGZv', ctx=Store())], value=Call(func=Name(id='get_ruptures_regularization', ctx=Load()), args=[Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load())], keywords=[keyword(arg='in_column', value=Name(id='in_column', ctx=Load())), keyword(arg='change_point_model', value=Call(func=Name(id='Binseg', ctx=Load()), args=[], keywords=[])), keyword(arg='n_bkps', value=Name(id='n_bkps', ctx=Load())), keyword(arg='mode', value=Name(id='mo', ctx=Load()))]))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='n_bkps,mode'), Tuple(elts=[Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=3), Constant(value=34), Constant(value=19)]), Constant(value='pen')], ctx=Load()), Tuple(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1'), Constant(value='segment_2')], values=[Constant(value=45), Constant(value=2), Constant(value=8)]), Constant(value='epsilon')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_get_n_bkps', args=arguments(posonlyargs=[], args=[arg(arg='_segment'), arg(arg='params'), arg(arg='expected'), arg(arg='SIMPLE_CHANGE_POINTS_TS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    Ȯ       ')), Assign(targets=[Name(id='series', ctx=Store())], value=Subscript(value=Name(id='SIMPLE_CHANGE_POINTS_TS', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='_segment', ctx=Load()), Constant(value='target')], ctx=Load()), ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='_get_n_bkps', ctx=Load()), args=[Name(id='series', ctx=Load()), Call(func=Name(id='Binseg', ctx=Load()), args=[], keywords=[])], keywords=[keyword(value=Name(id='params', ctx=Load()))]), ops=[Eq()], comparators=[Name(id='expected', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='segment,params,expected'), Tuple(elts=[Tuple(elts=[Constant(value='segment_0'), Dict(keys=[Constant(value='pen')], values=[Constant(value=20)]), Constant(value=6)], ctx=Load()), Tuple(elts=[Constant(value='segment_0'), Dict(keys=[Constant(value='epsilon')], values=[Constant(value=20)]), Constant(value=24)], ctx=Load()), Tuple(elts=[Constant(value='segment_1'), Dict(keys=[Constant(value='pen')], values=[Constant(value=10)]), Constant(value=7)], ctx=Load()), Tuple(elts=[Constant(value='segment_1'), Dict(keys=[Constant(value='epsilon')], values=[Constant(value=100)]), Constant(value=12)], ctx=Load()), Tuple(elts=[Constant(value='segment_2'), Dict(keys=[Constant(value='pen')], values=[Constant(value=2)]), Constant(value=14)], ctx=Load()), Tuple(elts=[Constant(value='segment_2'), Dict(keys=[Constant(value='epsilon')], values=[Constant(value=200)]), Constant(value=6)], ctx=Load())], ctx=Load())], keywords=[])])], type_ignores=[])