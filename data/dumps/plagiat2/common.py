Module(body=[Import(names=[alias(name='pytest')]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='etna.models', names=[alias(name='ContextRequiredModelType')], level=0), ImportFrom(module='typing_extensions', names=[alias(name='get_args')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), Import(names=[alias(name='functools')]), FunctionDef(name='_test_prediction_in_sample_f', args=arguments(posonlyargs=[], args=[arg(arg='ts'), arg(arg='mo'), arg(arg='transform'), arg(arg='method_namebOgKX')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ó\x82Χ\x8e̿ū  h ́S5      ͪ εí ̖    ßI ')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='transform', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mo', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast_ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='D'))])), Expr(value=Call(func=Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='transform', ctx=Load()), args=[Attribute(value=Name(id='ts', ctx=Load()), attr='transforms', ctx=Load())], keywords=[])), Assign(targets=[Name(id='PREDICTION_SIZE', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='index', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast_ts', ctx=Store())], value=Call(func=Name(id='make_prediction', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='mo', ctx=Load())), keyword(arg='ts', value=Name(id='forecast_ts', ctx=Load())), keyword(arg='prediction_size', value=Name(id='PREDICTION_SIZE', ctx=Load())), keyword(arg='method_name', value=Name(id='method_namebOgKX', ctx=Load()))])), Assign(targets=[Name(id='forecast_dfZ', ctx=Store())], value=Call(func=Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='any', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Name(id='forecast_dfZ', ctx=Load()), slice=Constant(value='target'), ctx=Load()), attr='isna', ctx=Load()), args=[], keywords=[])], keywords=[])))], decorator_list=[]), FunctionDef(name='make_prediction', args=arguments(posonlyargs=[], args=[arg(arg='mo'), arg(arg='ts'), arg(arg='PREDICTION_SIZE'), arg(arg='method_namebOgKX')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ʵ')), Assign(targets=[Name(id='method', ctx=Store())], value=Call(func=Name(id='getattr', ctx=Load()), args=[Name(id='mo', ctx=Load()), Name(id='method_namebOgKX', ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstan', ctx=Load()), args=[Name(id='mo', ctx=Load()), Call(func=Name(id='get_args', ctx=Load()), args=[Name(id='ContextRequiredModelType', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='method', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Name(id='PREDICTION_SIZE', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='method', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[]))]), Return(value=Name(id='ts', ctx=Load()))], decorator_list=[], returns=Name(id='TSDataset', ctx=Load())), FunctionDef(name='to_b', args=arguments(posonlyargs=[], args=[arg(arg='raises'), arg(arg='MATCH')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[FunctionDef(name='to_bV', args=arguments(posonlyargs=[], args=[arg(arg='fu')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='wrappe', args=arguments(posonlyargs=[], args=[], vararg=arg(arg='arg'), kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Constant(value='        ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='raises', ctx=Load())], keywords=[keyword(arg='match', value=Name(id='MATCH', ctx=Load()))]))], body=[Return(value=Call(func=Name(id='fu', ctx=Load()), args=[Starred(value=Name(id='arg', ctx=Load()), ctx=Load())], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))]))])], decorator_list=[Call(func=Attribute(value=Name(id='functools', ctx=Load()), attr='wraps', ctx=Load()), args=[Name(id='fu', ctx=Load())], keywords=[])]), Return(value=Name(id='wrappe', ctx=Load()))], decorator_list=[]), Return(value=Name(id='to_bV', ctx=Load()))], decorator_list=[]), FunctionDef(name='_test_prediction_in_sample_suffix', args=arguments(posonlyargs=[], args=[arg(arg='ts'), arg(arg='mo'), arg(arg='transform'), arg(arg='method_namebOgKX'), arg(arg='num_skip_pointswZOS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='transform', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mo', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast_ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='D'))])), Expr(value=Call(func=Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='transform', ctx=Load()), args=[Attribute(value=Name(id='ts', ctx=Load()), attr='transforms', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='df', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Slice(lower=BinOp(left=Name(id='num_skip_pointswZOS', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='mo', ctx=Load()), attr='context_size', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='PREDICTION_SIZE', ctx=Store())], value=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='index', ctx=Load())], keywords=[]), op=Sub(), right=Name(id='num_skip_pointswZOS', ctx=Load()))), Assign(targets=[Name(id='forecast_ts', ctx=Store())], value=Call(func=Name(id='make_prediction', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='mo', ctx=Load())), keyword(arg='ts', value=Name(id='forecast_ts', ctx=Load())), keyword(arg='prediction_size', value=Name(id='PREDICTION_SIZE', ctx=Load())), keyword(arg='method_name', value=Name(id='method_namebOgKX', ctx=Load()))])), Assign(targets=[Name(id='forecast_dfZ', ctx=Store())], value=Call(func=Attribute(value=Name(id='forecast_ts', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='any', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Name(id='forecast_dfZ', ctx=Load()), slice=Constant(value='target'), ctx=Load()), attr='isna', ctx=Load()), args=[], keywords=[])], keywords=[])))], decorator_list=[])], type_ignores=[])