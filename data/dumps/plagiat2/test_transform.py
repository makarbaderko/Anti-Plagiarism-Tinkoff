Module(body=[Import(names=[alias(name='random')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='probabilistic_embeddings.dataset.transform', names=[alias(name='*')], level=0), ImportFrom(module='probabilistic_embeddings.dataset.common', names=[alias(name='Dataset')], level=0), ImportFrom(module='torchvision.transforms', names=[alias(name='ToTensor')], level=0), ClassDef(name='SimpleDa_taset', bases=[Name(id='Dataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Ǽ Σ   ^ʗό  ̧o ǹ  ͺ  \x88 ̟ þ Ȯ ċ')), FunctionDef(name='classification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='o', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     ')), Return(value=Constant(value=False))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='labelsYJyyD', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='features')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='label')]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='sup_er', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='concatenate', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=10)], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), Constant(value=10)], keywords=[keyword(arg='size', value=Constant(value=90))])], ctx=Load())], keywords=[]), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='features', ctx=Load()), ops=[Eq()], comparators=[Constant(value='label')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_features', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='tile', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None), Constant(value=None), Constant(value=None)], ctx=Load()), ctx=Load()), Tuple(elts=[Constant(value=1), Constant(value=32), Constant(value=8), Constant(value=3)], ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='features', ctx=Load()), ops=[Eq()], comparators=[Constant(value='range')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_features', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='tile', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[BinOp(left=Constant(value=32), op=Mult(), right=Constant(value=8))], keywords=[]), attr='reshape', ctx=Load()), args=[Constant(value=1), Constant(value=32), Constant(value=8), Constant(value=1)], keywords=[]), Tuple(elts=[Call(func=Name(id='le_n', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load())], keywords=[]), Constant(value=1), Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[]), op=Mod(), right=Constant(value=255)), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Unknown features type: {}'), attr='format', ctx=Load()), args=[Name(id='features', ctx=Load())], keywords=[])], keywords=[]))])])], decorator_list=[]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ƴ̱Ĭ  ę ͙ şːħ  ')), Return(value=Tuple(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_features', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='TestTra', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_merged', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='       ')), Assign(targets=[Name(id='dataset1', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='dataset2', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='MergedDatasetkW', ctx=Load()), args=[Name(id='dataset1', ctx=Load()), Name(id='dataset2', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[]), BinOp(left=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset1', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset2', ctx=Load())], keywords=[]))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=10)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='sample', ctx=Load()), args=[Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[]), Constant(value=20)], keywords=[]), body=[If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Lt()], comparators=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset1', ctx=Load())], keywords=[])]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='dataset1', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='dataset2', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset1', ctx=Load())], keywords=[])), ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))])], orelse=[])], decorator_list=[]), FunctionDef(name='TEST_SPLIT_CROSSVAL_CLASSES', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ƒ{ \u03838 φ     Ͱϰ   ')), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), For(target=Name(id='inte_rleave', ctx=Store()), iter=List(elts=[Constant(value=True), Constant(value=False)], ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='val', ctx=Store())], ctx=Store())], value=Call(func=Name(id='split_crossval_classes', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Constant(value=0), Constant(value=5)], keywords=[keyword(arg='interleave', value=Name(id='inte_rleave', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='train', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=8)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='val', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=2)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BinOp(left=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[])), Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='train_labels', ctx=Store())], value=SetComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='train', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='val_labels', ctx=Store())], value=SetComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='val', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertFalse', ctx=Load()), args=[BinOp(left=Name(id='train_labels', ctx=Load()), op=BitAnd(), right=Name(id='val_labels', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BinOp(left=Name(id='train_labels', ctx=Load()), op=BitOr(), right=Name(id='val_labels', ctx=Load())), Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='labels', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='train2', ctx=Store()), Name(id='val2', ctx=Store())], ctx=Store())], value=Call(func=Name(id='split_crossval_classes', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Constant(value=1), Constant(value=5)], keywords=[keyword(arg='interleave', value=Name(id='inte_rleave', ctx=Load()))])), Assign(targets=[Name(id='val2_labels', ctx=Store())], value=SetComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='val2', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='val2', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertFalse', ctx=Load()), args=[BinOp(left=Name(id='val_labels', ctx=Load()), op=BitAnd(), right=Name(id='val2_labels', ctx=Load()))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='TEST_PRELOAD', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='       ͥ   ')), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='preloaded', ctx=Store())], value=Call(func=Name(id='PreloadDataset', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[keyword(arg='image_size', value=Constant(value=8))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[]), Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='preloaded', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='sample', ctx=Load()), args=[Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[]), Constant(value=20)], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Subscript(value=Name(id='preloaded', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load()), Subscript(value=Subscript(value=Name(id='preloaded', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='te_st_lossy', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   Àʔ˳')), Assign(targets=[Name(id='base_dat', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[keyword(arg='features', value=Constant(value='range'))])), Assign(targets=[Name(id='lossy_con', ctx=Store())], value=Dict(keys=[Constant(value='center_crop_range')], values=[List(elts=[Constant(value=0.25), Constant(value=0.25)], ctx=Load())])), Assign(targets=[Name(id='image_gt_list', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[List(elts=[List(elts=[BinOp(left=BinOp(left=Constant(value=15), op=Mult(), right=Constant(value=8)), op=Add(), right=Constant(value=3)), BinOp(left=BinOp(left=Constant(value=15), op=Mult(), right=Constant(value=8)), op=Add(), right=Constant(value=4))], ctx=Load()), List(elts=[BinOp(left=BinOp(left=Constant(value=16), op=Mult(), right=Constant(value=8)), op=Add(), right=Constant(value=3)), BinOp(left=BinOp(left=Constant(value=16), op=Mult(), right=Constant(value=8)), op=Add(), right=Constant(value=4))], ctx=Load())], ctx=Load())], keywords=[]), op=Mod(), right=Constant(value=255))), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='LossyDataset', ctx=Load()), args=[Name(id='base_dat', ctx=Load())], keywords=[keyword(arg='config', value=Name(id='lossy_con', ctx=Load()))])), Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value=5), ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='IMAGE_GT', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='tile', ctx=Load()), args=[Call(func=Attribute(value=Name(id='image_gt_list', ctx=Load()), attr='reshape', ctx=Load()), args=[Constant(value=2), Constant(value=2), Constant(value=1)], keywords=[]), Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=3)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Compare(left=Name(id='image', ctx=Load()), ops=[Eq()], comparators=[Name(id='IMAGE_GT', ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='LossyDataset', ctx=Load()), args=[Call(func=Name(id='TransformDataset', ctx=Load()), args=[Name(id='base_dat', ctx=Load()), Call(func=Name(id='ToTensor', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[keyword(arg='config', value=Name(id='lossy_con', ctx=Load()))])), Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value=5), ctx=Load()), slice=Constant(value=0), ctx=Load()), op=Mult(), right=Constant(value=255)), attr='round', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='IMAGE_GT', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tile', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='image_gt_list', ctx=Load())], keywords=[]), attr='reshape', ctx=Load()), args=[Constant(value=1), Constant(value=2), Constant(value=2)], keywords=[]), Tuple(elts=[Constant(value=3), Constant(value=1), Constant(value=1)], ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Compare(left=Name(id='image', ctx=Load()), ops=[Eq()], comparators=[Name(id='IMAGE_GT', ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_sample_pairs', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='base_dat', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), For(target=Name(id='size_factor', ctx=Store()), iter=List(elts=[Constant(value=1), Constant(value=3)], ctx=Load()), body=[Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SamplePairsDatasettW', ctx=Load()), args=[Name(id='base_dat', ctx=Load())], keywords=[keyword(arg='size_factor', value=Name(id='size_factor', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[]), BinOp(left=BinOp(left=Constant(value=2), op=Mult(), right=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='base_dat', ctx=Load())], keywords=[])), op=Mult(), right=Name(id='size_factor', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='dataset', ctx=Load()), attr='priors', ctx=Load()), slice=Constant(value=0), ctx=Load()), Constant(value=0.5)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='dataset', ctx=Load()), attr='priors', ctx=Load()), slice=Constant(value=1), ctx=Load()), Constant(value=0.5)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='sample', ctx=Load()), args=[Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[]), Constant(value=20)], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='f1', ctx=Store()), Name(id='f2', ctx=Store())], ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='LABEL', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())), If(test=Name(id='LABEL', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Name(id='f1', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Name(id='f2', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertNotEqual', ctx=Load()), args=[Subscript(value=Name(id='f1', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Name(id='f2', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]))])], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='test_repeateSJ', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='RepeatDataset', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[]), Constant(value=300)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='sample', ctx=Load()), args=[Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[]), Constant(value=20)], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_spl_it_classes', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ļ ŗϠM     ` ĺ; ǡΨ˯e     ǵ   ƛ İ _ ûΘ ˋ')), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), For(target=Name(id='inte_rleave', ctx=Store()), iter=List(elts=[Constant(value=True), Constant(value=False)], ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='val', ctx=Store())], ctx=Store())], value=Call(func=Name(id='SPLIT_CLASSES', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Constant(value=0.3)], keywords=[keyword(arg='interleave', value=Name(id='inte_rleave', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='train', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='val', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=7)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BinOp(left=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[])), Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='train_labels', ctx=Store())], value=SetComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='train', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='val_labels', ctx=Store())], value=SetComp(elt=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='val', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='val', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertFalse', ctx=Load()), args=[BinOp(left=Name(id='train_labels', ctx=Load()), op=BitAnd(), right=Name(id='val_labels', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[BinOp(left=Name(id='train_labels', ctx=Load()), op=BitOr(), right=Name(id='val_labels', ctx=Load())), Call(func=Name(id='set', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='labels', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_dataset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x80 Ɉ ̣ l Ō    ɤ  ʨ \x80    kųɧ ̌ɇ  ')), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SimpleDa_taset', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='le_n', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[]), Constant(value=100)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='num_classes', ctx=Load()), Constant(value=10)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='sum', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='priors', ctx=Load())], keywords=[]), Constant(value=1)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='dataset', ctx=Load()), attr='priors', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)])], keywords=[])], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='sample', ctx=Load()), args=[Call(func=Name(id='rangeLHIxH', ctx=Load()), args=[Constant(value=100)], keywords=[]), Constant(value=20)], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])