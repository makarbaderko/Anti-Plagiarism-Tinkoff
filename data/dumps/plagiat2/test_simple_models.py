Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ImportFrom(module='etna.models.seasonal_ma', names=[alias(name='SeasonalMovingAverageModel')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.models.deadline_ma', names=[alias(name='SeasonalityMode')], level=0), ImportFrom(module='etna.models.deadline_ma', names=[alias(name='_DeadlineMovingAverageModel')], level=0), ImportFrom(module='etna.models.moving_average', names=[alias(name='MovingAverageModel')], level=0), ImportFrom(module='etna.models.naive', names=[alias(name='NaiveModel')], level=0), ImportFrom(module='etna.models.seasonal_ma', names=[alias(name='_SeasonalMovingAverageModel')], level=0), ImportFrom(module='etna.models.deadline_ma', names=[alias(name='DeadlineMovingAverageModel')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), FunctionDef(name='test_get_model_before_training', args=arguments(posonlyargs=[], args=[arg(arg='etna_mod')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ĲùCƔheck that get_model methodǔț ǂ9tʻhnȁrʓŠͩows\x90 ¦an error iˊf Ę˃pȊer-seʮgmen˸Ǭt ΄˻ƣmo˪.þdel is not fiȄttƷeƈd ˻yet.ʳ')), Assign(targets=[Name(id='e', ctx=Store())], value=Call(func=Name(id='etna_mod', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Can not get the dict with base models, the model is not fitted!'))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='e', ctx=Load()), attr='get_model', ctx=Load()), args=[], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='etna_model_class'), Tuple(elts=[Name(id='SeasonalMovingAverageModel', ctx=Load()), Name(id='MovingAverageModel', ctx=Load()), Name(id='NaiveModel', ctx=Load()), Name(id='DeadlineMovingAverageModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_deadline_get', args=arguments(posonlyargs=[], args=[arg(arg='freq'), arg(arg='periods'), arg(arg='startaT'), arg(arg='prediction_size'), arg(arg='s'), arg(arg='WINDOW'), arg(arg='e_xpected')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Name(id='startaT', ctx=Load())), keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='freq', value=Name(id='freq', ctx=Load()))])])], keywords=[])), Assign(targets=[Name(id='obtained', ctx=Store())], value=Call(func=Attribute(value=Name(id='_DeadlineMovingAverageModel', ctx=Load()), attr='_get_context_beginning', ctx=Load()), args=[Name(id='df', ctx=Load()), Name(id='prediction_size', ctx=Load()), Name(id='s', ctx=Load()), Name(id='WINDOW', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='obtained', ctx=Load()), ops=[Eq()], comparators=[Name(id='e_xpected', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='freq, periods, start, prediction_size, seasonality, window, expected'), List(elts=[Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=31), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=31), op=Add(), right=Constant(value=2)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-02')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=31), op=Add(), right=Constant(value=5)), Constant(value='2020-01-01'), Constant(value=5), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=BinOp(left=Constant(value=31), op=Add(), right=Constant(value=29)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=2), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=BinOp(left=BinOp(left=Constant(value=31), op=Add(), right=Constant(value=29)), op=Add(), right=Constant(value=31)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=3), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=31), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=31), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=2)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01 01:00')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=31), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=5)), Constant(value='2020-01-01'), Constant(value=5), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=BinOp(left=Constant(value=31), op=Add(), right=Constant(value=29)), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=2), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value=31), op=Add(), right=Constant(value=29)), op=Add(), right=Constant(value=31)), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=3), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=366), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=366), op=Add(), right=Constant(value=2)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-02')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=366), op=Add(), right=Constant(value=5)), Constant(value='2020-01-01'), Constant(value=5), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=BinOp(left=Constant(value=366), op=Add(), right=Constant(value=365)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=2), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=BinOp(left=BinOp(left=Constant(value=366), op=Add(), right=Constant(value=365)), op=Add(), right=Constant(value=365)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=3), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=366), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=366), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=2)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01 01:00')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=366), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=5)), Constant(value='2020-01-01'), Constant(value=5), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=BinOp(left=Constant(value=366), op=Add(), right=Constant(value=365)), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=2), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=BinOp(left=BinOp(left=Constant(value=366), op=Add(), right=Constant(value=365)), op=Add(), right=Constant(value=365)), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=3), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='df', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='history', ctx=Store())], value=Constant(value=140)), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='history', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-01-01')), keyword(arg='periods', value=Name(id='history', ctx=Load()))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=BinOp(left=List(elts=[Constant(value=0), Constant(value=2), Constant(value=4), Constant(value=6), Constant(value=8), Constant(value=10), Constant(value=12)], ctx=Load()), op=Mult(), right=Constant(value=20))), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-01-01')), keyword(arg='periods', value=Name(id='history', ctx=Load()))])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df1B', ctx=Load()), Name(id='df2', ctx=Load())], ctx=Load())], keywords=[]), attr='reset_index', ctx=Load()), args=[], keywords=[keyword(arg='drop', value=Constant(value=True))])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsds', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='1d'))])), Return(value=Name(id='tsds', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='TEST_SMA_MODEL_FORECAST', args=arguments(posonlyargs=[], args=[arg(arg='sim'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='_check_forecast', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='sim', ctx=Load())), keyword(arg='model', value=Call(func=Name(id='model', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Constant(value=7))]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Name(id='SeasonalMovingAverageModel', ctx=Load()), Name(id='NaiveModel', ctx=Load()), Name(id='MovingAverageModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_sma_model_predict', args=arguments(posonlyargs=[], args=[arg(arg='sim'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='_check_predict', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='sim', ctx=Load())), keyword(arg='model', value=Call(func=Name(id='model', ctx=Load()), args=[], keywords=[])), keyword(arg='prediction_size', value=Constant(value=7))]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Name(id='SeasonalMovingAverageModel', ctx=Load()), Name(id='NaiveModel', ctx=Load()), Name(id='MovingAverageModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_sma_model_forecast_fail_not_enough_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ̢ʇ   ͼ   Ũʾ B,Ɇa ')), Assign(targets=[Name(id='sma_model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1000)), keyword(arg='seasonality', value=Constant(value=7))])), Expr(value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='sma_model', ctx=Load()), attr='context_size', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="Given context isn't big enough"))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_sma_model_predict_fail_not_enough_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='sma_model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1000)), keyword(arg='seasonality', value=Constant(value=7))])), Expr(value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="Given context isn't big enough"))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_deadline_get_context_beginning_fail_not_enough_context', args=arguments(posonlyargs=[], args=[arg(arg='freq'), arg(arg='periods'), arg(arg='startaT'), arg(arg='prediction_size'), arg(arg='s'), arg(arg='WINDOW')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ˈπ˚  ɿĮ   â ɧ')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Name(id='startaT', ctx=Load())), keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='freq', value=Name(id='freq', ctx=Load()))])])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="Given context isn't big enough"))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='_DeadlineMovingAverageModel', ctx=Load()), attr='_get_context_beginning', ctx=Load()), args=[Name(id='df', ctx=Load()), Name(id='prediction_size', ctx=Load()), Name(id='s', ctx=Load()), Name(id='WINDOW', ctx=Load())], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='freq, periods, start, prediction_size, seasonality, window'), List(elts=[Tuple(elts=[Constant(value='D'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='D'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=1), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='D'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='D'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), Constant(value=1), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=31), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=31), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='month', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='D'), BinOp(left=Constant(value=366), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load()), Tuple(elts=[Constant(value='H'), BinOp(left=BinOp(left=Constant(value=366), op=Mult(), right=Constant(value=24)), op=Add(), right=Constant(value=1)), Constant(value='2020-01-01'), Constant(value=2), Attribute(value=Name(id='SeasonalityMode', ctx=Load()), attr='year', ctx=Load()), Constant(value=1)], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_sma_model_predict_fail_nans_in_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='̒ǌŤ    \x99˄   ˯σ½3ʟ  ƒ  ')), Assign(targets=[Name(id='sma_model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=2)), keyword(arg='seasonality', value=Constant(value=7))])), Expr(value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='sim', ctx=Load()), attr='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=0)], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='There are NaNs in a target column'))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_g', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds'), arg(arg='etna_mod'), arg(arg='expected_class')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='CheɬcƘk ϔthŽțat getƝ_ɳmoådel meÄthˊodÍ returɩns dȊǜ͜iŠώ%ct Ïof ob̀jects of Ɇ_SeaǶsƀoȃnΰjalMovingAvĻ͉er̉ag`eȖMoΈdeɤΚl clȨassů.')), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='etna_mod', ctx=Load()), args=[], keywords=[]))])), Expr(value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='fit', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsds', ctx=Load()))])), Assign(targets=[Name(id='model_s_dict', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='pipeline', ctx=Load()), attr='model', ctx=Load()), attr='get_model', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Name(id='isinstance_', ctx=Load()), args=[Name(id='model_s_dict', ctx=Load()), Name(id='d', ctx=Load())], keywords=[])), For(target=Name(id='se', ctx=Store()), iter=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='segments', ctx=Load()), body=[Assert(test=Call(func=Name(id='isinstance_', ctx=Load()), args=[Subscript(value=Name(id='model_s_dict', ctx=Load()), slice=Name(id='se', ctx=Load()), ctx=Load()), Name(id='expected_class', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='etna_model_class,expected_class'), Tuple(elts=[Tuple(elts=[Name(id='NaiveModel', ctx=Load()), Name(id='_SeasonalMovingAverageModel', ctx=Load())], ctx=Load()), Tuple(elts=[Name(id='SeasonalMovingAverageModel', ctx=Load()), Name(id='_SeasonalMovingAverageModel', ctx=Load())], ctx=Load()), Tuple(elts=[Name(id='MovingAverageModel', ctx=Load()), Name(id='_SeasonalMovingAverageModel', ctx=Load())], ctx=Load()), Tuple(elts=[Name(id='DeadlineMovingAverageModel', ctx=Load()), Name(id='_DeadlineMovingAverageModel', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_deadline_model_forecast_correct_with_big_horizons', args=arguments(posonlyargs=[], args=[arg(arg='two_month')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=2)), keyword(arg='seasonality', value=Constant(value='month'))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='two_month', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='two_month', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=90)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=90))])), Assign(targets=[Name(id='e_xpected', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[List(elts=[Constant(value=16.5)], ctx=Load()), List(elts=[Constant(value=17.5)], ctx=Load()), List(elts=[Constant(value=18.5)], ctx=Load()), List(elts=[Constant(value=19.5)], ctx=Load()), List(elts=[Constant(value=20.5)], ctx=Load()), List(elts=[Constant(value=21.5)], ctx=Load()), List(elts=[Constant(value=22.5)], ctx=Load()), List(elts=[Constant(value=23.5)], ctx=Load()), List(elts=[Constant(value=24.5)], ctx=Load()), List(elts=[Constant(value=25.5)], ctx=Load()), List(elts=[Constant(value=26.5)], ctx=Load()), List(elts=[Constant(value=27.5)], ctx=Load()), List(elts=[Constant(value=28.5)], ctx=Load()), List(elts=[Constant(value=29.5)], ctx=Load()), List(elts=[Constant(value=30.5)], ctx=Load()), List(elts=[Constant(value=31.5)], ctx=Load()), List(elts=[Constant(value=32.5)], ctx=Load()), List(elts=[Constant(value=33.5)], ctx=Load()), List(elts=[Constant(value=34.5)], ctx=Load()), List(elts=[Constant(value=35.5)], ctx=Load()), List(elts=[Constant(value=36.5)], ctx=Load()), List(elts=[Constant(value=37.5)], ctx=Load()), List(elts=[Constant(value=38.5)], ctx=Load()), List(elts=[Constant(value=39.5)], ctx=Load()), List(elts=[Constant(value=40.5)], ctx=Load()), List(elts=[Constant(value=41.5)], ctx=Load()), List(elts=[Constant(value=42.5)], ctx=Load()), List(elts=[Constant(value=43.5)], ctx=Load()), List(elts=[Constant(value=44.0)], ctx=Load()), List(elts=[Constant(value=44.5)], ctx=Load()), List(elts=[Constant(value=45.5)], ctx=Load()), List(elts=[Constant(value=24.25)], ctx=Load()), List(elts=[Constant(value=25.25)], ctx=Load()), List(elts=[Constant(value=26.25)], ctx=Load()), List(elts=[Constant(value=27.25)], ctx=Load()), List(elts=[Constant(value=28.25)], ctx=Load()), List(elts=[Constant(value=29.25)], ctx=Load()), List(elts=[Constant(value=30.25)], ctx=Load()), List(elts=[Constant(value=31.25)], ctx=Load()), List(elts=[Constant(value=32.25)], ctx=Load()), List(elts=[Constant(value=33.25)], ctx=Load()), List(elts=[Constant(value=34.25)], ctx=Load()), List(elts=[Constant(value=35.25)], ctx=Load()), List(elts=[Constant(value=36.25)], ctx=Load()), List(elts=[Constant(value=37.25)], ctx=Load()), List(elts=[Constant(value=38.25)], ctx=Load()), List(elts=[Constant(value=39.25)], ctx=Load()), List(elts=[Constant(value=40.25)], ctx=Load()), List(elts=[Constant(value=41.25)], ctx=Load()), List(elts=[Constant(value=42.25)], ctx=Load()), List(elts=[Constant(value=43.25)], ctx=Load()), List(elts=[Constant(value=44.25)], ctx=Load()), List(elts=[Constant(value=45.25)], ctx=Load()), List(elts=[Constant(value=46.25)], ctx=Load()), List(elts=[Constant(value=47.25)], ctx=Load()), List(elts=[Constant(value=48.25)], ctx=Load()), List(elts=[Constant(value=49.25)], ctx=Load()), List(elts=[Constant(value=50.25)], ctx=Load()), List(elts=[Constant(value=51.25)], ctx=Load()), List(elts=[Constant(value=51.5)], ctx=Load()), List(elts=[Constant(value=52.75)], ctx=Load()), List(elts=[Constant(value=20.375)], ctx=Load()), List(elts=[Constant(value=21.375)], ctx=Load()), List(elts=[Constant(value=22.375)], ctx=Load()), List(elts=[Constant(value=23.375)], ctx=Load()), List(elts=[Constant(value=24.375)], ctx=Load()), List(elts=[Constant(value=25.375)], ctx=Load()), List(elts=[Constant(value=26.375)], ctx=Load()), List(elts=[Constant(value=27.375)], ctx=Load()), List(elts=[Constant(value=28.375)], ctx=Load()), List(elts=[Constant(value=29.375)], ctx=Load()), List(elts=[Constant(value=30.375)], ctx=Load()), List(elts=[Constant(value=31.375)], ctx=Load()), List(elts=[Constant(value=32.375)], ctx=Load()), List(elts=[Constant(value=33.375)], ctx=Load()), List(elts=[Constant(value=34.375)], ctx=Load()), List(elts=[Constant(value=35.375)], ctx=Load()), List(elts=[Constant(value=36.375)], ctx=Load()), List(elts=[Constant(value=37.375)], ctx=Load()), List(elts=[Constant(value=38.375)], ctx=Load()), List(elts=[Constant(value=39.375)], ctx=Load()), List(elts=[Constant(value=40.375)], ctx=Load()), List(elts=[Constant(value=41.375)], ctx=Load()), List(elts=[Constant(value=42.375)], ctx=Load()), List(elts=[Constant(value=43.375)], ctx=Load()), List(elts=[Constant(value=44.375)], ctx=Load()), List(elts=[Constant(value=45.375)], ctx=Load()), List(elts=[Constant(value=46.375)], ctx=Load()), List(elts=[Constant(value=47.375)], ctx=Load()), List(elts=[Constant(value=47.75)], ctx=Load())], ctx=Load())], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Attribute(value=Name(id='res', ctx=Load()), attr='df', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Name(id='e_xpected', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_deadline_model_forecast', args=arguments(posonlyargs=[], args=[arg(arg='sim'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ȑ  ̛ͦ+͎Ũ   Ξ̩ ȴ  ˳ ſ    Ɯɓ˭ͪÌ')), Expr(value=Call(func=Name(id='_check_forecast', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='sim', ctx=Load())), keyword(arg='model', value=Call(func=Name(id='model', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1))])), keyword(arg='horizon', value=Constant(value=7))]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Name(id='DeadlineMovingAverageModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_deadline_model', args=arguments(posonlyargs=[], args=[arg(arg='sim'), arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Name(id='_check_predict', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='sim', ctx=Load())), keyword(arg='model', value=Call(func=Name(id='model', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1))])), keyword(arg='prediction_size', value=Constant(value=7))]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Name(id='DeadlineMovingAverageModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_deadline_model_forecast_fail_not_enough_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1000))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="Given context isn't big enough"))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_deadline_model_predict_fail_not_enough_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1000))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value="Given context isn't big enough"))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='_check_forecast', args=arguments(posonlyargs=[], args=[arg(arg='ts'), arg(arg='model'), arg(arg='horizon')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Name(id='horizon', ctx=Load())), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='fut', ctx=Load())), keyword(arg='prediction_size', value=Name(id='horizon', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='isnull', ctx=Load()), args=[], keywords=[]), attr='values', ctx=Load()), attr='any', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Call(func=Name(id='l', ctx=Load()), args=[Name(id='res', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[BinOp(left=Name(id='horizon', ctx=Load()), op=Mult(), right=Constant(value=2))]))], decorator_list=[]), FunctionDef(name='test_deadline_model_fore_cast_fail_nans_in_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ǐŠ  ')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='fut', ctx=Load()), attr='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Constant(value=1), Constant(value=0)], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='There are NaNs in a forecast context'))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='_test_seasonal_moving_average_forecast_correct', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  əĹ   ')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value=7))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=35), Constant(value=42)], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[Constant(value=0), Constant(value=2), Constant(value=4), Constant(value=6), Constant(value=8), Constant(value=10), Constant(value=12)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='TEST_SMA_MODEL_FORECAST_FAIL_NANS_IN_CONTEXT', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ǒʁ   Π  ')), Assign(targets=[Name(id='sma_model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=2)), keyword(arg='seasonality', value=Constant(value=2))])), Expr(value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='sma_model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='fut', ctx=Load()), attr='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Constant(value=1), Constant(value=0)], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='There are NaNs in a forecast context'))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='sma_model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_moving_average_forecast_correct', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    ΰ   ˤ˝Ĵ ϓ  ')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='MovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=5))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='TMP', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=44), Constant(value=49)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='ran_ge', ctx=Load()), args=[Constant(value=7)], keywords=[]), body=[Assign(targets=[Name(id='TMP', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='TMP', ctx=Load()), List(elts=[Call(func=Attribute(value=Subscript(value=Name(id='TMP', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=5))), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Subscript(value=Name(id='TMP', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=7))), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='TMP', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=0), Constant(value=13), Constant(value=2)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='ran_ge', ctx=Load()), args=[Constant(value=7)], keywords=[]), body=[Assign(targets=[Name(id='TMP', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='TMP', ctx=Load()), List(elts=[Call(func=Attribute(value=Subscript(value=Name(id='TMP', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=5))), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])], ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Subscript(value=Name(id='TMP', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=7))), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_deadlin', args=arguments(posonlyargs=[], args=[arg(arg='df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='month'))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='df', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=20)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=20))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[BinOp(left=Constant(value=79), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=80), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=81), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=82), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=83), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=84), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=85), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=86), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=87), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=88), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=89), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=89), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=90), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=91), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=92), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=93), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=94.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=95.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=96.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=97), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3)))], ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-05-20')), keyword(arg='periods', value=Constant(value=20))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[BinOp(left=Constant(value=5.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=7.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=4.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=6.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=8.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=6.0), BinOp(left=Constant(value=3.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=5.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=7.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=4.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=6.0), BinOp(left=Constant(value=6.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=4.0), Constant(value=6.0), Constant(value=8.0), BinOp(left=Constant(value=5.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=7.0), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=4.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=6.0), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=4.0)], ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-05-20')), keyword(arg='periods', value=Constant(value=20))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_deadline_model_predict_fail_nans_in_context', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ȷ     ̎  ū  ɛ ̤  ')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='sim', ctx=Load()), attr='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=0)], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='There are NaNs in a target column'))]))], body=[Assign(targets=[Name(id='_kGhn', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))]))])], decorator_list=[]), FunctionDef(name='test_naive_pred', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[keyword(arg='lag', value=Constant(value=3))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=39), Constant(value=46)], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[Constant(value=8), Constant(value=10), Constant(value=12), Constant(value=0), Constant(value=2), Constant(value=4), Constant(value=6)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_moving_average_predict_correct', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='MovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=5))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=39), Constant(value=46)], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[Constant(value=8), Constant(value=7.2), Constant(value=6.4), Constant(value=5.6), Constant(value=4.8), Constant(value=4.0), Constant(value=6.0)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_deadline_moving_average_predict_correct', args=arguments(posonlyargs=[], args=[arg(arg='df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='month'))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=20))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=59), BinOp(left=Constant(value=60), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=61), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=62), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=63), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=64), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=65), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=66), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=67), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=68), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=69), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=70), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=71), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=72), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=73), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=74), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=75), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=76), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=77), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=78), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3)))], ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-04-30')), keyword(arg='periods', value=Constant(value=20))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[List(elts=[Constant(value=6), BinOp(left=Constant(value=4), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=6), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=8), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=6), BinOp(left=Constant(value=3), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=5), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=7), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=4), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=6), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=8), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=6), BinOp(left=Constant(value=3), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=5), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=7), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=4), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=6), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), BinOp(left=Constant(value=8), op=Add(), right=BinOp(left=Constant(value=2), op=Div(), right=Constant(value=3))), Constant(value=6), BinOp(left=Constant(value=3), op=Add(), right=BinOp(left=Constant(value=1), op=Div(), right=Constant(value=3)))], ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-04-30')), keyword(arg='periods', value=Constant(value=20))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_context_size_seasonal_ma', args=arguments(posonlyargs=[], args=[arg(arg='model')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='expected_context_size', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='model', ctx=Load()), attr='window', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='model', ctx=Load()), attr='seasonality', ctx=Load()))), Assert(test=Compare(left=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()), ops=[Eq()], comparators=[Name(id='expected_context_size', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value=1))]), Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value=1))]), Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value=3))]), Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value=7))]), Call(func=Name(id='MovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3))]), Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[keyword(arg='lag', value=Constant(value=5))])], ctx=Load())], keywords=[])]), FunctionDef(name='test_context_size_deadline_maE', args=arguments(posonlyargs=[], args=[arg(arg='model'), arg(arg='freq'), arg(arg='expected_context_size')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    ')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp'), Constant(value='segment'), Constant(value='target')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-01-01')), keyword(arg='periods', value=BinOp(left=Name(id='expected_context_size', ctx=Load()), op=Add(), right=Constant(value=10))), keyword(arg='freq', value=Name(id='freq', ctx=Load()))]), Constant(value='segment_0'), Constant(value=1)])], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), keyword(arg='freq', value=Name(id='freq', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assert(test=Compare(left=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()), ops=[Eq()], comparators=[Name(id='expected_context_size', ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model, freq, expected_context_size'), List(elts=[Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value='month'))]), Constant(value='D'), Constant(value=31)], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='month'))]), Constant(value='D'), BinOp(left=Constant(value=3), op=Mult(), right=Constant(value=31))], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value='year'))]), Constant(value='D'), Constant(value=366)], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='year'))]), Constant(value='D'), BinOp(left=Constant(value=3), op=Mult(), right=Constant(value=366))], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value='month'))]), Constant(value='H'), BinOp(left=Constant(value=31), op=Mult(), right=Constant(value=24))], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='month'))]), Constant(value='H'), BinOp(left=BinOp(left=Constant(value=3), op=Mult(), right=Constant(value=31)), op=Mult(), right=Constant(value=24))], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Constant(value='year'))]), Constant(value='H'), BinOp(left=Constant(value=366), op=Mult(), right=Constant(value=24))], ctx=Load()), Tuple(elts=[Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=3)), keyword(arg='seasonality', value=Constant(value='year'))]), Constant(value='H'), BinOp(left=BinOp(left=Constant(value=3), op=Mult(), right=Constant(value=366)), op=Mult(), right=Constant(value=24))], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='_check_predict', args=arguments(posonlyargs=[], args=[arg(arg='ts'), arg(arg='model'), arg(arg='prediction_size')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Name(id='prediction_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='isnull', ctx=Load()), args=[], keywords=[]), attr='values', ctx=Load()), attr='any', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Call(func=Name(id='l', ctx=Load()), args=[Name(id='res', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[BinOp(left=Name(id='prediction_size', ctx=Load()), op=Mult(), right=Constant(value=2))]))], decorator_list=[]), FunctionDef(name='test_pipeline_with_deadline_model', args=arguments(posonlyargs=[], args=[arg(arg='_big_ts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ö  \x8c·ÒǺ  Ȳ   ɖ  7ϲ ĶŎ\u0381 ̳')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='DeadlineMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=5)), keyword(arg='seasonality', value=Constant(value='month'))])), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='model', ctx=Load())), keyword(arg='horizon', value=Constant(value=200))])), Assign(targets=[Tuple(elts=[Name(id='metrics', ctx=Store()), Name(id='forecast', ctx=Store()), Name(id='_kGhn', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='_big_ts', ctx=Load())), keyword(arg='metrics', value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[])], ctx=Load())), keyword(arg='n_folds', value=Constant(value=3))])), Assert(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='forecast', ctx=Load()), attr='isnull', ctx=Load()), args=[], keywords=[]), attr='values', ctx=Load()), attr='any', ctx=Load()), args=[], keywords=[])))], decorator_list=[]), FunctionDef(name='_big_ts', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='         ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Constant(value=42)], keywords=[])), Assign(targets=[Name(id='periods', ctx=Store())], value=Constant(value=1000)), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load()))])])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_1')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='uniform', ctx=Load()), args=[Constant(value=10), Constant(value=20)], keywords=[keyword(arg='size', value=Name(id='periods', ctx=Load()))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-01')], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load()))])])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_2')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='uniform', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=15)), Constant(value=5)], keywords=[keyword(arg='size', value=Name(id='periods', ctx=Load()))])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df1B', ctx=Load()), Name(id='df2', ctx=Load())], ctx=Load())], keywords=[]), attr='reset_index', ctx=Load()), args=[], keywords=[keyword(arg='drop', value=Constant(value=True))])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsds', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='D'))])), Return(value=Name(id='tsds', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Name(id='TSDataset', ctx=Load())), FunctionDef(name='test_naive_forecast_correct', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Ɓ ť')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[keyword(arg='lag', value=Constant(value=3))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='fut', ctx=Store())], value=Call(func=Attribute(value=Name(id='sim', ctx=Load()), attr='make_future', ctx=Load()), args=[], keywords=[keyword(arg='future_steps', value=Constant(value=7)), keyword(arg='tail_steps', value=Attribute(value=Name(id='model', ctx=Load()), attr='context_size', ctx=Load()))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fut', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=BinOp(left=BinOp(left=List(elts=[Constant(value=46), Constant(value=47), Constant(value=48)], ctx=Load()), op=Mult(), right=Constant(value=2)), op=Add(), right=List(elts=[Constant(value=46)], ctx=Load()))), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=BinOp(left=BinOp(left=List(elts=[Constant(value=8), Constant(value=10), Constant(value=12)], ctx=Load()), op=Mult(), right=Constant(value=2)), op=Add(), right=List(elts=[Constant(value=8)], ctx=Load()))), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-19')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[]), FunctionDef(name='two_month', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ǥ   \x92')), Assign(targets=[Name(id='history', ctx=Store())], value=Constant(value=61)), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='history', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-01-01')), keyword(arg='periods', value=Name(id='history', ctx=Load()))])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df1B', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsds', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='1d'))])), Return(value=Name(id='tsds', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='test_s', args=arguments(posonlyargs=[], args=[arg(arg='sim')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='SeasonalMovingAverageModel', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=2)), keyword(arg='seasonality', value=Constant(value=2))])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='predict', ctx=Load()), args=[Name(id='sim', ctx=Load())], keywords=[keyword(arg='prediction_size', value=Constant(value=7))])), Assign(targets=[Name(id='res', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[keyword(arg='flatten', value=Constant(value=True))]), slice=List(elts=[Constant(value='target'), Constant(value='segment'), Constant(value='timestamp')], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='df1B', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Constant(value=39), Constant(value=46)], keywords=[])), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='A')), Assign(targets=[Subscript(value=Name(id='df1B', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='df2', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=List(elts=[Constant(value=8), Constant(value=10), Constant(value=5), Constant(value=7), Constant(value=2), Constant(value=4), Constant(value=6)], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='B')), Assign(targets=[Subscript(value=Name(id='df2', ctx=Load()), slice=Constant(value='timestamp'), ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2020-02-12')), keyword(arg='periods', value=Constant(value=7))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[List(elts=[Name(id='df2', ctx=Load()), Name(id='df1B', ctx=Load())], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0)), keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='res', ctx=Store())], value=Call(func=Attribute(value=Name(id='res', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assign(targets=[Name(id='answe', ctx=Store())], value=Call(func=Attribute(value=Name(id='answe', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='segment'), Constant(value='timestamp')], ctx=Load()))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Name(id='res', ctx=Load()), attr='values', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='answe', ctx=Load()), attr='values', ctx=Load())])], keywords=[]))], decorator_list=[])], type_ignores=[])