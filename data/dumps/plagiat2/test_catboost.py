Module(body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='etna.transforms.math', names=[alias(name='LagTransform')], level=0), ImportFrom(module='catboost', names=[alias(name='CatBoostRegressor')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='OneHotEncoderTransform')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.models', names=[alias(name='CatBoostMultiSegmentModel')], level=0), ImportFrom(module='etna.models', names=[alias(name='CatBoostPerSegmentModel')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='DateFlagsTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='LabelEncoderTransform')], level=0), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='etna.datasets', names=[alias(name='generate_ar_df')], level=0), FunctionDef(name='test_run', args=arguments(posonlyargs=[], args=[arg(arg='catboostmodel'), arg(arg='new_format_dfoyckc')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ³  ˿ˊ  Ɠ ͛  μ ΄ƫì  ȓ ')), Assign(targets=[Name(id='df', ctx=Store())], value=Name(id='new_format_dfoyckc', ctx=Load())), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load()), Constant(value='1d')], keywords=[])), Assign(targets=[Name(id='lags', ctx=Store())], value=Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=List(elts=[Constant(value=3), Constant(value=4), Constant(value=5)], ctx=Load())), keyword(arg='in_column', value=Constant(value='target'))])), Expr(value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='lags', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='catboostmodel', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='future_ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='make_future', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='future_ts', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='future_ts', ctx=Load()), attr='isnull', ctx=Load()), args=[], keywords=[]), attr='values', ctx=Load()), attr='any', ctx=Load()), args=[], keywords=[])), body=[Assert(test=Constant(value=True))], orelse=[Assert(test=Constant(value=False))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='catboostmodel'), List(elts=[Name(id='CatBoostMultiSegmentModel', ctx=Load()), Name(id='CatBoostPerSegmentModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_run_with_reg', args=arguments(posonlyargs=[], args=[arg(arg='catboostmodel'), arg(arg='new_format_dfoyckc'), arg(arg='new_format_exogJ')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Name(id='new_format_dfoyckc', ctx=Load())), Assign(targets=[Name(id='exo_g', ctx=Store())], value=Name(id='new_format_exogJ', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='exo_g', ctx=Load()), attr='columns', ctx=Load()), attr='set_levels', ctx=Load()), args=[List(elts=[Constant(value='regressor_exog')], ctx=Load())], keywords=[keyword(arg='level', value=Constant(value='feature')), keyword(arg='inplace', value=Constant(value=True))])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='df', ctx=Load()), Constant(value='1d')], keywords=[keyword(arg='df_exog', value=Name(id='exo_g', ctx=Load())), keyword(arg='known_future', value=Constant(value='all'))])), Assign(targets=[Name(id='lags', ctx=Store())], value=Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=List(elts=[Constant(value=3), Constant(value=4), Constant(value=5)], ctx=Load())), keyword(arg='in_column', value=Constant(value='target'))])), Assign(targets=[Name(id='lags_exog', ctx=Store())], value=Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=List(elts=[Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6)], ctx=Load())), keyword(arg='in_column', value=Constant(value='regressor_exog'))])), Expr(value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='lags', ctx=Load()), Name(id='lags_exog', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='catboostmodel', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[])), Assign(targets=[Name(id='future_ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='make_future', ctx=Load()), args=[Constant(value=3)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='future_ts', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='future_ts', ctx=Load()), attr='isnull', ctx=Load()), args=[], keywords=[]), attr='values', ctx=Load()), attr='any', ctx=Load()), args=[], keywords=[])), body=[Assert(test=Constant(value=True))], orelse=[Assert(test=Constant(value=False))])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='catboostmodel'), List(elts=[Name(id='CatBoostMultiSegmentModel', ctx=Load()), Name(id='CatBoostPerSegmentModel', ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='constant_ts', args=arguments(posonlyargs=[], args=[arg(arg='sizeLblky')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=40)]), body=[Expr(value=Constant(value=' ɑ ̦  ̍\x95     ɲ')), Assign(targets=[Name(id='constants', ctx=Store())], value=List(elts=[Constant(value=7), Constant(value=50), Constant(value=130), Constant(value=277), Constant(value=370), Constant(value=513)], ctx=Load())), Assign(targets=[Name(id='segments', ctx=Store())], value=ListComp(elt=Name(id='constant', ctx=Load()), generators=[comprehension(target=Name(id='constant', ctx=Store()), iter=Name(id='constants', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='r_ange', ctx=Load()), args=[Name(id='sizeLblky', ctx=Load())], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='ts_range', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2020-01-03')], keywords=[keyword(arg='freq', value=Constant(value='D')), keyword(arg='periods', value=Name(id='sizeLblky', ctx=Load()))])], keywords=[])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp'), Constant(value='target'), Constant(value='segment')], values=[BinOp(left=Name(id='ts_range', ctx=Load()), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='constants', ctx=Load())], keywords=[])), Name(id='segments', ctx=Load()), ListComp(elt=JoinedStr(values=[Constant(value='segment_'), FormattedValue(value=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Constant(value=1)), conversion=-1)]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='r_ange', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='constants', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0), comprehension(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='r_ange', ctx=Load()), args=[Name(id='sizeLblky', ctx=Load())], keywords=[]), ifs=[], is_async=0)])])], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), Constant(value='D')], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='test', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='train_test_split', ctx=Load()), args=[], keywords=[keyword(arg='test_size', value=Constant(value=5))])), Return(value=Tuple(elts=[Name(id='train', ctx=Load()), Name(id='test', ctx=Load())], ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Name(id='TSDataset', ctx=Load())), FunctionDef(name='test_catboost_multi_segment_forecastyEQ', args=arguments(posonlyargs=[], args=[arg(arg='constant_ts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x8fŋʇ ɟ ˈ    Ĵ  K   ǃϔ \x97 ̖')), Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='test', ctx=Store())], ctx=Store())], value=Name(id='constant_ts', ctx=Load())), Assign(targets=[Name(id='horiz_on', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='test', ctx=Load()), attr='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lags', ctx=Store())], value=Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='lags', value=List(elts=[Constant(value=10), Constant(value=11), Constant(value=12)], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='train', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='lags', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='fu_ture', ctx=Store())], value=Call(func=Attribute(value=Name(id='train', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='horiz_on', ctx=Load())], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='CatBoostMultiSegmentModel', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='fu_ture', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Attribute(value=Name(id='forecast', ctx=Load()), attr='segments', ctx=Load()), body=[Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Subscript(value=Name(id='test', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='segment', ctx=Load()), Constant(value='target')], ctx=Load()), ctx=Load()), Subscript(value=Name(id='forecast', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='segment', ctx=Load()), Constant(value='target')], ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='TEST_GET_MODEL_PER_SEGMENT_AFTER_TRAINING', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x92Ŝ   # ȴ{ĳ5     Ȣ')), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='CatBoostPerSegmentModel', ctx=Load()), args=[], keywords=[])), keyword(arg='transforms', value=List(elts=[Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='lags', value=List(elts=[Constant(value=2), Constant(value=3)], ctx=Load()))])], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='fit', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsds', ctx=Load()))])), Assign(targets=[Name(id='models_dict', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='pipeline', ctx=Load()), attr='model', ctx=Load()), attr='get_model', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='models_dict', ctx=Load()), Name(id='dictDG', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='segments', ctx=Load()), body=[Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Name(id='models_dict', ctx=Load()), slice=Name(id='segment', ctx=Load()), ctx=Load()), Name(id='CatBoostRegressor', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_get_model_per_segment_before_training', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='etna_model', ctx=Store())], value=Call(func=Name(id='CatBoostPerSegmentModel', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Can not get the dict with base models, the model is not fitted!'))]))], body=[Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Attribute(value=Name(id='etna_model', ctx=Load()), attr='get_model', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_get_model_multi', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='etna_model', ctx=Store())], value=Call(func=Name(id='CatBoostMultiSegmentModel', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Attribute(value=Name(id='etna_model', ctx=Load()), attr='get_model', ctx=Load()), args=[], keywords=[])), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='CatBoostRegressor', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_encoder_catboost', args=arguments(posonlyargs=[], args=[arg(arg='encoder')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x94        ʗ ɡ     ')), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='periods', value=Constant(value=20)), keyword(arg='n_segments', value=Constant(value=2))])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='ts', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='D'))])), Assign(targets=[Name(id='transformsMIB', ctx=Store())], value=List(elts=[Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='week_number_in_month', value=Constant(value=True)), keyword(arg='out_column', value=Constant(value='date_flag'))]), Name(id='encoder', ctx=Load())], ctx=Load())), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='CatBoostMultiSegmentModel', ctx=Load()), args=[], keywords=[keyword(arg='iterations', value=Constant(value=100))])), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='model', ctx=Load())), keyword(arg='transforms', value=Name(id='transformsMIB', ctx=Load())), keyword(arg='horizon', value=Constant(value=1))])), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load())), keyword(arg='metrics', value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[])], ctx=Load())), keyword(arg='n_folds', value=Constant(value=1))]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='encoder'), List(elts=[Call(func=Name(id='LabelEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='date_flag_day_number_in_month'))]), Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='date_flag_day_number_in_month'))])], ctx=Load())], keywords=[])])], type_ignores=[])