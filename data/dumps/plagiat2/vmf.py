Module(body=[Import(names=[alias(name='math')]), ImportFrom(module='common', names=[alias(name='auto_matmul')], level=1), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), Import(names=[alias(name='scipy.special')]), Import(names=[alias(name='scipy')]), ImportFrom(module='probabilistic_embeddings.config', names=[alias(name='prepare_config')], level=0), ImportFrom(module='third_party', names=[alias(name='sample_vmf')], level=3), ImportFrom(module='numbers', names=[alias(name='Number')], level=0), ImportFrom(module='common', names=[alias(name='DistributionBase'), alias(name='BatchNormNormalizer')], level=1), ImportFrom(module='parametrization', names=[alias(name='Parametrization')], level=2), Assign(targets=[Name(id='K_SEPARATE', ctx=Store())], value=Constant(value='separate')), Assign(targets=[Name(id='K_NORMdEOP', ctx=Store())], value=Constant(value='norm')), ClassDef(name='VMFDis_tribution', bases=[Name(id='DistributionBase', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='LOGIV', ctx=Store())], value=Dict(keys=[Constant(value='default'), Constant(value='scl')], values=[Name(id='logi_v', ctx=Load()), Name(id='logiv_scl', ctx=Load())])), FunctionDef(name='get_defau', args=arguments(posonlyargs=[], args=[arg(arg='dim'), arg(arg='k'), arg(arg='parametrization'), arg(arg='max_logkriwC'), arg(arg='logiv_type')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=512), Constant(value='separate'), Constant(value='invlin'), Constant(value=10), Constant(value='default')]), body=[Return(value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='dim'), Name(id='dim', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='k'), Name(id='k', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='parametrization'), Name(id='parametrization', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='max_logk'), Name(id='max_logkriwC', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='logiv_type'), Name(id='logiv_type', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='dim', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='pdf_product', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameter'), arg(arg='p_arameters2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Compɲut\x8de pr\u03a2oduct of two densiļties.\n\n \n\nRϹeturnsȯ:\n  \n  TĒύuple ofŁSŖ new5 d̸sistϴȃˡr\u03a2ibˬutioɼΤn cvlaĠ\xadss 9andrːΝØ it's pªaramˢeters.Ɍ")), Assign(targets=[Name(id='new_config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='new_distribution', ctx=Store())], value=Call(func=Name(id='VMFDis_tribution', ctx=Load()), args=[Name(id='new_config', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_probs1', ctx=Store()), Name(id='means1', ctx=Store()), Name(id='hidden_ik1', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameter', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_p_robs2', ctx=Store()), Name(id='means2', ctx=Store()), Name(id='hidden_ik_2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p_arameters2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='log_probs1', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_probs1', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='log_p_robs2', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_p_robs2', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='means1', ctx=Store())], value=Call(func=Attribute(value=Name(id='means1', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='means2', ctx=Store())], value=Call(func=Attribute(value=Name(id='means2', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=3))], keywords=[])), Assign(targets=[Name(id='ik1', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik1', ctx=Load())], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='ik', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik_2', ctx=Load())], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=3))], keywords=[])), Assign(targets=[Name(id='new_means', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='means1', ctx=Load()), op=Div(), right=Name(id='ik1', ctx=Load())), op=Add(), right=BinOp(left=Name(id='means2', ctx=Load()), op=Div(), right=Name(id='ik', ctx=Load())))), Assign(targets=[Name(id='n', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='new_means', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))])), Assign(targets=[Name(id='new_means', ctx=Store())], value=BinOp(left=Name(id='new_means', ctx=Load()), op=Div(), right=Name(id='n', ctx=Load()))), Assign(targets=[Name(id='log_normsTfr', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='ik1', ctx=Load()))], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='ik', ctx=Load()))], keywords=[])), op=Sub(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='n', ctx=Load())], keywords=[])), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='new_log_probs', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='log_probs1', ctx=Load()), op=Add(), right=Name(id='log_p_robs2', ctx=Load())), op=Add(), right=Name(id='log_normsTfr', ctx=Load()))), Assign(targets=[Name(id='new_hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='n', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Name(id='t', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='new_means', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=3))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='new_para', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Call(func=Attribute(value=Name(id='new_log_probs', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1)], ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='new_means', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='new_hidden_ik', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[])), Return(value=Tuple(elts=[Name(id='new_distribution', ctx=Load()), Name(id='new_para', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='mean', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='log_pro', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='half_dim', ctx=Store())], value=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()), op=Div(), right=Constant(value=2))), Assign(targets=[Name(id='component_means', ctx=Store())], value=BinOp(left=Name(id='m', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_logiv_fn', ctx=Load()), args=[Name(id='half_dim', ctx=Load()), Name(id='k', ctx=Load())], keywords=[]), op=Sub(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_logiv_fn', ctx=Load()), args=[BinOp(left=Name(id='half_dim', ctx=Load()), op=Sub(), right=Constant(value=1)), Name(id='k', ctx=Load())], keywords=[])), attr='exp', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='component_means', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Return(value=Name(id='m', ctx=Load()))], decorator_list=[]), FunctionDef(name='has_confidences', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ĕʮWhe˟ǲwϳίth˜ʜΘƈ͡ºeλΆrʭ disʤtrǴTibutionȠ ˦has͈ buĲϣΊìlȢtˆŁi͈n confiΥȺddeù¼nce eϢĲsti̕m˱vatɷio,̥nΤ ɨoȡϫrğƈ \u0381noǆƜt.ȡ')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='sample', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p'), arg(arg='size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='Sa˯mple Ĕfrêom di\x84ɹstribuƳtionɞs.#TuZjbiIAXelHExpSD\n\nArgs:ų͔˦ʍ\nȘ   ͼ par\u0378ameteìrs: ÏϒDi˫st̡ribution pͧZarafmãǐetersǗ ϒw̦i˶tƻh ɈǼʍshŚapǫe (..., K).\n   \n ò ʿʒ  size̝: Samǵple ͥʛsˍize (oȀuǍϐĠr̋tpİǺutƧ εsήha¬pe ƀʠwiχtho}əut Ą\x94d͆imension). ħParameters Ųmust be broadcasƖtabʲl͐e ͩto̦ thˈe gɠʳiĥȢvenʎ siͣze.\n   Ñ, ˘Iʱf not pɸroviΡdeúd,Ă ou͈tͦƨpu%\x7ft shΙape willƣ be\x99ȯ ʐc˕onŰËsi\x90stÑent wiˉ\x85th pʎarameƟte̵rsΕ.\n\nReturns:\n  \n   \n  Tup\u038dle of:\n ƻ Τ ƭ  ͡  ɇηŭ: -ʷΚ ͼSamples wɽilth shape ǿǂ(ď..., D).\n   \n   \n \n Ǉ     -b ¿Meaǈɷns with shape͉˂ (ʻ...).̕')), If(test=Compare(left=Name(id='size', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='size', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='reshape', ctx=Load()), args=[BinOp(left=BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[]), op=Add(), right=BinOp(left=List(elts=[Constant(value=1)], ctx=Load()), op=Mult(), right=BinOp(left=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Sub(), right=Attribute(value=Name(id='p', ctx=Load()), attr='ndim', ctx=Load())), op=Add(), right=Constant(value=1)))), op=Add(), right=List(elts=[Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_pro', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='probs', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='log_pro', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1)], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='components', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='multinomial', ctx=Load()), args=[Call(func=Attribute(value=Name(id='probs', ctx=Load()), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1)], keywords=[]), Constant(value=1)], keywords=[]), attr='reshape', ctx=Load()), args=[Starred(value=Name(id='size', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='broad_components', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='components', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='gather', ctx=Load()), args=[Name(id='m', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=2)), Name(id='broad_components', ctx=Load())], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Constant(value=1)], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='gather', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=2)), Subscript(value=Name(id='broad_components', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(upper=Constant(value=1))], ctx=Load()), ctx=Load())], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='_samples', ctx=Store())], value=Call(func=Name(id='sample_vmf', ctx=Load()), args=[Name(id='m', ctx=Load()), Name(id='k', ctx=Load()), Name(id='size', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='_samples', ctx=Load()), Name(id='components', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='_log_unit_area', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='$Loːgçɒarʨithϱm ͺoΕf the unǾitƖΜ ǶspheɤȡŐreλ ϫarea.')), Assign(targets=[Name(id='dim', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), Return(value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[Constant(value=2)], keywords=[]), op=Add(), right=BinOp(left=BinOp(left=Name(id='dim', ctx=Load()), op=Div(), right=Constant(value=2)), op=Mult(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load())], keywords=[]))), op=Sub(), right=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='loggamma', ctx=Load()), args=[BinOp(left=Name(id='dim', ctx=Load()), op=Div(), right=Constant(value=2))], keywords=[])))], decorator_list=[]), FunctionDef(name='split_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p'), arg(arg='normalize')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Constant(value='Eɷxtract͔ loŉƒg˳ ˜ϋpr̅foȗbs̰,ǔ ̋m\\eans Ǟńan\x8fd˼ ĴinvǍKe͘;rs˻e kɎ hf²r˼om paàrameterŐs.')), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Wrong number of parameters: {} != {}.'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='dim', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load())], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())), Assign(targets=[Name(id='sca_led_log_probs', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1)], ctx=Load())), ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='p', ctx=Load()), attr='dtype', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='p', ctx=Load()), attr='device', ctx=Load()))])), Assign(targets=[Name(id='means_offset', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='scaled_mea', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='p', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(lower=Name(id='means_offset', ctx=Load()), upper=BinOp(left=Name(id='means_offset', ctx=Load()), op=Add(), right=BinOp(left=Constant(value=1), op=Mult(), right=Name(id='dim', ctx=Load()))))], ctx=Load()), ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1), Name(id='dim', ctx=Load())], ctx=Load())), ctx=Load())], keywords=[])), If(test=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='_ik', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1), Constant(value=1)], ctx=Load())), BinOp(left=Constant(value=1), op=Div(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()))], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='p', ctx=Load()), attr='dtype', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='p', ctx=Load()), attr='device', ctx=Load()))])), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Name(id='_ik', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_SEPARATE', ctx=Load())]), body=[Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='p', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(lower=BinOp(left=Name(id='means_offset', ctx=Load()), op=Add(), right=BinOp(left=Constant(value=1), op=Mult(), right=Name(id='dim', ctx=Load()))))], ctx=Load()), ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1), Constant(value=1)], ctx=Load())), ctx=Load())], keywords=[]))], orelse=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_NORMdEOP', ctx=Load())])), Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='scaled_mea', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))])), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='k', ctx=Load()))], keywords=[]))])]), If(test=Name(id='normalize', ctx=Load()), body=[Assign(targets=[Name(id='log_pro', ctx=Store())], value=BinOp(left=Name(id='sca_led_log_probs', ctx=Load()), op=Sub(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[Name(id='sca_led_log_probs', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))]))), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize', ctx=Load()), args=[Name(id='scaled_mea', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='log_pro', ctx=Load()), Name(id='m', ctx=Load()), Name(id='hidden_ik', ctx=Load())], ctx=Load()))], orelse=[Return(value=Tuple(elts=[Name(id='sca_led_log_probs', ctx=Load()), Name(id='scaled_mea', ctx=Load()), Name(id='hidden_ik', ctx=Load())], ctx=Load()))])], decorator_list=[]), FunctionDef(name='statistics', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="CǃͅomģpƎuteʴ ΒuseƼfulƯ statϔÏis˳tłiźcs foοΧrȫ lµɐo΄gʄgiƕng̾.͜\nȯ\nĞdAͶŰrʧgÇs:Ă\n   \n   \n \nɥúƒkα  ʥφparamŚɳetώ˵ers˘º: DistɌribÿuƁƭκt+ǮɈʝiĆon pˇ'ǐ̒aʧrǩameȹƆt\u0381erͻsLδ ˿wWʋ\xa0iȼϲþth\u0378 shaɗpùˆ\u0379eʶǿαǾǑ (.ōŌ.ȻĊ.,ɜɵä ̟žƉǇK̑Z).Ńơ7\n\nRϤʈetiuȥrns:źɐ\n \nĴ  ίǿ¢  ǕDiȁȴ͢ct˱\u0382io˿˃nćσarƢy ĒwiɅth ̓f̨loaɾti˘ng-Ĥɿ\x98pT¨oiɅnt sptaĎ¥ɊϘː8tΒň\x8dϱˌis~tȴicŰs œŭvalȕğuŗesˉ.")), Assign(targets=[Name(id='p', ctx=Store())], value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Subscript(value=Attribute(value=Name(id='p', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_priors', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='sqrt_iklPHE', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]), attr='sqrt', ctx=Load()), args=[], keywords=[])), Return(value=Dict(keys=[Constant(value='vmf_sqrt_inv_k/mean'), Constant(value='vmf_sqrt_inv_k/std')], values=[Call(func=Attribute(value=Name(id='sqrt_iklPHE', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='sqrt_iklPHE', ctx=Load()), attr='std', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='NUM_PARAMETERS', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Nƴuǋ\u0381mbǁer of Ǻʱd̨ϊȎistàνΊ˄riÄbuĿtion parˎϞaū%meute̷rs.Ƶ')), Assign(targets=[Name(id='mean_para', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), Assign(targets=[Name(id='k_parameters', ctx=Store())], value=IfExp(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_SEPARATE', ctx=Load())]), body=Constant(value=1), orelse=Constant(value=0))), Return(value=BinOp(left=Name(id='mean_para', ctx=Load()), op=Add(), right=Name(id='k_parameters', ctx=Load())))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='unpack_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='˱ŸRƘ̙etãurnsϼ diϣNc\x9dt wi3̽\x95thbÞ Ɣʐdis͝ĔϋtribΗution ̟parɝameųqters.Ŗ')), Assign(targets=[Tuple(elts=[Name(id='log_pro', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Return(value=Dict(keys=[Constant(value='log_probs'), Constant(value='mean'), Constant(value='k')], values=[Name(id='log_pro', ctx=Load()), Name(id='m', ctx=Load()), BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))]))], decorator_list=[]), FunctionDef(name='make_normalizer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dim', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_NORMdEOP', ctx=Load())]), body=[Assign(targets=[Name(id='normalizer', ctx=Store())], value=Constant(value=None))], orelse=[Assign(targets=[Name(id='normalizer', ctx=Store())], value=Call(func=Name(id='BatchNormNormalizer', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[keyword(arg='begin', value=Constant(value=0)), keyword(arg='end', value=Name(id='dim', ctx=Load()))]))]), Return(value=Name(id='normalizer', ctx=Load()))], decorator_list=[]), FunctionDef(name='is_spherical', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whˎ͍Ѐɪǌeʶ̓t̘heŷψÛ\u0380rϙ dE^istri#bʲ͙uti\x9aon ɱ`is on sphĠ̖Ŧe̮ȵreͣŜ oˣrĺƉ˟ ǰR\u0383^n.ͮ')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='logmls', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameter'), arg(arg='p_arameters2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ComÎpȫute L˙og Mutual Likelihoodǌ ScĤore (ˍMLS) fo,ǼǢrÔ ̰paȌ˄ȇiŪrs of\x9f ɷdistϽrŘibut{ions.\n\n\n\n   \n̒A:rgsǓǼ:̈#ZMwpi\n   \n \n  ǹøϢ  Ŕ˅parameteǝrs1: Di̢ſßstribuʩt9ǿion paramΔ\u038dźuet\\ers with˷ sh1a˘pe (..., KΝΎ).ͳ\n\n  Ŀ  paramet̳le͂rs2: DistɥributiΚon parƙamºeters with shēape (...,Ŧϩ K)ò.\n\n   \n \nRƛψeturnϨs΅:\nǓ   ̋ 0MLS scǻores \x83wϼith sˤhape ǰ(.ϯ..).')), Assign(targets=[Tuple(elts=[Name(id='log_probs1', ctx=Store()), Name(id='means1', ctx=Store()), Name(id='hidden_ik1', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameter', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_p_robs2', ctx=Store()), Name(id='means2', ctx=Store()), Name(id='hidden_ik_2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p_arameters2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pairwise_logmls', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logmls', ctx=Load()), args=[], keywords=[keyword(arg='means1', value=Subscript(value=Name(id='means1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load())), keyword(arg='hidden_ik1', value=Subscript(value=Name(id='hidden_ik1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load())), keyword(arg='means2', value=Subscript(value=Name(id='means2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load())), keyword(arg='hidden_ik2', value=Subscript(value=Name(id='hidden_ik_2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load()))])), Assign(targets=[Name(id='pairwise_logprobs', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='log_probs1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None)], ctx=Load()), ctx=Load()), op=Add(), right=Subscript(value=Name(id='log_p_robs2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice()], ctx=Load()), ctx=Load()))), Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='pairwise_logmls', ctx=Load()), attr='shape', ctx=Load())], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())), Assign(targets=[Name(id='logmls', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[Call(func=Attribute(value=BinOp(left=Name(id='pairwise_logprobs', ctx=Load()), op=Add(), right=Name(id='pairwise_logmls', ctx=Load())), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Return(value=Name(id='logmls', ctx=Load()))], decorator_list=[]), FunctionDef(name='__vmf_logc', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='k'), arg(arg='logk')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Name(id='k', ctx=Load()), Tuple(elts=[Name(id='floa', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='floating', ctx=Load())], ctx=Load())], keywords=[]), body=[Return(value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]))], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='k', ctx=Load()), attr='ndim', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Subscript(value=Name(id='k', ctx=Load()), slice=Constant(value=None), ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load()))], orelse=[]), If(test=Compare(left=Name(id='logk', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='logk', ctx=Store())], value=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='log', ctx=Load()), args=[], keywords=[]))], orelse=[]), Assign(targets=[Name(id='half_dim', ctx=Store())], value=BinOp(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()), op=Div(), right=Constant(value=2))), Assign(targets=[Name(id='lo_gnum', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='half_dim', ctx=Load()), op=Sub(), right=Constant(value=1)), op=Mult(), right=Name(id='logk', ctx=Load()))), Assign(targets=[Name(id='logden', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='half_dim', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=Constant(value=2), op=Mult(), right=Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load()))], keywords=[])), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_logiv_fn', ctx=Load()), args=[BinOp(left=Name(id='half_dim', ctx=Load()), op=Sub(), right=Constant(value=1)), Name(id='k', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='small_mas_k', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logical_or', ctx=Load()), args=[Call(func=Attribute(value=Name(id='lo_gnum', ctx=Load()), attr='isneginf', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='logden', ctx=Load()), attr='isneginf', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='logc_sm_all', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[UnaryOp(op=USub(), operand=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_log_unit_area', ctx=Load()), args=[], keywords=[]))], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='k', ctx=Load()), attr='dtype', ctx=Load())], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='k', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='where', ctx=Load()), args=[Name(id='small_mas_k', ctx=Load()), Name(id='logc_sm_all', ctx=Load()), BinOp(left=Name(id='lo_gnum', ctx=Load()), op=Sub(), right=Name(id='logden', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='_vmf_logmls', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='means1'), arg(arg='hidden_ik1'), arg(arg='means2'), arg(arg='hidden_ik_2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='K1', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik1', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='K2', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik_2', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logk1', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_ik1', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logk2', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_ik_2', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='K1', ctx=Load()), op=Mult(), right=Name(id='means1', ctx=Load())), op=Add(), right=BinOp(left=Name(id='K2', ctx=Load()), op=Mult(), right=Name(id='means2', ctx=Load())))], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))])), Assign(targets=[Name(id='logc1', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='K1', ctx=Load())], keywords=[keyword(arg='logk', value=Name(id='logk1', ctx=Load()))])), Assign(targets=[Name(id='logc2', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='K2', ctx=Load())], keywords=[keyword(arg='logk', value=Name(id='logk2', ctx=Load()))])), Assign(targets=[Name(id='l', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=BinOp(left=BinOp(left=Name(id='logc1', ctx=Load()), op=Add(), right=Name(id='logc2', ctx=Load())), op=Sub(), right=Name(id='l', ctx=Load())), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='config')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()), ops=[Lt()], comparators=[Constant(value=2)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Feature space must have dimension >= 2, got {}.'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=And(), values=[Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[NotIn()], comparators=[List(elts=[Name(id='K_SEPARATE', ctx=Load()), Name(id='K_NORMdEOP', ctx=Load())], ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Unknow type of k parametrization: {}.'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[NotEq()], comparators=[Name(id='K_SEPARATE', ctx=Load())]), body=[Assign(targets=[Name(id='min_ik', ctx=Store())], value=Constant(value=0))], orelse=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='max_logk'), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='min_ik', ctx=Store())], value=Constant(value=0))], orelse=[Assign(targets=[Name(id='min_ik', ctx=Store())], value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='exp', ctx=Load()), args=[UnaryOp(op=USub(), operand=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='max_logk'), ctx=Load()))], keywords=[]))])]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Store())], value=Call(func=Name(id='Parametrization', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='parametrization'), ctx=Load())], keywords=[keyword(arg='min', value=Name(id='min_ik', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_logiv_fn', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='LOGIV', ctx=Load()), slice=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='logiv_type'), ctx=Load()), ctx=Load()))], decorator_list=[]), FunctionDef(name='confidences', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='GeΒǗtƖî coT»Ǉnfi¹ų¸deçnceŒ ȋscore for eϮach elemϭ̦ŖĨʙeđǫʮ\'nŒtΣ ÏZ/ƚĵáȟζϲoȬfϜ \x84˭th e bΔa½˪tchƧ̝.ϯʁ\n²\n̦Args:Ɍ|\u038d\n \nˋ  pŞaËraŎmete˪ǁrϻ̈́s: Distͷɉ\x85r"ȯiƾˡblΠťutɧioǂnʊŗǰ ŘpaárίˀameÂters with sϿhapɧe (Ǘͩ.̳..,Ŵ ƵKˏϵ)ȑʖΞÛ.\n\u03a2\n\nReturns:ΦĲ\n ͵ ƙ̓  ɮλC̹o8ǠnfiʘdeŎnces witƽh sh͢Ċaƭĺɦʳ$pʐe˶ (.\x8eξˣ..).')), Assign(targets=[Tuple(elts=[Name(id='log_priors', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[])), Return(value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Name(id='logik', ctx=Load()), attr='mean', ctx=Load()), args=[Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=2))], ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='join_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='log_pro'), arg(arg='m'), arg(arg='hidden_ik')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='broadcast_shapes', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='log_pro', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), Subscript(value=Attribute(value=Name(id='m', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load()), Subscript(value=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='m', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Assign(targets=[Name(id='flat_parts', ctx=Store())], value=List(elts=[], ctx=Load())), If(test=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='_ik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Compare(left=Call(func=Attribute(value=BinOp(left=Name(id='_ik', ctx=Load()), op=Sub(), right=BinOp(left=Constant(value=1), op=Div(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()))), attr='abs', ctx=Load()), args=[], keywords=[]), ops=[Lt()], comparators=[Constant(value=1e-06)]), attr='all', ctx=Load()), args=[], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='All k must be equal to {} for fixed k parametrization'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='flat_parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_SEPARATE', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Name(id='flat_parts', ctx=Load()), attr='extend', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))], orelse=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='k'), ctx=Load()), ops=[Eq()], comparators=[Name(id='K_NORMdEOP', ctx=Load())])), Assign(targets=[Name(id='scaled_mea', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='normalize', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Expr(value=Call(func=Attribute(value=Name(id='flat_parts', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='scaled_mea', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[]))])]), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Name(id='flat_parts', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))], decorator_list=[]), FunctionDef(name='pack_parameters_', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns vvector from parameters dict.')), Assign(targets=[Name(id='keys', ctx=Store())], value=Set(elts=[Constant(value='log_probs'), Constant(value='mean'), Constant(value='k')])), If(test=Compare(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Name(id='keys', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Expected dict with keys {}.'), attr='format', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='hidden_ik', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Subscript(value=Name(id='p', ctx=Load()), slice=Constant(value='k'), ctx=Load()))], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Subscript(value=Name(id='p', ctx=Load()), slice=Constant(value='log_probs'), ctx=Load()), Subscript(value=Name(id='p', ctx=Load()), slice=Constant(value='mean'), ctx=Load()), Name(id='hidden_ik', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='PRIOR_KLD', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='log_priors', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='hidden_ik', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)])), Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logk', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='kldlSom', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[keyword(arg='logk', value=Name(id='logk', ctx=Load()))])), op=Sub(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Constant(value=1e-06)], keywords=[]))), Return(value=Call(func=Attribute(value=Name(id='kldlSom', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='_modes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ʁG¢3ăet̳ɨ modŶ̀eͷsƩ oΙf distri˝buϒtǁiÉ˖ons.\n \n   #PtklFRDzp\nȠ\n   \n̪Argsʌ:ʾ\n  ɴ  pTaraǎίmǇeyςȺter̜s: Distriˋbuti\x7foơn parċȧþ̙ameters͘ wi4tøh shĞapeįćΜ (ϣŃ..., ΎKƲ).Πϓ\n\nÉǙRetu̦rnŝ{͍s:\n Ɔ   Ō̰TupõleĽ|ɗ ȻΚofİ mod0e loʁg prob\u0383abÛilities ¸ɪwξith sǲhapeȵ ǘ(.·ϕ=.., Cϡ) ä́nd modÆ"es witŔCh ïύsŪēρhȭaƴpe (.ʡ.ǿ.Ř, C, DϷÏ).')), Assign(targets=[Tuple(elts=[Name(id='log_pro', ctx=Store()), Name(id='m', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='log_pro', ctx=Load()), Name(id='m', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='_normalize', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='point')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ǠP\x9croĥjǢǌect poi͖gntȁs ɺ®to sȨ͔řʄɁ˲pόʇˣ̗herÛƮÁe.')), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='normalize', ctx=Load()), args=[Name(id='point', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Return(value=Name(id='result', ctx=Load()))], decorator_list=[]), FunctionDef(name='logpdf', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='p'), arg(arg='point')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='log_priors', ctx=Store()), Name(id='m', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='p', ctx=Load())], keywords=[])), Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logk', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='point', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize', ctx=Load()), args=[Name(id='point', ctx=Load())], keywords=[])), Assign(targets=[Name(id='l', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[keyword(arg='logk', value=Name(id='logk', ctx=Load()))])), Assign(targets=[Name(id='scaled_mea', ctx=Store())], value=BinOp(left=Name(id='k', ctx=Load()), op=Mult(), right=Name(id='m', ctx=Load()))), Assign(targets=[Name(id='logexpeL', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='auto_matmul', ctx=Load()), args=[Name(id='scaled_mea', ctx=Load()), Call(func=Attribute(value=Name(id='point', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='log_priors', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='l', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), op=Add(), right=Name(id='logexpeL', ctx=Load()))], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='logiv_scl', args=arguments(posonlyargs=[], args=[arg(arg='V'), arg(arg='z'), arg(arg='eps')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1e-06)]), body=[Expr(value=Constant(value="ǜC˜ompute log IúV ɿć̍̂us÷ingƿ 'MǀSCL\x8a impŻleͫméen͛tatio˥n8.")), Assign(targets=[Name(id='lo_g_ive', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=Name(id='eps', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='IveSCLFunction', ctx=Load()), attr='apply', ctx=Load()), args=[Name(id='V', ctx=Load()), Name(id='z', ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Name(id='log_iv', ctx=Store())], value=BinOp(left=Name(id='lo_g_ive', ctx=Load()), op=Add(), right=Name(id='z', ctx=Load()))), Return(value=Name(id='log_iv', ctx=Load()))], decorator_list=[]), ClassDef(name='LogIvFuncti', bases=[Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='autograd', ctx=Load()), attr='Function', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='ɡˬϝDiffer˶ÀevπnΞtΟίSƵiǎableȵ ćlo̜͟[ȒΌÜÆϸgarȭithʩϡm oɝf mʄʰodif5ĥi@ed̞Ğ BγǐeδsͺsʐelB ʠfĂumnͤcʣtionžΕ ofŀ͠ theɖĠȯ fϟʸirs˭řˊtµ\x9bΒ ŨQkíiĸɬnd˩̂.ÿě#RKQoUzTWy\n\x85ʑ\něIƳʒƟΠnteϢƨàrnal\x9e ǋʽcoΔmputaʜcȒ̯tiɄons aς̲re˞ donʂeǮɵĬ iUƅɮn\x9dϽ ˲dou͎ble prˬȽe\x95̲âɰƩ,ci˲͆s϶ioǥnï.\nȴ\n͟Inp`uƗts:\n  -Ǡɯ vʚ: S̽Ƨ̻̓cχ̆ala΄ȵπrɢ orderʀ.§ āŢOnǾ\x93lÜ˰ˍ̲ȵyʦ ȟn¹ʞonƎ\x8d-͊neg\x97aĩ\x85tͪivêϖ͑eÚʵϦ ¡Πv̔σ0aluϷʿeƑ˖Ǆs Ō(¾>=3 0) arŠϼe suʧ̐p+poß̠ΟṟtedϚ.ĳ\n   Ż P-Ơ\x9e zȕ:ψˍĽ ϛAA\x8erg¡ϸ˰Ȼuǫˉment̵ĠȗǬs ̲ˮt̝ȭens\x98ξoʞrǓ.Ÿ ŁǷOȟ͟ǈ²nly ŜpoʯsĤ¢itive̸ ɾ͊vϠalueősīƻ Ľ̃ú(Ǯ̶> ŷǅ0)ğ arɕɁeÀÌ vsup7Ɇɖpo\x8aǢrted˭\x82.Ð̰ϗɷĢʯƉ\n˵ʥ#SWF\nOȿ̪̑ͺƯutιˆpơuϔƏtƨ΅ƽʡͶƼ{s:ŗ\n Ɂ ϩ  - ]ɇLo˶gÎʷƌa̻ì̜̎ŇïriƉthmǞDˋŏ oÂşΙfȏɈėŨ mo\x84ͷdkiĦfied̯ BLessǇel Ƅ=fϨðR̥uƐnšctʐiķon χrȳÖeΥ\u0380sğulSȦȞȜǰtΙ tϏhĿe saǠʴmƉeˎȁ shaʆͳɩďːpʷe as ǥ`zçΎ`.ʹ')), Assign(targets=[Name(id='EPS', ctx=Store())], value=Constant(value=1e-16)), FunctionDef(name='backward', args=arguments(posonlyargs=[], args=[arg(arg='ctxx'), arg(arg='grad_outputBYqwW')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='V', ctx=Store()), Name(id='z_numpy', ctx=Store())], ctx=Store())], value=Tuple(elts=[Attribute(value=Name(id='ctxx', ctx=Load()), attr='saved_v', ctx=Load()), Attribute(value=Name(id='ctxx', ctx=Load()), attr='saved_z', ctx=Load())], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='z', ctx=Store()), Name(id='ivebwWeL', ctx=Store())], ctx=Store())], value=Attribute(value=Name(id='ctxx', ctx=Load()), attr='saved_tensors', ctx=Load())), Assign(targets=[Name(id='ive_shifted', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='from_numpy', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='ive', ctx=Load()), args=[BinOp(left=Name(id='V', ctx=Load()), op=Add(), right=Constant(value=1)), Name(id='z_numpy', ctx=Load())], keywords=[])], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='grad_outputBYqwW', ctx=Load()), attr='device', ctx=Load())], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='grad_outputBYqwW', ctx=Load()), attr='dtype', ctx=Load())], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=BinOp(left=Name(id='ive_shifted', ctx=Load()), op=Div(), right=Name(id='ivebwWeL', ctx=Load()))), Assign(targets=[Subscript(value=Name(id='r', ctx=Load()), slice=Call(func=Attribute(value=Name(id='r', ctx=Load()), attr='isnan', ctx=Load()), args=[], keywords=[]), ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='sca', ctx=Store())], value=BinOp(left=Name(id='r', ctx=Load()), op=Add(), right=BinOp(left=Name(id='V', ctx=Load()), op=Div(), right=Name(id='z', ctx=Load())))), Return(value=Tuple(elts=[Constant(value=None), BinOp(left=Name(id='grad_outputBYqwW', ctx=Load()), op=Mult(), right=Name(id='sca', ctx=Load()))], ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='ctxx'), arg(arg='V'), arg(arg='z')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ǭ     ί    ')), If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Name(id='V', ctx=Load()), Tuple(elts=[Name(id='i', ctx=Load()), Name(id='floa', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Order must be number, got {}'), attr='format', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='V', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='V', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Constant(value='Negative order.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='z_numpy', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='z', ctx=Load()), attr='double', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[]), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='ivebwWeL', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='from_numpy', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='ive', ctx=Load()), args=[Name(id='V', ctx=Load()), Name(id='z_numpy', ctx=Load())], keywords=[])], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='z', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='ctxx', ctx=Load()), attr='saved_v', ctx=Store())], value=Name(id='V', ctx=Load())), Assign(targets=[Attribute(value=Name(id='ctxx', ctx=Load()), attr='saved_z', ctx=Store())], value=Name(id='z_numpy', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='ctxx', ctx=Load()), attr='save_for_backward', ctx=Load()), args=[Name(id='z', ctx=Load()), Name(id='ivebwWeL', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logi_v', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='ivebwWeL', ctx=Load()), attr='log', ctx=Load()), args=[], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='z', ctx=Load()), attr='dtype', ctx=Load())], keywords=[]), op=Add(), right=Name(id='z', ctx=Load()))), Assign(targets=[Name(id='logiv_small', ctx=Store())], value=BinOp(left=BinOp(left=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='loggamma', ctx=Load()), args=[BinOp(left=Name(id='V', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), op=Sub(), right=BinOp(left=Name(id='V', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[Constant(value=2)], keywords=[]))), op=Add(), right=BinOp(left=Name(id='V', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='z', ctx=Load()), attr='log', ctx=Load()), args=[], keywords=[])))), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='maximum', ctx=Load()), args=[Name(id='logi_v', ctx=Load()), Name(id='logiv_small', ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[]), Assign(targets=[Name(id='logi_v', ctx=Store())], value=Attribute(value=Name(id='LogIvFuncti', ctx=Load()), attr='apply', ctx=Load())), ClassDef(name='IveSCLFunction', bases=[Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='autograd', ctx=Load()), attr='Function', ctx=Load())], keywords=[], body=[FunctionDef(name='backward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='grad_outputBYqwW')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='z', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='saved_tensors', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Return(value=Tuple(elts=[Constant(value=None), BinOp(left=Name(id='grad_outputBYqwW', ctx=Load()), op=Mult(), right=BinOp(left=Call(func=Attribute(value=Name(id='IveSCLFunction', ctx=Load()), attr='apply', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='v', ctx=Load()), op=Sub(), right=Constant(value=1)), Name(id='z', ctx=Load())], keywords=[]), op=Sub(), right=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='IveSCLFunction', ctx=Load()), attr='apply', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='v', ctx=Load()), Name(id='z', ctx=Load())], keywords=[]), op=Mult(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='v', ctx=Load()), op=Add(), right=Name(id='z', ctx=Load()))), op=Div(), right=Name(id='z', ctx=Load()))))], ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='V'), arg(arg='z')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Name(id='ISINSTANCE', ctx=Load()), args=[Name(id='V', ctx=Load()), Tuple(elts=[Name(id='i', ctx=Load()), Name(id='floa', ctx=Load())], ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Order must be number, got {}'), attr='format', ctx=Load()), args=[Call(func=Name(id='type', ctx=Load()), args=[Name(id='V', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Name(id='V', ctx=Load()), ops=[Lt()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='NotImplementedError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Negative order: {}.'), attr='format', ctx=Load()), args=[Name(id='V', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='save_for_backward', ctx=Load()), args=[Name(id='z', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='v', ctx=Store())], value=Name(id='V', ctx=Load())), Assign(targets=[Name(id='z_cpu', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='z', ctx=Load()), attr='data', ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='isclose', ctx=Load()), args=[Name(id='V', ctx=Load()), Constant(value=0)], keywords=[]), body=[Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='i0e', ctx=Load()), args=[Name(id='z_cpu', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='z_cpu', ctx=Load()), attr='dtype', ctx=Load()))]))], orelse=[If(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='isclose', ctx=Load()), args=[Name(id='V', ctx=Load()), Constant(value=1)], keywords=[]), body=[Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='i1e', ctx=Load()), args=[Name(id='z_cpu', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='z_cpu', ctx=Load()), attr='dtype', ctx=Load()))]))], orelse=[Assign(targets=[Name(id='output', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='ive', ctx=Load()), args=[Name(id='V', ctx=Load()), Name(id='z_cpu', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='z_cpu', ctx=Load()), attr='dtype', ctx=Load()))]))])]), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), args=[Name(id='output', ctx=Load())], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='z', ctx=Load()), attr='device', ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])