Module(body=[ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List'), alias(name='Optional'), alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), ImportFrom(module='dataclasses', names=[alias(name='asdict'), alias(name='dataclass')], level=0), Import(names=[alias(name='os')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='uuid')]), Import(names=[alias(name='d4rl')]), Import(names=[alias(name='gym')]), Import(names=[alias(name='random')]), Import(names=[alias(name='pyrallis')]), Import(names=[alias(name='torch.nn', asname='nn')]), Import(names=[alias(name='torch.nn.functional')]), Import(names=[alias(name='torch')]), ImportFrom(module='tqdm', names=[alias(name='trange')], level=0), Import(names=[alias(name='wandb')]), Assign(targets=[Name(id='TensorBatch', ctx=Store())], value=Subscript(value=Name(id='List', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load())), ClassDef(name='TrainConfig', bases=[], keywords=[], body=[AnnAssign(target=Name(id='project', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='CORL'), simple=1), AnnAssign(target=Name(id='group', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='AWAC-D4RL'), simple=1), AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='AWAC'), simple=1), AnnAssign(target=Name(id='checkpoints__path', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), AnnAssign(target=Name(id='env_name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='halfcheetah-medium-expert-v2'), simple=1), AnnAssign(target=Name(id='seed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=42), simple=1), AnnAssign(target=Name(id='test_s_eed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=69), simple=1), AnnAssign(target=Name(id='deterministic_torch', ctx=Store()), annotation=Name(id='ba', ctx=Load()), value=Constant(value=True), simple=1), AnnAssign(target=Name(id='device', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='cuda'), simple=1), AnnAssign(target=Name(id='buffer_size', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=2000000), simple=1), AnnAssign(target=Name(id='num_train_ops', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000000), simple=1), AnnAssign(target=Name(id='batch_siz', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=256), simple=1), AnnAssign(target=Name(id='eval_frequency', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000), simple=1), AnnAssign(target=Name(id='n_test_episo_des', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='normalize_r', ctx=Store()), annotation=Name(id='ba', ctx=Load()), value=Constant(value=False), simple=1), AnnAssign(target=Name(id='hidden_dim', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=256), simple=1), AnnAssign(target=Name(id='learning_rate', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.0003), simple=1), AnnAssign(target=Name(id='gamma', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.99), simple=1), AnnAssign(target=Name(id='TAU', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.005), simple=1), AnnAssign(target=Name(id='awac_lambda', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=1.0), simple=1), FunctionDef(name='__post_init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='̥Ľ i  ˞   ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='env_name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Subscript(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Slice(upper=Constant(value=8)), ctx=Load()), conversion=-1)])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[Name(id='dataclass', ctx=Load())]), FunctionDef(name='wrap', args=arguments(posonlyargs=[], args=[arg(arg='e_nv', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='state_meanWdj', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='state_std', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.0), Constant(value=1.0)]), body=[Expr(value=Constant(value='  ǻǋ  ')), FunctionDef(name='normalize_state', args=arguments(posonlyargs=[], args=[arg(arg='state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Name(id='state', ctx=Load()), op=Sub(), right=Name(id='state_meanWdj', ctx=Load())), op=Div(), right=Name(id='state_std', ctx=Load())))], decorator_list=[]), Assign(targets=[Name(id='e_nv', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformObservation', ctx=Load()), args=[Name(id='e_nv', ctx=Load()), Name(id='normalize_state', ctx=Load())], keywords=[])), Return(value=Name(id='e_nv', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), FunctionDef(name='soft_update', args=arguments(posonlyargs=[], args=[arg(arg='target', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='source', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='TAU', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='target_par', ctx=Store()), Name(id='source_param', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zi', ctx=Load()), args=[Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='source', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='target_par', ctx=Load()), attr='data', ctx=Load()), attr='copy_', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='TAU', ctx=Load())), op=Mult(), right=Attribute(value=Name(id='target_par', ctx=Load()), attr='data', ctx=Load())), op=Add(), right=BinOp(left=Name(id='TAU', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='source_param', ctx=Load()), attr='data', ctx=Load())))], keywords=[]))], orelse=[])], decorator_list=[]), ClassDef(name='Critic', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='action', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ǯ    εyͿ ')), Assign(targets=[Name(id='qS', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_mlp', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[List(elts=[Name(id='state', ctx=Load()), Name(id='action', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])], keywords=[])), Return(value=Name(id='qS', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='hidden_dim', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ˗')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_mlp', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[BinOp(left=Name(id='state', ctx=Load()), op=Add(), right=Name(id='action_dim', ctx=Load())), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Constant(value=1)], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Actor', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='              ')), FunctionDef(name='_get_policy', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_mlp', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='log_std', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_log_std', ctx=Load()), attr='clamp', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_log_std', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_max_log_std', ctx=Load())], keywords=[])), Assign(targets=[Name(id='policy', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='distributions', ctx=Load()), attr='Normal', ctx=Load()), args=[Name(id='m', ctx=Load()), Call(func=Attribute(value=Name(id='log_std', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[])], keywords=[])), Return(value=Name(id='policy', ctx=Load()))], decorator_list=[], returns=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='distributions', ctx=Load()), attr='Distribution', ctx=Load())), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_policy', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Name(id='policy', ctx=Load()), attr='rsample', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='action', ctx=Load()), attr='clamp_', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_action', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_max_action', ctx=Load())], keywords=[])), Assign(targets=[Name(id='log_prob', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='policy', ctx=Load()), attr='log_prob', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[]), attr='sum', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[keyword(arg='keepdim', value=Constant(value=True))])), Return(value=Tuple(elts=[Name(id='action', ctx=Load()), Name(id='log_prob', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='act', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x82   /    ')), Assign(targets=[Name(id='s_tate_t', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Subscript(value=Name(id='state', ctx=Load()), slice=Constant(value=None), ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Name(id='policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_policy', ctx=Load()), args=[Name(id='s_tate_t', ctx=Load())], keywords=[])), If(test=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_mlp', ctx=Load()), attr='training', ctx=Load()), body=[Assign(targets=[Name(id='_action_t', ctx=Store())], value=Call(func=Attribute(value=Name(id='policy', ctx=Load()), attr='sample', ctx=Load()), args=[], keywords=[]))], orelse=[Assign(targets=[Name(id='_action_t', ctx=Store())], value=Attribute(value=Name(id='policy', ctx=Load()), attr='mean', ctx=Load()))]), Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Name(id='_action_t', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='action', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='log_prob', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='action', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     ȴɮ| ɧ ̜       ')), Assign(targets=[Name(id='policy', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_policy', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='log_prob', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='policy', ctx=Load()), attr='log_prob', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[]), attr='sum', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[keyword(arg='keepdim', value=Constant(value=True))])), Return(value=Name(id='log_prob', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='hidden_dim', annotation=Name(id='int', ctx=Load())), arg(arg='min_log_std', annotation=Name(id='float', ctx=Load())), arg(arg='max_log__std', annotation=Name(id='float', ctx=Load())), arg(arg='min_action', annotation=Name(id='float', ctx=Load())), arg(arg='max_action', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[UnaryOp(op=USub(), operand=Constant(value=20.0)), Constant(value=2.0), UnaryOp(op=USub(), operand=Constant(value=1.0)), Constant(value=1.0)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_mlp', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='action_dim', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_log_std', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Parameter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Name(id='action_dim', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load()))])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_log_std', ctx=Store())], value=Name(id='min_log_std', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_log_std', ctx=Store())], value=Name(id='max_log__std', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_min_action', ctx=Store())], value=Name(id='min_action', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_max_action', ctx=Store())], value=Name(id='max_action', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='AdvantageWeightedActorCritic', bases=[], keywords=[], body=[FunctionDef(name='_upd_ate_critic', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='states'), arg(arg='actions'), arg(arg='rewards'), arg(arg='don_es'), arg(arg='next_state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lo', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_loss', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load()), Name(id='rewards', ctx=Load()), Name(id='don_es', ctx=Load()), Name(id='next_state', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='lo', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='lo', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_critic_loss', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='states'), arg(arg='actions'), arg(arg='rewards'), arg(arg='don_es'), arg(arg='next_state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='        ɫĒƶ  ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='next_actions', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Load()), args=[Name(id='next_state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='q_next', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='min', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_1', ctx=Load()), args=[Name(id='next_state', ctx=Load()), Name(id='next_actions', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_2', ctx=Load()), args=[Name(id='next_state', ctx=Load()), Name(id='next_actions', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='q_ta', ctx=Store())], value=BinOp(left=Name(id='rewards', ctx=Load()), op=Add(), right=BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_gamma', ctx=Load()), op=Mult(), right=BinOp(left=Constant(value=1.0), op=Sub(), right=Name(id='don_es', ctx=Load()))), op=Mult(), right=Name(id='q_next', ctx=Load()))))]), Assign(targets=[Name(id='q1', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])), Assign(targets=[Name(id='q2', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])), Assign(targets=[Name(id='q1_lossghO', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='nn', ctx=Load()), attr='functional', ctx=Load()), attr='mse_loss', ctx=Load()), args=[Name(id='q1', ctx=Load()), Name(id='q_ta', ctx=Load())], keywords=[])), Assign(targets=[Name(id='q2_loss', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='nn', ctx=Load()), attr='functional', ctx=Load()), attr='mse_loss', ctx=Load()), args=[Name(id='q2', ctx=Load()), Name(id='q_ta', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lo', ctx=Store())], value=BinOp(left=Name(id='q1_lossghO', ctx=Load()), op=Add(), right=Name(id='q2_loss', ctx=Load()))), Return(value=Name(id='lo', ctx=Load()))], decorator_list=[]), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='b', annotation=Name(id='TensorBatch', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Τ þȮ ŊǪ η˃ʬ  Ɯ     1Ī  Ź  ç  ʪ  ˫ŖȡǰΘ')), Assign(targets=[Tuple(elts=[Name(id='states', ctx=Store()), Name(id='actions', ctx=Store()), Name(id='rewards', ctx=Store()), Name(id='next_state', ctx=Store()), Name(id='don_es', ctx=Store())], ctx=Store())], value=Name(id='b', ctx=Load())), Assign(targets=[Name(id='critic_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_critic', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load()), Name(id='rewards', ctx=Load()), Name(id='don_es', ctx=Load()), Name(id='next_state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_update_actor', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='soft_update', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_tau', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='soft_update', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_2', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_tau', ctx=Load())], keywords=[])), Assign(targets=[Name(id='result', ctx=Store())], value=Dict(keys=[Constant(value='critic_loss'), Constant(value='actor_loss')], values=[Name(id='critic_loss', ctx=Load()), Name(id='actor_loss', ctx=Load())])), Return(value=Name(id='result', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='acto', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='actor_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='c', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='critic_1_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='critic_2', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='critic_2_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='gamma', annotation=Name(id='float', ctx=Load())), arg(arg='TAU', annotation=Name(id='float', ctx=Load())), arg(arg='awac_lambda', annotation=Name(id='float', ctx=Load())), arg(arg='exp_adv_max', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.99), Constant(value=0.005), Constant(value=1.0), Constant(value=100.0)]), body=[Expr(value=Constant(value='                 ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Store())], value=Name(id='acto', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_actor_optimizer', ctx=Store())], value=Name(id='actor_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Store())], value=Name(id='c', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1_optimizer', ctx=Store())], value=Name(id='critic_1_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_1', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='c', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Store())], value=Name(id='critic_2', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2_optimizer', ctx=Store())], value=Name(id='critic_2_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_target_critic_2', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='critic_2', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_gamma', ctx=Store())], value=Name(id='gamma', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_tau', ctx=Store())], value=Name(id='TAU', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_awac_lambda', ctx=Store())], value=Name(id='awac_lambda', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_exp_adv_max', ctx=Store())], value=Name(id='exp_adv_max', ctx=Load()))], decorator_list=[]), FunctionDef(name='_update_actor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='states'), arg(arg='actions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='lo', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_actor_loss', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actor_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='lo', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actor_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='lo', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='st_ate_dict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ǩ y  ʍ k Ž̿ƾ     ƍ')), Return(value=Dict(keys=[Constant(value='actor'), Constant(value='critic_1'), Constant(value='critic_2')], values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[])]))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='load_state_dict', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='st_ate_dict', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='st_ate_dict', ctx=Load()), slice=Constant(value='actor'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='st_ate_dict', ctx=Load()), slice=Constant(value='critic_1'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='st_ate_dict', ctx=Load()), slice=Constant(value='critic_2'), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_ACTOR_LOSS', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='states'), arg(arg='actions')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='pi_a_ction', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Load()), args=[Name(id='states', ctx=Load())], keywords=[])), Assign(targets=[Name(id='v', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='min', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='pi_a_ction', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='pi_a_ction', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='q', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='min', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_1', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_critic_2', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='adv', ctx=Store())], value=BinOp(left=Name(id='q', ctx=Load()), op=Sub(), right=Name(id='v', ctx=Load()))), Assign(targets=[Name(id='weigh_ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='clamp_max', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='exp', ctx=Load()), args=[BinOp(left=Name(id='adv', ctx=Load()), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_awac_lambda', ctx=Load()))], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_exp_adv_max', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='action_log_pro', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actor', ctx=Load()), attr='log_prob', ctx=Load()), args=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load())], keywords=[])), Assign(targets=[Name(id='lo', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=UnaryOp(op=USub(), operand=Name(id='action_log_pro', ctx=Load())), op=Mult(), right=Name(id='weigh_ts', ctx=Load())), attr='mean', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='lo', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='set_seedB', args=arguments(posonlyargs=[], args=[arg(arg='seed', annotation=Name(id='int', ctx=Load())), arg(arg='e_nv', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load()), ctx=Load())), arg(arg='deterministic_torch', annotation=Name(id='ba', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[If(test=Compare(left=Name(id='e_nv', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='e_nv', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='e_nv', ctx=Load()), attr='action_space', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PYTHONHASHSEED'), ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='manual_seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='use_deterministic_algorithms', ctx=Load()), args=[Name(id='deterministic_torch', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='compute_me_an_std', args=arguments(posonlyargs=[], args=[arg(arg='states', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='ep', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Attribute(value=Name(id='states', ctx=Load()), attr='mean', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='std', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='states', ctx=Load()), attr='std', ctx=Load()), args=[Constant(value=0)], keywords=[]), op=Add(), right=Name(id='ep', ctx=Load()))), Return(value=Tuple(elts=[Name(id='m', ctx=Load()), Name(id='std', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='train', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='TrainConfig', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='e_nv', ctx=Store())], value=Call(func=Attribute(value=Name(id='gym', ctx=Load()), attr='make', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='set_seedB', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='seed', ctx=Load()), Name(id='e_nv', ctx=Load())], keywords=[keyword(arg='deterministic_torch', value=Attribute(value=Name(id='config', ctx=Load()), attr='deterministic_torch', ctx=Load()))])), Assign(targets=[Name(id='state', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='e_nv', ctx=Load()), attr='observation_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='action_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='e_nv', ctx=Load()), attr='action_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='d4rl', ctx=Load()), attr='qlearning_dataset', ctx=Load()), args=[Name(id='e_nv', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='config', ctx=Load()), attr='normalize_reward', ctx=Load()), body=[Expr(value=Call(func=Name(id='modify_r_eward', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='state_meanWdj', ctx=Store()), Name(id='state_std', ctx=Store())], ctx=Store())], value=Call(func=Name(id='compute_me_an_std', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load())], keywords=[keyword(arg='eps', value=Constant(value=0.001))])), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Store())], value=Call(func=Name(id='normalize_states', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), Name(id='state_meanWdj', ctx=Load()), Name(id='state_std', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Store())], value=Call(func=Name(id='normalize_states', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load()), Name(id='state_meanWdj', ctx=Load()), Name(id='state_std', ctx=Load())], keywords=[])), Assign(targets=[Name(id='e_nv', ctx=Store())], value=Call(func=Name(id='wrap', ctx=Load()), args=[Name(id='e_nv', ctx=Load())], keywords=[keyword(arg='state_mean', value=Name(id='state_meanWdj', ctx=Load())), keyword(arg='state_std', value=Name(id='state_std', ctx=Load()))])), Assign(targets=[Name(id='replay_buffer', ctx=Store())], value=Call(func=Name(id='replaybuffer', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='action_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='buffer_size', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='replay_buffer', ctx=Load()), attr='load_d4rl_dataset', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_critic_kwargs', ctx=Store())], value=Dict(keys=[Constant(value='state_dim'), Constant(value='action_dim'), Constant(value='hidden_dim')], values=[Name(id='state', ctx=Load()), Name(id='action_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='hidden_dim', ctx=Load())])), Assign(targets=[Name(id='acto', ctx=Store())], value=Call(func=Name(id='Actor', ctx=Load()), args=[], keywords=[keyword(value=Name(id='actor_critic_kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='acto', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='acto', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='learning_rate', ctx=Load()))])), Assign(targets=[Name(id='c', ctx=Store())], value=Call(func=Name(id='Critic', ctx=Load()), args=[], keywords=[keyword(value=Name(id='actor_critic_kwargs', ctx=Load()))])), Assign(targets=[Name(id='critic_2', ctx=Store())], value=Call(func=Name(id='Critic', ctx=Load()), args=[], keywords=[keyword(value=Name(id='actor_critic_kwargs', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='c', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='critic_2', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='critic_1_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='c', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='learning_rate', ctx=Load()))])), Assign(targets=[Name(id='critic_2_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='critic_2', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='learning_rate', ctx=Load()))])), Assign(targets=[Name(id='awacATxfy', ctx=Store())], value=Call(func=Name(id='AdvantageWeightedActorCritic', ctx=Load()), args=[], keywords=[keyword(arg='actor', value=Name(id='acto', ctx=Load())), keyword(arg='actor_optimizer', value=Name(id='actor_optimizer', ctx=Load())), keyword(arg='critic_1', value=Name(id='c', ctx=Load())), keyword(arg='critic_1_optimizer', value=Name(id='critic_1_optimizer', ctx=Load())), keyword(arg='critic_2', value=Name(id='critic_2', ctx=Load())), keyword(arg='critic_2_optimizer', value=Name(id='critic_2_optimizer', ctx=Load())), keyword(arg='gamma', value=Attribute(value=Name(id='config', ctx=Load()), attr='gamma', ctx=Load())), keyword(arg='tau', value=Attribute(value=Name(id='config', ctx=Load()), attr='tau', ctx=Load())), keyword(arg='awac_lambda', value=Attribute(value=Name(id='config', ctx=Load()), attr='awac_lambda', ctx=Load()))])), Expr(value=Call(func=Name(id='wandb_init', ctx=Load()), args=[Call(func=Name(id='asdict', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[])], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Checkpoints path: '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), With(items=[withitem(context_expr=Call(func=Name(id='o', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='config.yaml')], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='fXyPP', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='fXyPP', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='full_eval_s', ctx=Store()), Name(id='full_normalized_eval_scores', ctx=Store())], ctx=Store())], value=Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())), For(target=Name(id='t', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='num_train_ops', ctx=Load())], keywords=[keyword(arg='ncols', value=Constant(value=80))]), body=[Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Attribute(value=Name(id='replay_buffer', ctx=Load()), attr='sample', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[])), Assign(targets=[Name(id='b', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='b', ctx=Store()), iter=Name(id='b', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='update_result', ctx=Store())], value=Call(func=Attribute(value=Name(id='awacATxfy', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='b', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Name(id='update_result', ctx=Load())], keywords=[keyword(arg='step', value=Name(id='t', ctx=Load()))])), If(test=Compare(left=BinOp(left=BinOp(left=Name(id='t', ctx=Load()), op=Add(), right=Constant(value=1)), op=Mod(), right=Attribute(value=Name(id='config', ctx=Load()), attr='eval_frequency', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='eval_scores', ctx=Store())], value=Call(func=Name(id='eval_actor', ctx=Load()), args=[Name(id='e_nv', ctx=Load()), Name(id='acto', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='n_test_episodes', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='test_seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='full_eval_s', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='eval_scores', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[Constant(value='eval_score')], values=[Call(func=Attribute(value=Name(id='eval_scores', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])])], keywords=[keyword(arg='step', value=Name(id='t', ctx=Load()))])), If(test=Call(func=Name(id='ha_sattr', ctx=Load()), args=[Name(id='e_nv', ctx=Load()), Constant(value='get_normalized_score')], keywords=[]), body=[Assign(targets=[Name(id='normalized', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='e_nv', ctx=Load()), attr='get_normalized_score', ctx=Load()), args=[Name(id='eval_scores', ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=100.0))), Expr(value=Call(func=Attribute(value=Name(id='full_normalized_eval_scores', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='normalized', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[Constant(value='normalized_eval_score')], values=[Call(func=Attribute(value=Name(id='normalized', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])])], keywords=[keyword(arg='step', value=Name(id='t', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='save', ctx=Load()), args=[Call(func=Attribute(value=Name(id='awacATxfy', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), JoinedStr(values=[Constant(value='checkpoint_'), FormattedValue(value=Name(id='t', ctx=Load()), conversion=-1), Constant(value='.pt')])], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), With(items=[withitem(context_expr=Call(func=Name(id='o', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='/eval_scores.npy')], keywords=[]), Constant(value='wb')], keywords=[]), optional_vars=Name(id='fXyPP', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='fXyPP', ctx=Load()), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='full_eval_s', ctx=Load())], keywords=[])], keywords=[]))]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='full_normalized_eval_scores', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)]), body=[With(items=[withitem(context_expr=Call(func=Name(id='o', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='/normalized_eval_scores.npy')], keywords=[]), Constant(value='wb')], keywords=[]), optional_vars=Name(id='fXyPP', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='fXyPP', ctx=Load()), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='full_normalized_eval_scores', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='finish', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='wrap', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='r', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='max_episode_steps')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='retu', ctx=Store()), Name(id='lengths', ctx=Store())], ctx=Store())], value=Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='ep_ret', ctx=Store()), Name(id='ep_l', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0)], ctx=Load())), For(target=Tuple(elts=[Name(id='r', ctx=Store()), Name(id='d', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zi', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='ep_ret', ctx=Store()), op=Add(), value=Call(func=Name(id='float', ctx=Load()), args=[Name(id='r', ctx=Load())], keywords=[])), AugAssign(target=Name(id='ep_l', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=BoolOp(op=Or(), values=[Name(id='d', ctx=Load()), Compare(left=Name(id='ep_l', ctx=Load()), ops=[Eq()], comparators=[Name(id='max_episode_steps', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='retu', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_ret', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='lengths', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_l', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ep_ret', ctx=Store()), Name(id='ep_l', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0)], ctx=Load()))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='lengths', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_l', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='sum', ctx=Load()), args=[Name(id='lengths', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load())], keywords=[])])), Return(value=Tuple(elts=[Call(func=Name(id='min', ctx=Load()), args=[Name(id='retu', ctx=Load())], keywords=[]), Call(func=Name(id='max', ctx=Load()), args=[Name(id='retu', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='eval_actor', args=arguments(posonlyargs=[], args=[arg(arg='e_nv', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='acto', annotation=Name(id='Actor', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load())), arg(arg='n_episodes', annotation=Name(id='int', ctx=Load())), arg(arg='seed', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ν ̒Łϰ\u0382ɮ ű ͩļ  ͽ    ͗®    ̬̇ =ʀ ʊ   ')), Expr(value=Call(func=Attribute(value=Name(id='e_nv', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='acto', ctx=Load()), attr='eval', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='episode_rewards', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='n_episodes', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='state', ctx=Store()), Name(id='_done', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='e_nv', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]), Constant(value=False)], ctx=Load())), Assign(targets=[Name(id='episode_reward', ctx=Store())], value=Constant(value=0.0)), While(test=UnaryOp(op=Not(), operand=Name(id='_done', ctx=Load())), body=[Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Name(id='acto', ctx=Load()), attr='act', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='device', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='state', ctx=Store()), Name(id='reward', ctx=Store()), Name(id='_done', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='e_nv', ctx=Load()), attr='step', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[])), AugAssign(target=Name(id='episode_reward', ctx=Store()), op=Add(), value=Name(id='reward', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='episode_rewards', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='episode_reward', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='acto', ctx=Load()), attr='train', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='episode_rewards', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), ClassDef(name='replaybuffer', bases=[], keywords=[], body=[FunctionDef(name='sample', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='batch_siz', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Load())], keywords=[])], keywords=[keyword(arg='size', value=Name(id='batch_siz', ctx=Load()))])), Assign(targets=[Name(id='states', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='actions', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='rewards', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='next_state', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='don_es', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Return(value=List(elts=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load()), Name(id='rewards', ctx=Load()), Name(id='next_state', ctx=Load()), Name(id='don_es', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Name(id='TensorBatch', ctx=Load())), FunctionDef(name='load_d4rl_dataset', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Ǒ Ā̽ ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ValueEr_ror', ctx=Load()), args=[Constant(value='Trying to load data into non-empty replay buffer')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='n_transitions', ctx=Store())], value=Subscript(value=Attribute(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='n_transitions', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer_size', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueEr_ror', ctx=Load()), args=[Constant(value='Replay buffer is smaller than the dataset you are trying to load!')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='actions'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='terminals'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Store()), op=Add(), value=Name(id='n_transitions', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), Name(id='n_transitions', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Dataset size: '), FormattedValue(value=Name(id='n_transitions', ctx=Load()), conversion=-1)])], keywords=[]))], decorator_list=[]), FunctionDef(name='add_transiti_on', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ă    ')), Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='buffer_size', annotation=Name(id='int', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='cpu')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer_size', ctx=Store())], value=Name(id='buffer_size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='action_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_device', ctx=Store())], value=Name(id='device', ctx=Load()))], decorator_list=[]), FunctionDef(name='_to_tensor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='self', ctx=Load()), attr='_device', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], decorator_list=[]), FunctionDef(name='modify_r_eward', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='env_name'), arg(arg='max_episode_steps')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1000)]), body=[If(test=Call(func=Name(id='any', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Name(id='s', ctx=Load()), ops=[In()], comparators=[Name(id='env_name', ctx=Load())]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Tuple(elts=[Constant(value='halfcheetah'), Constant(value='hopper'), Constant(value='walker2d')], ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='MIN_RET', ctx=Store()), Name(id='max_ret', ctx=Store())], ctx=Store())], value=Call(func=Name(id='r', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Name(id='max_episode_steps', ctx=Load())], keywords=[])), AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Div(), value=BinOp(left=Name(id='max_ret', ctx=Load()), op=Sub(), right=Name(id='MIN_RET', ctx=Load()))), AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Mult(), value=Name(id='max_episode_steps', ctx=Load()))], orelse=[If(test=Compare(left=Constant(value='antmaze'), ops=[In()], comparators=[Name(id='env_name', ctx=Load())]), body=[AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Sub(), value=Constant(value=1.0))], orelse=[])])], decorator_list=[]), FunctionDef(name='wandb_init', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='dict', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='init', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='project', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='project'), ctx=Load())), keyword(arg='group', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='group'), ctx=Load())), keyword(arg='name', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='name'), ctx=Load())), keyword(arg='id', value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wandb', ctx=Load()), attr='run', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='normalize_states', args=arguments(posonlyargs=[], args=[arg(arg='states', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='m', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='std', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Name(id='states', ctx=Load()), op=Sub(), right=Name(id='m', ctx=Load())), op=Div(), right=Name(id='std', ctx=Load())))], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='train', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])