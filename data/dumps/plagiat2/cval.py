Module(body=[Import(names=[alias(name='os')]), ImportFrom(module='runner', names=[alias(name='parse_logger'), alias(name='Runner')], level=2), ImportFrom(module='io', names=[alias(name='read_yaml'), alias(name='write_yaml')], level=2), ImportFrom(module='config', names=[alias(name='read_config'), alias(name='write_config'), alias(name='prepare_config')], level=2), ImportFrom(module='dataset', names=[alias(name='DatasetCollection')], level=2), Import(names=[alias(name='subprocess')]), Import(names=[alias(name='torch')]), ImportFrom(module='common', names=[alias(name='aggregate_metrics'), alias(name='log_wandb_metrics'), alias(name='make_directory'), alias(name='patch_cmd'), alias(name='print_nested')], level=1), FunctionDef(name='get_train_root', args=arguments(posonlyargs=[], args=[arg(arg='train_root'), arg(arg='fold')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='             ')), Assign(targets=[Name(id='partsKb', ctx=Store())], value=List(elts=[Name(id='train_root', ctx=Load())], ctx=Load())), If(test=Compare(left=Name(id='fold', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='partsKb', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='fold-{}'), attr='format', ctx=Load()), args=[Name(id='fold', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Starred(value=Name(id='partsKb', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='make_directory', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])), Return(value=Name(id='path', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_gpus', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='cuda', ctx=Load()), attr='is_available', ctx=Load()), args=[], keywords=[])), body=[Return(value=List(elts=[], ctx=Load()))], orelse=[]), Assign(targets=[Name(id='visible_gpus', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), attr='get', ctx=Load()), args=[Constant(value='CUDA_VISIBLE_DEVICES'), Constant(value=None)], keywords=[])), If(test=Compare(left=Name(id='visible_gpus', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='CUDA_VISIBLE_DEVICES required')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='gpus', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='m', ctx=Load()), args=[Name(id='int', ctx=Load()), Call(func=Attribute(value=Name(id='visible_gpus', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[])], keywords=[])], keywords=[])), Return(value=Name(id='gpus', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_train_cmd', args=arguments(posonlyargs=[], args=[arg(arg='args'), arg(arg='fold')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Name(id='dict_', ctx=Load()), args=[Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gpus', ctx=Store())], value=Call(func=Name(id='get_gpus', ctx=Load()), args=[], keywords=[])), If(test=Name(id='gpus', ctx=Load()), body=[Assign(targets=[Name(id='g', ctx=Store())], value=Subscript(value=Name(id='gpus', ctx=Load()), slice=BinOp(left=Name(id='fold', ctx=Load()), op=Mod(), right=Call(func=Name(id='len_', ctx=Load()), args=[Name(id='gpus', ctx=Load())], keywords=[])), ctx=Load())), Assign(targets=[Subscript(value=Name(id='env', ctx=Load()), slice=Constant(value='CUDA_VISIBLE_DEVICES'), ctx=Store())], value=Call(func=Name(id='s', ctx=Load()), args=[Name(id='g', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='top_roo_t', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load())), Assign(targets=[Name(id='train_root', ctx=Store())], value=Call(func=Name(id='get_train_root', ctx=Load()), args=[Name(id='top_roo_t', ctx=Load()), Name(id='fold', ctx=Load())], keywords=[])), Assign(targets=[Name(id='conf', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='read_config', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load())], keywords=[]), orelse=Dict(keys=[], values=[]))), Assign(targets=[Name(id='conf', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Name(id='Runner', ctx=Load()), Name(id='conf', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='conf', ctx=Load()), slice=Constant(value='dataset_params'), ctx=Store())], value=BoolOp(op=Or(), values=[Subscript(value=Name(id='conf', ctx=Load()), slice=Constant(value='dataset_params'), ctx=Load()), Dict(keys=[], values=[])])), Assign(targets=[Subscript(value=Subscript(value=Name(id='conf', ctx=Load()), slice=Constant(value='dataset_params'), ctx=Load()), slice=Constant(value='validation_fold'), ctx=Store())], value=Name(id='fold', ctx=Load())), Assign(targets=[Subscript(value=Name(id='conf', ctx=Load()), slice=Constant(value='seed'), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='conf', ctx=Load()), slice=Constant(value='seed'), ctx=Load()), op=Add(), right=Name(id='fold', ctx=Load()))), Assign(targets=[Name(id='config_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='train_root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='conf', ctx=Load()), Name(id='config_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ne_w_args', ctx=Store())], value=Dict(keys=[Constant(value='--config'), Constant(value='--train-root'), Constant(value='--logger')], values=[Name(id='config_path', ctx=Load()), Name(id='train_root', ctx=Load()), Call(func=Name(id='patch_logger', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='logger', ctx=Load()), Name(id='fold', ctx=Load())], keywords=[])])), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='ne_w_args', ctx=Load()), slice=Constant(value='--checkpoint'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Load()), attr='replace', ctx=Load()), args=[Constant(value='{fold}'), Call(func=Name(id='s', ctx=Load()), args=[Name(id='fold', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), For(target=Name(id='key', ctx=Store()), iter=List(elts=[Constant(value='WANDB_SWEEP_ID'), Constant(value='WANDB_RUN_ID'), Constant(value='WANDB_SWEEP_PARAM_PATH')], ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='pop', ctx=Load()), args=[Name(id='key', ctx=Load()), Constant(value=None)], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='env', ctx=Load()), Call(func=Name(id='patch_cmd', ctx=Load()), args=[Constant(value='train'), Name(id='ne_w_args', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='patch_logger', args=arguments(posonlyargs=[], args=[arg(arg='logger'), arg(arg='fold')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='LOGGER_TYPE', ctx=Store()), Name(id='project', ctx=Store()), Name(id='experimentjp', ctx=Store()), Name(id='group', ctx=Store())], ctx=Store())], value=Call(func=Name(id='parse_logger', ctx=Load()), args=[Name(id='logger', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='LOGGER_TYPE', ctx=Load()), ops=[Eq()], comparators=[Constant(value='tensorboard')]), body=[Assign(targets=[Name(id='logger', ctx=Store())], value=Constant(value='tensorboard'))], orelse=[If(test=Compare(left=Name(id='LOGGER_TYPE', ctx=Load()), ops=[Eq()], comparators=[Constant(value='wandb')]), body=[If(test=Compare(left=Name(id='group', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='group', ctx=Store())], value=Name(id='experimentjp', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='experimentjp', ctx=Store())], value=BinOp(left=Name(id='experimentjp', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Constant(value='-fold-{}'), attr='format', ctx=Load()), args=[Name(id='fold', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Attribute(value=Constant(value=':'), attr='join', ctx=Load()), args=[List(elts=[Name(id='LOGGER_TYPE', ctx=Load()), Name(id='project', ctx=Load()), Name(id='experimentjp', ctx=Load()), Name(id='group', ctx=Load())], ctx=Load())], keywords=[]))], orelse=[])]), Return(value=Name(id='logger', ctx=Load()))], decorator_list=[]), FunctionDef(name='run_paralleljEf', args=arguments(posonlyargs=[], args=[arg(arg='cmdsGuIIT')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ͷ  ¿  \x87    ̿  ÎƱ ʬ  ̞   Ƚĸ')), Assign(targets=[Name(id='processes', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Tuple(elts=[Name(id='env', ctx=Store()), Name(id='cmd', ctx=Store())], ctx=Store()), iter=Name(id='cmdsGuIIT', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='processes', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='subprocess', ctx=Load()), attr='Popen', ctx=Load()), args=[Name(id='cmd', ctx=Load())], keywords=[keyword(arg='env', value=Name(id='env', ctx=Load())), keyword(arg='cwd', value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getcwd', ctx=Load()), args=[], keywords=[]))])], keywords=[]))], orelse=[]), For(target=Name(id='p', ctx=Store()), iter=Name(id='processes', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='wait', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Subprocess failed with code {}.'), attr='format', ctx=Load()), args=[Attribute(value=Name(id='p', ctx=Load()), attr='returncode', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='cv', args=arguments(posonlyargs=[], args=[arg(arg='args')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='conf', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='read_config', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load())], keywords=[]), orelse=Dict(keys=[], values=[]))), Assign(targets=[Name(id='dataset_config', ctx=Store())], value=Call(func=Attribute(value=Name(id='conf', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='dataset_params'), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='dataset_config', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Call(func=Attribute(value=Name(id='DatasetCollection', ctx=Load()), attr='get_default_config', ctx=Load()), args=[], keywords=[]), Name(id='dataset_config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='num_folds', ctx=Store())], value=Subscript(value=Name(id='dataset_config', ctx=Load()), slice=Constant(value='num_validation_folds'), ctx=Load())), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isdir', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load())], keywords=[])), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='mkdir', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='NUM_PARALLEL', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Call(func=Name(id='len_', ctx=Load()), args=[Call(func=Name(id='get_gpus', ctx=Load()), args=[], keywords=[])], keywords=[]), Constant(value=1)], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='ran_ge', ctx=Load()), args=[Constant(value=0), Name(id='num_folds', ctx=Load()), Name(id='NUM_PARALLEL', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='cmdsGuIIT', ctx=Store())], value=ListComp(elt=Call(func=Name(id='get_train_cmd', ctx=Load()), args=[Name(id='args', ctx=Load()), Name(id='fold', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='fold', ctx=Store()), iter=Call(func=Name(id='ran_ge', ctx=Load()), args=[Name(id='i', ctx=Load()), Call(func=Name(id='min', ctx=Load()), args=[Name(id='num_folds', ctx=Load()), BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Name(id='NUM_PARALLEL', ctx=Load()))], keywords=[])], keywords=[]), ifs=[], is_async=0)])), Expr(value=Call(func=Name(id='run_paralleljEf', ctx=Load()), args=[Name(id='cmdsGuIIT', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='metricsk', ctx=Store())], value=Call(func=Name(id='aggregate_metrics', ctx=Load()), args=[Starred(value=ListComp(elt=Call(func=Name(id='read_yaml', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Call(func=Name(id='get_train_root', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load()), Name(id='fold', ctx=Load())], keywords=[]), Constant(value='metrics.yaml')], keywords=[])], keywords=[]), generators=[comprehension(target=Name(id='fold', ctx=Store()), iter=Call(func=Name(id='ran_ge', ctx=Load()), args=[Name(id='num_folds', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='log_wandb_metrics', ctx=Load()), args=[Name(id='metricsk', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='logger', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='metricsk', ctx=Load()), slice=Constant(value='num_folds'), ctx=Store())], value=Name(id='num_folds', ctx=Load())), Expr(value=Call(func=Name(id='print_nested', ctx=Load()), args=[Name(id='metricsk', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_yaml', ctx=Load()), args=[Name(id='metricsk', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load()), Constant(value='metrics.yaml')], keywords=[])], keywords=[])), Return(value=Name(id='metricsk', ctx=Load()))], decorator_list=[])], type_ignores=[])