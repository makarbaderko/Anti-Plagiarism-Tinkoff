Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='tempfile')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), ImportFrom(module='probabilistic_embeddings.config', names=[alias(name='update_config'), alias(name='write_config')], level=0), Import(names=[alias(name='torch')]), ImportFrom(module='torchvision', names=[alias(name='transforms')], level=0), ImportFrom(module='probabilistic_embeddings', names=[alias(name='commands')], level=0), Import(names=[alias(name='os')]), ClassDef(name='namespace', bases=[], keywords=[], body=[Assign(targets=[Name(id='ARGS', ctx=Store())], value=List(elts=[Constant(value='cmd'), Constant(value='data'), Constant(value='name'), Constant(value='logger'), Constant(value='config'), Constant(value='train_root'), Constant(value='checkpoint'), Constant(value='no_strict_init'), Constant(value='from_stage'), Constant(value='from_seed'), Constant(value='sweep_id'), Constant(value='clean')], ctx=Load())), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' îĬ  z  ͏ q  - ʲ łϢ  G Ă϶   ɉ ')), If(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ARGS', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='attributeerror', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load()), Constant(value=None)], keywords=[]))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwarg'), defaults=[]), body=[Expr(value=Constant(value='č  čΏȳό    µ   Ƃ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwarg', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='CONFIG', ctx=Store())], value=Dict(keys=[Constant(value='dataset_params'), Constant(value='model_params'), Constant(value='trainer_params'), Constant(value='metrics_params'), Constant(value='num_evaluation_seeds'), Constant(value='num_hopt_trials'), Constant(value='hopt_backend'), Constant(value='hopt_params')], values=[Dict(keys=[Constant(value='name'), Constant(value='batch_size'), Constant(value='num_workers'), Constant(value='validation_fold'), Constant(value='num_validation_folds'), Constant(value='_hopt')], values=[Constant(value='debug-openset'), Constant(value=4), Constant(value=0), Constant(value=0), Constant(value=2), Dict(keys=[Constant(value='batch_size')], values=[Dict(keys=[Constant(value='values')], values=[List(elts=[Constant(value=4), Constant(value=8)], ctx=Load())])])]), Dict(keys=[Constant(value='embedder_params')], values=[Dict(keys=[Constant(value='pretrained'), Constant(value='model_type')], values=[Constant(value=False), Constant(value='resnet18')])]), Dict(keys=[Constant(value='num_epochs')], values=[Constant(value=1)]), Dict(keys=[Constant(value='train_classification_metrics')], values=[List(elts=[Constant(value='nearest'), Constant(value='scores')], ctx=Load())]), Constant(value=2), Constant(value=2), Constant(value='optuna-tpe'), Dict(keys=[Constant(value='num_evaluation_seeds'), Constant(value='trainer_params')], values=[Constant(value=1), Dict(keys=[Constant(value='selection_dataset'), Constant(value='selection_metric')], values=[Constant(value='valid'), Constant(value='recall@1')])])])), ClassDef(name='TestComm', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='ϙ  ɽ    ˶\x98   ͽ')), FunctionDef(name='test_train_te', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='CONFIG', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='train')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='train', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='test')), keyword(arg='checkpoint', value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='checkpoints'), Constant(value='best.pth')], keywords=[])), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard'))])), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='test', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_cvalJor', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='CONFIG', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='cval')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Store())], value=List(elts=[Constant(value=None), Attribute(value=Name(id='args', ctx=Load()), attr='cmd', ctx=Load()), Constant(value='--config'), Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), Constant(value='--logger'), Attribute(value=Name(id='args', ctx=Load()), attr='logger', ctx=Load()), Constant(value='--train-root'), Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='data', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='cval', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_evaluateZrO', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='CONFIG', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='evaluate')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load())), keyword(arg='from_seed', value=Constant(value=0))])), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Store())], value=List(elts=[Constant(value=None), Attribute(value=Name(id='args', ctx=Load()), attr='cmd', ctx=Load()), Constant(value='--config'), Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), Constant(value='--logger'), Attribute(value=Name(id='args', ctx=Load()), attr='logger', ctx=Load()), Constant(value='--train-root'), Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='data', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='evaluate', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='TEST_HOPT', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='CONFIG', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='hopt')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='sys', ctx=Load()), attr='argv', ctx=Store())], value=List(elts=[Constant(value=None), Attribute(value=Name(id='args', ctx=Load()), attr='cmd', ctx=Load()), Constant(value='--config'), Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), Constant(value='--logger'), Attribute(value=Name(id='args', ctx=Load()), attr='logger', ctx=Load()), Constant(value='--train-root'), Attribute(value=Name(id='args', ctx=Load()), attr='train_root', ctx=Load()), Attribute(value=Name(id='args', ctx=Load()), attr='data', ctx=Load())], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='hopt', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_trace_embedder', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Ƹ  Q  3ʕV  ĩʽ ȧ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), Expr(value=Call(func=Name(id='write_config', ctx=Load()), args=[Name(id='CONFIG', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='train')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='train', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='checkpoints'), Constant(value='best.pth')], keywords=[])), Assign(targets=[Attribute(value=Name(id='args', ctx=Load()), attr='trace_output', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='traced.pth')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='trace_embedder', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='isfile', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='trace_output', ctx=Load())], keywords=[])], keywords=[]))])], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])