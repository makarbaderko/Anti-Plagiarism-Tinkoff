Module(body=[Import(names=[alias(name='argparse')]), Import(names=[alias(name='io')]), Import(names=[alias(name='os')]), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), Import(names=[alias(name='mxnet', asname='mx')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='tqdm', names=[alias(name='tqdm')], level=0), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), ImportFrom(module='probabilistic_embeddings.config', names=[alias(name='update_config'), alias(name='as_flat_config'), alias(name='as_nested_config')], level=0), ImportFrom(module='probabilistic_embeddings.io', names=[alias(name='read_yaml'), alias(name='write_yaml')], level=0), ImportFrom(module='probabilistic_embeddings.dataset', names=[alias(name='DatasetCollection')], level=0), ImportFrom(module='probabilistic_embeddings.dataset.common', names=[alias(name='DatasetWrapper')], level=0), ImportFrom(module='probabilistic_embeddings.runner', names=[alias(name='Runner')], level=0), FunctionDef(name='PARSE_ARGUMENTS', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ')), Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[Constant(value='Generate configs for reality check from templates.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='templates')], keywords=[keyword(arg='help', value=Constant(value='Templates root.'))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='dst')], keywords=[keyword(arg='help', value=Constant(value='Target configs root.'))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--best')], keywords=[keyword(arg='help', value=Constant(value='Best hopts root.'))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--embeddings-dims')], keywords=[keyword(arg='help', value=Constant(value='Coma-separated list of required embeddings dimensions.')), keyword(arg='default', value=Constant(value='128,512'))])), Return(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='get_', args=arguments(posonlyargs=[], args=[arg(arg='path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='exists', ctx=Load()), args=[], keywords=[])), body=[Return(value=Dict(keys=[], values=[]))], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Load best parameters from {}.'), attr='format', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='flat_config', ctx=Store())], value=DictComp(key=Name(id='k', ctx=Load()), value=Subscript(value=Name(id='v', ctx=Load()), slice=Constant(value='value'), ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Call(func=Name(id='read_yaml', ctx=Load()), args=[Name(id='path', ctx=Load())], keywords=[]), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='wandb')], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='_')], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='dataset_params')], keywords=[])), UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='k', ctx=Load()), attr='startswith', ctx=Load()), args=[Constant(value='metrics_params')], keywords=[]))])], is_async=0)])), Assign(targets=[Name(id='configq', ctx=Store())], value=Call(func=Name(id='as_nested_config', ctx=Load()), args=[Name(id='flat_config', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='configq', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='git_commit'), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='defa', ctx=Store())], value=Call(func=Name(id='setNGMs', ctx=Load()), args=[Call(func=Attribute(value=Name(id='Runner', ctx=Load()), attr='get_default_config', ctx=Load()), args=[], keywords=[])], keywords=[])), For(target=Name(id='k', ctx=Store()), iter=Name(id='configq', ctx=Load()), body=[If(test=Compare(left=Name(id='k', ctx=Load()), ops=[NotIn()], comparators=[Name(id='defa', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Unknown parameter: {}.'), attr='format', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='configq', ctx=Load()))], decorator_list=[]), FunctionDef(name='main', args=arguments(posonlyargs=[], args=[arg(arg='a')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='sr_c', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='a', ctx=Load()), attr='templates', ctx=Load())], keywords=[])), Assign(targets=[Name(id='_dst', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='a', ctx=Load()), attr='dst', ctx=Load())], keywords=[])), Assign(targets=[Name(id='best', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='a', ctx=Load()), attr='best', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='a', ctx=Load()), attr='best', ctx=Load())], keywords=[]), orelse=Constant(value=None))), Assign(targets=[Name(id='filenames', ctx=Store())], value=SetComp(elt=Call(func=Attribute(value=Name(id='path', ctx=Load()), attr='relative_to', ctx=Load()), args=[Name(id='sr_c', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='path', ctx=Store()), iter=Call(func=Attribute(value=Name(id='sr_c', ctx=Load()), attr='glob', ctx=Load()), args=[Constant(value='reality-*.yaml')], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='requi', ctx=Store()), iter=List(elts=[Call(func=Name(id='Path', ctx=Load()), args=[Constant(value='reality-base.yaml')], keywords=[]), Call(func=Name(id='Path', ctx=Load()), args=[Constant(value='reality-datasets.yaml')], keywords=[])], ctx=Load()), body=[Try(body=[Expr(value=Call(func=Attribute(value=Name(id='filenames', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='requi', ctx=Load())], keywords=[]))], handlers=[ExceptHandler(type=Name(id='KeyError', ctx=Load()), body=[Raise(exc=Call(func=Name(id='FileNo_tFoundError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Need {} template.'), attr='format', ctx=Load()), args=[Name(id='requi', ctx=Load())], keywords=[])], keywords=[]))])], orelse=[], finalbody=[])], orelse=[]), Assign(targets=[Name(id='templateIXfh', ctx=Store())], value=Call(func=Name(id='read_yaml', ctx=Load()), args=[BinOp(left=Name(id='sr_c', ctx=Load()), op=Div(), right=Constant(value='reality-base.yaml'))], keywords=[])), Assign(targets=[Name(id='data', ctx=Store())], value=Call(func=Name(id='read_yaml', ctx=Load()), args=[BinOp(left=Name(id='sr_c', ctx=Load()), op=Div(), right=Constant(value='reality-datasets.yaml'))], keywords=[])), Assign(targets=[Name(id='dimsfyd', ctx=Store())], value=ListComp(elt=Call(func=Name(id='INT', ctx=Load()), args=[Name(id='s', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='a', ctx=Load()), attr='embeddings_dims', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='filename', ctx=Store()), iter=Name(id='filenames', ctx=Load()), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Attribute(value=Name(id='filename', ctx=Load()), attr='stem', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='_', ctx=Store()), Name(id='pip', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='str', ctx=Load()), args=[Attribute(value=Name(id='filename', ctx=Load()), attr='stem', ctx=Load())], keywords=[]), attr='split', ctx=Load()), args=[Constant(value='-'), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='pipeline_patch', ctx=Store())], value=Call(func=Name(id='read_yaml', ctx=Load()), args=[BinOp(left=Name(id='sr_c', ctx=Load()), op=Div(), right=Name(id='filename', ctx=Load()))], keywords=[])), For(target=Tuple(elts=[Name(id='datas_et', ctx=Store()), Name(id='dataset_pat_ch', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='data', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[For(target=Name(id='dim', ctx=Store()), iter=Name(id='dimsfyd', ctx=Load()), body=[Assign(targets=[Name(id='filename', ctx=Store())], value=Call(func=Attribute(value=Constant(value='{}-{}-{}.yaml'), attr='format', ctx=Load()), args=[Name(id='pip', ctx=Load()), Name(id='dim', ctx=Load()), Name(id='datas_et', ctx=Load())], keywords=[])), Assign(targets=[Name(id='configq', ctx=Store())], value=Call(func=Name(id='update_config', ctx=Load()), args=[Name(id='templateIXfh', ctx=Load()), Name(id='dataset_pat_ch', ctx=Load())], keywords=[])), Assign(targets=[Name(id='configq', ctx=Store())], value=Call(func=Name(id='update_config', ctx=Load()), args=[Name(id='configq', ctx=Load()), Name(id='pipeline_patch', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='best', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='configq', ctx=Store())], value=Call(func=Name(id='update_config', ctx=Load()), args=[Name(id='configq', ctx=Load()), Call(func=Name(id='get_', ctx=Load()), args=[BinOp(left=Name(id='best', ctx=Load()), op=Div(), right=Name(id='filename', ctx=Load()))], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='configq', ctx=Store())], value=Call(func=Name(id='update_config', ctx=Load()), args=[Name(id='configq', ctx=Load()), Dict(keys=[Constant(value='model_params')], values=[Dict(keys=[Constant(value='distribution_params')], values=[Dict(keys=[Constant(value='dim')], values=[Name(id='dim', ctx=Load())])])])], keywords=[])), Expr(value=Call(func=Name(id='write_yaml', ctx=Load()), args=[Name(id='configq', ctx=Load()), BinOp(left=Name(id='_dst', ctx=Load()), op=Div(), right=Name(id='filename', ctx=Load()))], keywords=[]))], orelse=[])], orelse=[])], orelse=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Name(id='PARSE_ARGUMENTS', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='main', ctx=Load()), args=[Name(id='a', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])