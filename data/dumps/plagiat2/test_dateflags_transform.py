Module(body=[ImportFrom(module='typing', names=[alias(name='Dict')], level=0), ImportFrom(module='datetime', names=[alias(name='timedelta')], level=0), ImportFrom(module='typing', names=[alias(name='Union')], level=0), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), ImportFrom(module='typing', names=[alias(name='Tuple')], level=0), ImportFrom(module='etna.transforms.timestamp', names=[alias(name='DateFlagsTransform')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='typing', names=[alias(name='List')], level=0), Assign(targets=[Name(id='WEEKEND_DAYS', ctx=Store())], value=Tuple(elts=[Constant(value=5), Constant(value=6)], ctx=Load())), Assign(targets=[Name(id='SPECIAL_DAYS', ctx=Store())], value=List(elts=[Constant(value=1), Constant(value=4)], ctx=Load())), Assign(targets=[Name(id='SP_ECIAL_DAYS_PARAMS', ctx=Store())], value=Set(elts=[Constant(value='special_days_in_week'), Constant(value='special_days_in_month')])), Assign(targets=[Name(id='INIT_PARAMS_TEMPLATE', ctx=Store())], value=Dict(keys=[Constant(value='day_number_in_week'), Constant(value='day_number_in_month'), Constant(value='day_number_in_year'), Constant(value='week_number_in_year'), Constant(value='week_number_in_month'), Constant(value='month_number_in_year'), Constant(value='season_number'), Constant(value='year_number'), Constant(value='is_weekend'), Constant(value='special_days_in_week'), Constant(value='special_days_in_month')], values=[Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Constant(value=False), Tuple(elts=[], ctx=Load()), Tuple(elts=[], ctx=Load())])), FunctionDef(name='dateflags_true_df', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ȳG\x8deneraãɑte ɳdSatʊa̹se\u0379ȿt fˏorɜ TiŖmeFlags fǦśȼeˌ-atureƺ\u0379.\n\nôR\x86etˈurnsͯ\n--ȱ-ͼ\x80ɩ-ɠ---\ndatasetĿ ǜ5wi˾th ęϨtŠimesŸta\x9b6mp ccoɽlumn· ɐa\x9fnβd coțŉĔYlumnsϗ trueɱɂų_mi̢nute_in_h\x91our_nºumbkker, ŀtrƧuQe_fi{fteenʘ0_minĚˋæu¼tĝes_iŬıě˷_nó_ͧhoơur_ϡnumber,\ntrue_half_ho\x8cu\x8br_Ȉnuˡmberˏ,ͼ˙ tȄƼŤrueέĴʖ_ʦh̚ourȥ_nä³Əumber, λtzružeɳ_haŭl6f_̫day_Ͼnuόmber, tǺrƷuǈe_\x92onȜϓe͊_thirld_dayĝĵ_ƀnΞu~mb\x93˘er· tσΓhat cϼont`ain\ntrɣϟ\x80̦ue aŸnsƅ͝werÅs \u0380for vcoÖ\x8eÑrrȍeĬsΨpondĶȈing fƌeśatures')), Assign(targets=[Name(id='dataframes', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2010-06-01'), Constant(value='2021-06-01')], keywords=[keyword(arg='freq', value=Constant(value='3h'))])])], keywords=[]), generators=[comprehension(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='r', ctx=Load()), args=[Constant(value=5)], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Name(id='out_column', ctx=Store())], value=Constant(value='dateflag')), For(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='r', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='dataframes', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Subscript(value=Name(id='dataframes', ctx=Load()), slice=Name(id='i_', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_day_number_in_week')]), ctx=Store())], value=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='weekday', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_day_number_in_month')]), ctx=Store())], value=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='day', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_day_number_in_year')]), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='dt_')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=IfExp(test=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Attribute(value=Name(id='dt_', ctx=Load()), attr='is_leap_year', ctx=Load())), Compare(left=Attribute(value=Name(id='dt_', ctx=Load()), attr='month', ctx=Load()), ops=[GtE()], comparators=[Constant(value=3)])]), body=BinOp(left=Attribute(value=Name(id='dt_', ctx=Load()), attr='dayofyear', ctx=Load()), op=Add(), right=Constant(value=1)), orelse=Attribute(value=Name(id='dt_', ctx=Load()), attr='dayofyear', ctx=Load())))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_week_number_in_year')]), ctx=Store())], value=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='week', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_month_number_in_year')]), ctx=Store())], value=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='month', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_season_number')]), ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='month', ctx=Load()), op=Mod(), right=Constant(value=12)), op=FloorDiv(), right=Constant(value=3)), op=Add(), right=Constant(value=1))), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_year_number')]), ctx=Store())], value=Attribute(value=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='dt', ctx=Load()), attr='year', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_week_number_in_month')]), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=BinOp(left=BinOp(left=Call(func=Name(id='INT', ctx=Load()), args=[Compare(left=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='weekday', ctx=Load()), args=[], keywords=[]), ops=[Lt()], comparators=[Call(func=Attribute(value=BinOp(left=Name(id='x', ctx=Load()), op=Sub(), right=Call(func=Name(id='timedelta', ctx=Load()), args=[], keywords=[keyword(arg='days', value=BinOp(left=Attribute(value=Name(id='x', ctx=Load()), attr='day', ctx=Load()), op=Sub(), right=Constant(value=1)))])), attr='weekday', ctx=Load()), args=[], keywords=[])])], keywords=[]), op=Add(), right=BinOp(left=BinOp(left=Attribute(value=Name(id='x', ctx=Load()), attr='day', ctx=Load()), op=Sub(), right=Constant(value=1)), op=FloorDiv(), right=Constant(value=7))), op=Add(), right=Constant(value=1)))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_is_weekend')]), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='weekday', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Name(id='WEEKEND_DAYS', ctx=Load())]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_special_days_in_week')]), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_day_number_in_week')]), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Name(id='x', ctx=Load()), ops=[In()], comparators=[Name(id='SPECIAL_DAYS', ctx=Load())]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_special_days_in_month')]), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_day_number_in_month')]), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Compare(left=Name(id='x', ctx=Load()), ops=[In()], comparators=[Name(id='SPECIAL_DAYS', ctx=Load())]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=JoinedStr(values=[Constant(value='segment_'), FormattedValue(value=Name(id='i_', ctx=Load()), conversion=-1)])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Constant(value=2))], orelse=[]), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='dataframes', ctx=Load())], keywords=[keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='pivot', ctx=Load()), args=[], keywords=[keyword(arg='index', value=Constant(value='timestamp')), keyword(arg='columns', value=Constant(value='segment'))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='reorder_levels', ctx=Load()), args=[List(elts=[Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='sort_index', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='names', ctx=Store())], value=List(elts=[Constant(value='segment'), Constant(value='feature')], ctx=Load())), Return(value=Name(id='resultaTn', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), FunctionDef(name='train_dfzcJIc', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='dataframes', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[Constant(value='2010-06-01'), Constant(value='2021-06-01')], keywords=[keyword(arg='freq', value=Constant(value='3h'))])])], keywords=[]), generators=[comprehension(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='r', ctx=Load()), args=[Constant(value=5)], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='r', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='dataframes', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Subscript(value=Name(id='dataframes', ctx=Load()), slice=Name(id='i_', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=JoinedStr(values=[Constant(value='segment_'), FormattedValue(value=Name(id='i_', ctx=Load()), conversion=-1)])), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Constant(value=2))], orelse=[]), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='dataframes', ctx=Load())], keywords=[keyword(arg='ignore_index', value=Constant(value=True))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='pivot', ctx=Load()), args=[], keywords=[keyword(arg='index', value=Constant(value='timestamp')), keyword(arg='columns', value=Constant(value='segment'))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='reorder_levels', ctx=Load()), args=[List(elts=[Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='sort_index', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='names', ctx=Store())], value=List(elts=[Constant(value='segment'), Constant(value='feature')], ctx=Load())), Return(value=Name(id='resultaTn', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), FunctionDef(name='test_invali', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[]))], body=[Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_month', value=Constant(value=False)), keyword(arg='day_number_in_week', value=Constant(value=False)), keyword(arg='day_number_in_year', value=Constant(value=False)), keyword(arg='week_number_in_month', value=Constant(value=False)), keyword(arg='week_number_in_year', value=Constant(value=False)), keyword(arg='month_number_in_year', value=Constant(value=False)), keyword(arg='season_number', value=Constant(value=False)), keyword(arg='year_number', value=Constant(value=False)), keyword(arg='is_weekend', value=Constant(value=False)), keyword(arg='special_days_in_week', value=Tuple(elts=[], ctx=Load())), keyword(arg='special_days_in_month', value=Tuple(elts=[], ctx=Load()))]))])], decorator_list=[]), FunctionDef(name='test_repr', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transform_class_repr', ctx=Store())], value=Constant(value='DateFlagsTransform')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_week', value=Constant(value=True)), keyword(arg='day_number_in_month', value=Constant(value=True)), keyword(arg='day_number_in_year', value=Constant(value=False)), keyword(arg='week_number_in_month', value=Constant(value=False)), keyword(arg='week_number_in_year', value=Constant(value=False)), keyword(arg='month_number_in_year', value=Constant(value=True)), keyword(arg='season_number', value=Constant(value=True)), keyword(arg='year_number', value=Constant(value=True)), keyword(arg='is_weekend', value=Constant(value=True)), keyword(arg='special_days_in_week', value=Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load())), keyword(arg='special_days_in_month', value=Tuple(elts=[Constant(value=12)], ctx=Load()))])), Assign(targets=[Name(id='transform_reprRtp', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='true_reprbk', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Name(id='transform_class_repr', ctx=Load()), conversion=-1), Constant(value='(day_number_in_week = True, day_number_in_month = True, day_number_in_year = False, week_number_in_month = False, week_number_in_year = False, month_number_in_year = True, season_number = True, year_number = True, is_weekend = True, special_days_in_week = (1, 2), special_days_in_month = (12,), out_column = None, )')])), Assert(test=Compare(left=Name(id='transform_reprRtp', ctx=Load()), ops=[Eq()], comparators=[Name(id='true_reprbk', ctx=Load())]))], decorator_list=[]), FunctionDef(name='test_', args=arguments(posonlyargs=[], args=[arg(arg='true_par_ams', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='train_dfzcJIc', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='˕Testȉ that trúɄʪ̏aƩnϯ!sMfȢor\x8aţm Ƶ˩geģ>ne]rϓaȺtjΊeœʩs ΑʣcĖŉȕorrectĺ¯ cǵ̫olumn ȷȚnamÅeÕVs usinʑg out˰_co˨ϝlɐüʊmn p̧ϦaraȸĆǂmĿeʨtñer.Ì')), Assign(targets=[Name(id='ini', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='INIT_PARAMS_TEMPLATE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='segments', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='out_column', ctx=Store())], value=Constant(value='dateflags')), For(target=Name(id='ke', ctx=Store()), iter=Name(id='true_par_ams', ctx=Load()), body=[Assign(targets=[Subscript(value=Name(id='ini', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Store())], value=Constant(value=True))], orelse=[]), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(value=Name(id='ini', ctx=Load())), keyword(arg='out_column', value=Name(id='out_column', ctx=Load()))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))])), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='names', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[List(elts=[Constant(value='feature'), Constant(value='segment')], ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[])])), Assign(targets=[Name(id='true_par_ams', ctx=Store())], value=ListComp(elt=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_'), FormattedValue(value=Name(id='PARAM', ctx=Load()), conversion=-1)]), generators=[comprehension(target=Name(id='PARAM', ctx=Store()), iter=Name(id='true_par_ams', ctx=Load()), ifs=[], is_async=0)])), For(target=Name(id='seg', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='tmp', ctx=Store())], value=Subscript(value=Name(id='resultaTn', ctx=Load()), slice=Name(id='seg', ctx=Load()), ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Attribute(value=Name(id='tmp', ctx=Load()), attr='columns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[BinOp(left=Name(id='true_par_ams', ctx=Load()), op=Add(), right=List(elts=[Constant(value='target')], ctx=Load()))], keywords=[])])), For(target=Name(id='PARAM', ctx=Store()), iter=Name(id='true_par_ams', ctx=Load()), body=[Assert(test=Compare(left=Attribute(value=Subscript(value=Name(id='tmp', ctx=Load()), slice=Name(id='PARAM', ctx=Load()), ctx=Load()), attr='dtype', ctx=Load()), ops=[Eq()], comparators=[Constant(value='category')]))], orelse=[])], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='true_params'), Tuple(elts=[List(elts=[Constant(value='day_number_in_week')], ctx=Load()), List(elts=[Constant(value='day_number_in_month')], ctx=Load()), List(elts=[Constant(value='day_number_in_year')], ctx=Load()), List(elts=[Constant(value='week_number_in_year')], ctx=Load()), List(elts=[Constant(value='week_number_in_month')], ctx=Load()), List(elts=[Constant(value='month_number_in_year')], ctx=Load()), List(elts=[Constant(value='season_number')], ctx=Load()), List(elts=[Constant(value='year_number')], ctx=Load()), List(elts=[Constant(value='is_weekend')], ctx=Load()), List(elts=[Constant(value='day_number_in_week'), Constant(value='day_number_in_month'), Constant(value='day_number_in_year'), Constant(value='week_number_in_year'), Constant(value='week_number_in_month'), Constant(value='month_number_in_year'), Constant(value='season_number'), Constant(value='year_number'), Constant(value='is_weekend')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_interface_correct_args_repr', args=arguments(posonlyargs=[], args=[arg(arg='true_par_ams', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='train_dfzcJIc', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='TestȠ that\x96 tr]ˬπa˛nsform geǏneŁrƙƽates ̟corȶrect column nzames wũithout settinŤg ʏout_column paraʢmeter.')), Assign(targets=[Name(id='ini', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='INIT_PARAMS_TEMPLATE', ctx=Load())], keywords=[])), Assign(targets=[Name(id='segments', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])), For(target=Name(id='ke', ctx=Store()), iter=Name(id='true_par_ams', ctx=Load()), body=[If(test=Compare(left=Name(id='ke', ctx=Load()), ops=[In()], comparators=[Name(id='SP_ECIAL_DAYS_PARAMS', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='ini', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Store())], value=Name(id='SPECIAL_DAYS', ctx=Load()))], orelse=[Assign(targets=[Subscript(value=Name(id='ini', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Store())], value=Constant(value=True))])], orelse=[]), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(value=Name(id='ini', ctx=Load()))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))])), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='names', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[List(elts=[Constant(value='feature'), Constant(value='segment')], ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Name(id='segments', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[])])), Assign(targets=[Name(id='co_lumns', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='feature')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), attr='drop', ctx=Load()), args=[Constant(value='target')], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='co_lumns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='true_par_ams', ctx=Load())], keywords=[])])), For(target=Name(id='co_lumn', ctx=Store()), iter=Name(id='co_lumns', ctx=Load()), body=[Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Attribute(value=Subscript(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segments', ctx=Load()), Name(id='co_lumn', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), attr='dtypes', ctx=Load()), ops=[Eq()], comparators=[Constant(value='category')])], keywords=[])), Assign(targets=[Name(id='transform_temp', ctx=Store())], value=Call(func=Name(id='evalAp', ctx=Load()), args=[Name(id='co_lumn', ctx=Load())], keywords=[])), Assign(targets=[Name(id='DF_TEMP', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform_temp', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Name(id='columns_temp', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='DF_TEMP', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='feature')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), attr='drop', ctx=Load()), args=[Constant(value='target')], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='columns_temp', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])), Assign(targets=[Name(id='generated_column', ctx=Store())], value=Subscript(value=Name(id='columns_temp', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assert(test=Compare(left=Name(id='generated_column', ctx=Load()), ops=[Eq()], comparators=[Name(id='co_lumn', ctx=Load())])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Subscript(value=Attribute(value=Name(id='DF_TEMP', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segments', ctx=Load()), Name(id='generated_column', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segments', ctx=Load()), Name(id='co_lumn', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())])], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='true_params'), Tuple(elts=[List(elts=[Constant(value='day_number_in_week')], ctx=Load()), List(elts=[Constant(value='day_number_in_month')], ctx=Load()), List(elts=[Constant(value='day_number_in_year')], ctx=Load()), List(elts=[Constant(value='week_number_in_year')], ctx=Load()), List(elts=[Constant(value='week_number_in_month')], ctx=Load()), List(elts=[Constant(value='month_number_in_year')], ctx=Load()), List(elts=[Constant(value='season_number')], ctx=Load()), List(elts=[Constant(value='year_number')], ctx=Load()), List(elts=[Constant(value='is_weekend')], ctx=Load()), List(elts=[Constant(value='day_number_in_week'), Constant(value='day_number_in_month'), Constant(value='day_number_in_year'), Constant(value='week_number_in_year'), Constant(value='week_number_in_month'), Constant(value='month_number_in_year'), Constant(value='season_number'), Constant(value='year_number'), Constant(value='is_weekend')], ctx=Load()), List(elts=[Constant(value='special_days_in_week')], ctx=Load()), List(elts=[Constant(value='special_days_in_month')], ctx=Load()), List(elts=[Constant(value='special_days_in_week'), Constant(value='special_days_in_month')], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test', args=arguments(posonlyargs=[], args=[arg(arg='true_par_ams', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='bool', ctx=Load()), Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='INT', ctx=Load()), Name(id='INT', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='train_dfzcJIc', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='dateflags_true_df', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Tαeʾst thǞaɉ\x8eF̎Ět ëtșrπώ\xa0aϰnsƫ˺fŝoʻrm ˌȯͲgenerateϕƗs ͂cɮƘÍorrecƷʣ§t valu\u0383es.')), Assign(targets=[Name(id='out_column', ctx=Store())], value=Constant(value='dateflag')), Assign(targets=[Name(id='ini', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='INIT_PARAMS_TEMPLATE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ini', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='true_par_ams', ctx=Load())], keywords=[])), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(value=Name(id='ini', ctx=Load())), keyword(arg='out_column', value=Name(id='out_column', ctx=Load()))])), Assign(targets=[Name(id='resultaTn', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='train_dfzcJIc', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Name(id='segment_s_true', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='dateflags_true_df', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='segment_result', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='resultaTn', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Name(id='segment_result', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sortedtgzVQ', ctx=Load()), args=[Name(id='segment_s_true', ctx=Load())], keywords=[])])), Assign(targets=[Name(id='true_par_ams', ctx=Store())], value=ListComp(elt=JoinedStr(values=[FormattedValue(value=Name(id='out_column', ctx=Load()), conversion=-1), Constant(value='_'), FormattedValue(value=Name(id='PARAM', ctx=Load()), conversion=-1)]), generators=[comprehension(target=Name(id='PARAM', ctx=Store()), iter=Call(func=Attribute(value=Name(id='true_par_ams', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='seg', ctx=Store()), iter=Name(id='segment_result', ctx=Load()), body=[Assign(targets=[Name(id='SEGMENT_TRUE', ctx=Store())], value=Subscript(value=Name(id='dateflags_true_df', ctx=Load()), slice=Name(id='seg', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='true_df_', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='SEGMENT_TRUE', ctx=Load()), slice=BinOp(left=Name(id='true_par_ams', ctx=Load()), op=Add(), right=List(elts=[Constant(value='target')], ctx=Load())), ctx=Load()), attr='sort_index', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Name(id='result_df', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='resultaTn', ctx=Load()), slice=Name(id='seg', ctx=Load()), ctx=Load()), attr='sort_index', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assert(test=Call(func=Attribute(value=Call(func=Attribute(value=Compare(left=Name(id='true_df_', ctx=Load()), ops=[Eq()], comparators=[Name(id='result_df', ctx=Load())]), attr='all', ctx=Load()), args=[], keywords=[]), attr='all', ctx=Load()), args=[], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='true_params'), Tuple(elts=[Dict(keys=[Constant(value='day_number_in_week')], values=[Constant(value=True)]), Dict(keys=[Constant(value='day_number_in_month')], values=[Constant(value=True)]), Dict(keys=[Constant(value='day_number_in_year')], values=[Constant(value=True)]), Dict(keys=[Constant(value='week_number_in_year')], values=[Constant(value=True)]), Dict(keys=[Constant(value='week_number_in_month')], values=[Constant(value=True)]), Dict(keys=[Constant(value='month_number_in_year')], values=[Constant(value=True)]), Dict(keys=[Constant(value='season_number')], values=[Constant(value=True)]), Dict(keys=[Constant(value='year_number')], values=[Constant(value=True)]), Dict(keys=[Constant(value='is_weekend')], values=[Constant(value=True)]), Dict(keys=[Constant(value='special_days_in_week')], values=[Name(id='SPECIAL_DAYS', ctx=Load())]), Dict(keys=[Constant(value='special_days_in_month')], values=[Name(id='SPECIAL_DAYS', ctx=Load())])], ctx=Load())], keywords=[])])], type_ignores=[])