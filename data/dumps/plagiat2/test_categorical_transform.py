Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), ImportFrom(module='etna.transforms.encoders.categorical', names=[alias(name='OneHotEncoderTransform')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_ar_df')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_const_df')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='FilterFeaturesTransform')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='etna.models', names=[alias(name='LinearPerSegmentModel')], level=0), ImportFrom(module='etna.transforms.encoders.categorical', names=[alias(name='LabelEncoderTransform')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_periodic_df')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='R2')], level=0), FunctionDef(name='get_two_df_with_new_valuesxamO', args=arguments(posonlyargs=[], args=[arg(arg='dtype', annotation=Name(id='s', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='int')]), body=[Assign(targets=[Name(id='dct_', ctx=Store())], value=Dict(keys=[Constant(value='timestamp'), Constant(value='segment'), Constant(value='regressor_0'), Constant(value='target')], values=[BinOp(left=Call(func=Name(id='list_', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2021-01-01')), keyword(arg='end', value=Constant(value='2021-01-03'))])], keywords=[]), op=Mult(), right=Constant(value=2)), BinOp(left=BinOp(left=List(elts=[Constant(value='segment_0')], ctx=Load()), op=Mult(), right=Constant(value=3)), op=Add(), right=BinOp(left=List(elts=[Constant(value='segment_1')], ctx=Load()), op=Mult(), right=Constant(value=3))), List(elts=[Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6)], ctx=Load())])), Assign(targets=[Name(id='df_1', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Name(id='dct_', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_1', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df_1', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), attr='astype', ctx=Load()), args=[Name(id='dtype', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_1', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_1', ctx=Load())], keywords=[])), Assign(targets=[Name(id='DCT_2', ctx=Store())], value=Dict(keys=[Constant(value='timestamp'), Constant(value='segment'), Constant(value='regressor_0'), Constant(value='target')], values=[BinOp(left=Call(func=Name(id='list_', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2021-01-01')), keyword(arg='end', value=Constant(value='2021-01-03'))])], keywords=[]), op=Mult(), right=Constant(value=2)), BinOp(left=BinOp(left=List(elts=[Constant(value='segment_0')], ctx=Load()), op=Mult(), right=Constant(value=3)), op=Add(), right=BinOp(left=List(elts=[Constant(value='segment_1')], ctx=Load()), op=Mult(), right=Constant(value=3))), List(elts=[Constant(value=5), Constant(value=8), Constant(value=9), Constant(value=5), Constant(value=0), Constant(value=0)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=2), Constant(value=3), Constant(value=4), Constant(value=5), Constant(value=6)], ctx=Load())])), Assign(targets=[Name(id='df_2xhqug', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Name(id='DCT_2', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_2xhqug', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df_2xhqug', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), attr='astype', ctx=Load()), args=[Name(id='dtype', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_2xhqug', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_2xhqug', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='df_1', ctx=Load()), Name(id='df_2xhqug', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='two_df_with_new_valuespVA', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    Ϗ ʂ        ')), Return(value=Call(func=Name(id='get_two_df_with_new_valuesxamO', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='test__label_encoder_simple', args=arguments(posonlyargs=[], args=[arg(arg='dtype')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test ƾʑthatɍ̻Ǚ̹ͼɏ Ǧ!ȈĪL\x9cͦɳaņbeȅéıl˝EncoderāΗɠTraǃnsfƬōMorm Ή\x90worϨŢks c̄oƴrärɰ\xa0ƺecȲĄϪ9˷t ŝǆϲφiñ̗nĀΖ aȭ simʟp͂lȈe|ă ʁca϶ses.ɌȢ͆%')), Assign(targets=[Tuple(elts=[Name(id='df', ctx=Store()), Name(id='answers', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_df_for_label_encoding', ctx=Load()), args=[], keywords=[keyword(arg='dtype', value=Name(id='dtype', ctx=Load()))])), For(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='ran', ctx=Load()), args=[Constant(value=3)], keywords=[]), body=[Assign(targets=[Name(id='le', ctx=Store())], value=Call(func=Name(id='LabelEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=JoinedStr(values=[Constant(value='regressor_'), FormattedValue(value=Name(id='i_', ctx=Load()), conversion=-1)])), keyword(arg='out_column', value=Constant(value='test'))])), Expr(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cols', ctx=Store())], value=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load())), Assert(test=Call(func=Attribute(value=Subscript(value=Subscript(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), slice=Name(id='cols', ctx=Load()), ctx=Load()), attr='equals', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='answers', ctx=Load()), slice=Name(id='i_', ctx=Load()), ctx=Load()), slice=Name(id='cols', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='dtype'), List(elts=[Constant(value='float'), Constant(value='int'), Constant(value='str'), Constant(value='category')], ctx=Load())], keywords=[])]), FunctionDef(name='test_new_value_label_encoder', args=arguments(posonlyargs=[], args=[arg(arg='dtype'), arg(arg='strategy'), arg(arg='expecte')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ΐʕTyesúČt°ǥ LωÂabΎ1ǮelEΙTfncodeårĔ̫ÌTrϰĠa¨nƑsfoΧ9ţrm cĻϛorr˳eʿcƒtŽ ιŽˁwoOώrks wΉiˋǦt̬h `ʅuțϺϲnkɚnoɉw`ͩnɌǻ¬ ʅvalu¾es.')), Assign(targets=[Tuple(elts=[Name(id='df1', ctx=Store()), Name(id='df2', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_two_df_with_new_valuesxamO', ctx=Load()), args=[], keywords=[keyword(arg='dtype', value=Name(id='dtype', ctx=Load()))])), Assign(targets=[Name(id='s_egments', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='df1', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), attr='tolist', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='le', ctx=Store())], value=Call(func=Name(id='LabelEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='regressor_0')), keyword(arg='strategy', value=Name(id='strategy', ctx=Load())), keyword(arg='out_column', value=Constant(value='encoded_regressor_0'))])), Expr(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df1', ctx=Load())], keywords=[])), Assign(targets=[Name(id='DF2_TRANSFORMED', ctx=Store())], value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df2', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Name(id='s_egments', ctx=Load()), body=[Assign(targets=[Name(id='values', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='DF2_TRANSFORMED', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segment', ctx=Load()), Constant(value='encoded_regressor_0')], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), attr='values', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='values', ctx=Load()), Subscript(value=Name(id='expecte', ctx=Load()), slice=Name(id='segment', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='strategy, expected_values'), List(elts=[Tuple(elts=[Constant(value='new_value'), Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1')], values=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2)], ctx=Load()), List(elts=[Constant(value=0), UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())])], ctx=Load()), Tuple(elts=[Constant(value='none'), Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1')], values=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2)], ctx=Load()), List(elts=[Constant(value=0), Attribute(value=Name(id='np', ctx=Load()), attr='nan', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='nan', ctx=Load())], ctx=Load())])], ctx=Load()), Tuple(elts=[Constant(value='mean'), Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1')], values=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=2)], ctx=Load()), List(elts=[Constant(value=0), BinOp(left=Constant(value=3), op=Div(), right=Constant(value=4)), BinOp(left=Constant(value=3), op=Div(), right=Constant(value=4))], ctx=Load())])], ctx=Load())], ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='dtype'), List(elts=[Constant(value='float'), Constant(value='int'), Constant(value='str'), Constant(value='category')], ctx=Load())], keywords=[])]), FunctionDef(name='get_df_for_label_encoding', args=arguments(posonlyargs=[], args=[arg(arg='dtype', annotation=Name(id='s', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='int')]), body=[Expr(value=Constant(value='  \x81 ȗ    ƺʐ   bϣ        R ɛ')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[Constant(value=10)], keywords=[keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='n_segments', value=Constant(value=1))])), Assign(targets=[Name(id='d', ctx=Store())], value=Dict(keys=[Constant(value='timestamp'), Constant(value='regressor_0'), Constant(value='regressor_1'), Constant(value='regressor_2')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2021-01-01')), keyword(arg='end', value=Constant(value='2021-01-12'))]), List(elts=[Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8)], ctx=Load()), List(elts=[Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Name(id='d', ctx=Load())], keywords=[])), Assign(targets=[Name(id='regressor_cols', ctx=Store())], value=List(elts=[Constant(value='regressor_0'), Constant(value='regressor_1'), Constant(value='regressor_2')], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Name(id='regressor_cols', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Name(id='regressor_cols', ctx=Load()), ctx=Load()), attr='astype', ctx=Load()), args=[Name(id='dtype', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_0')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_to_forecast', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_regressors', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsdataset', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df_to_forecast', ctx=Load())), keyword(arg='freq', value=Constant(value='D')), keyword(arg='df_exog', value=Name(id='df_regressors', ctx=Load()))])), Assign(targets=[Name(id='ANSWER_ON_REGRESSOR_0', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='float', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=8)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Name(id='answer_on_regressor_1', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='regressor_1'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='float', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=9)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Name(id='answer_on_regressor_2a', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='regressor_2'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='float', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Return(value=Tuple(elts=[Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), Tuple(elts=[Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), Name(id='answer_on_regressor_1', ctx=Load()), Name(id='answer_on_regressor_2a', ctx=Load())], ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='df_for_ohe_encoding', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Name(id='get_df_for_ohe_encodingc', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='df_for_namingCJh', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[Constant(value=10)], keywords=[keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='n_segments', value=Constant(value=1))])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Name(id='generate_periodic_df', ctx=Load()), args=[Constant(value=12)], keywords=[keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='scale', value=Constant(value=10)), keyword(arg='period', value=Constant(value=2)), keyword(arg='n_segments', value=Constant(value=2))])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='df_regressors', ctx=Load()), attr='pivot', ctx=Load()), args=[], keywords=[keyword(arg='index', value=Constant(value='timestamp')), keyword(arg='columns', value=Constant(value='segment'))]), attr='reset_index', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='df_regressors', ctx=Load()), attr='columns', ctx=Store())], value=BinOp(left=List(elts=[Constant(value='timestamp')], ctx=Load()), op=Add(), right=List(elts=[Constant(value='regressor_1'), Constant(value='2')], ctx=Load()))), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_0')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_to_forecast', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_regressors', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsdataset', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df_to_forecast', ctx=Load())), keyword(arg='freq', value=Constant(value='D')), keyword(arg='df_exog', value=Name(id='df_regressors', ctx=Load()))])), Return(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='df_for_label_encoding', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   Ʊ   !  ȫ  \x90 ¬\u0383 ʐ ȺΌ   ľÖʦķɳ   ɚ')), Return(value=Call(func=Name(id='get_df_for_label_encoding', ctx=Load()), args=[], keywords=[]))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='test_ohe_encoder_simple', args=arguments(posonlyargs=[], args=[arg(arg='dtype')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='4Test that OneHotEncHɱoderTransform wϨorks ˉcorrect inȒ]ɟï aƱ ΗsimpĈle casne.')), Assign(targets=[Tuple(elts=[Name(id='df', ctx=Store()), Name(id='answers', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_df_for_ohe_encodingc', ctx=Load()), args=[Name(id='dtype', ctx=Load())], keywords=[])), For(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='ran', ctx=Load()), args=[Constant(value=3)], keywords=[]), body=[Assign(targets=[Name(id='ohegMH', ctx=Store())], value=Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=JoinedStr(values=[Constant(value='regressor_'), FormattedValue(value=Name(id='i_', ctx=Load()), conversion=-1)])), keyword(arg='out_column', value=Constant(value='test'))])), Expr(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cols', ctx=Store())], value=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load())), Assert(test=Call(func=Attribute(value=Subscript(value=Subscript(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), slice=Name(id='cols', ctx=Load()), ctx=Load()), attr='equals', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='answers', ctx=Load()), slice=Name(id='i_', ctx=Load()), ctx=Load()), slice=Name(id='cols', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='dtype'), List(elts=[Constant(value='float'), Constant(value='int'), Constant(value='str'), Constant(value='category')], ctx=Load())], keywords=[])]), FunctionDef(name='test_value_error_label_encoder', args=arguments(posonlyargs=[], args=[arg(arg='df_for_label_encoding')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='df', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Name(id='df_for_label_encoding', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='ValueError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='The strategy'))]))], body=[Assign(targets=[Name(id='le', ctx=Store())], value=Call(func=Name(id='LabelEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='strategy', value=Constant(value='new_vlue'))])), Expr(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='ts_for_ohe_sanity', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ˝      ϛ Ͷ˳     ¿ Ȏ')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Name(id='generate_const_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Constant(value=100)), keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='scale', value=Constant(value=0)), keyword(arg='n_segments', value=Constant(value=1))])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Name(id='generate_periodic_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Constant(value=120)), keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='scale', value=Constant(value=10)), keyword(arg='period', value=Constant(value=4)), keyword(arg='n_segments', value=Constant(value=1))])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='df_regressors', ctx=Load()), attr='pivot', ctx=Load()), args=[], keywords=[keyword(arg='index', value=Constant(value='timestamp')), keyword(arg='columns', value=Constant(value='segment'))]), attr='reset_index', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='df_regressors', ctx=Load()), attr='columns', ctx=Store())], value=BinOp(left=List(elts=[Constant(value='timestamp')], ctx=Load()), op=Add(), right=ListComp(elt=JoinedStr(values=[Constant(value='regressor_'), FormattedValue(value=Name(id='i_', ctx=Load()), conversion=-1)]), generators=[comprehension(target=Name(id='i_', ctx=Store()), iter=Call(func=Name(id='ran', ctx=Load()), args=[Constant(value=1)], keywords=[]), ifs=[], is_async=0)]))), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_0')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_to_forecast', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_regressors', ctx=Load())], keywords=[])), Assign(targets=[Name(id='rng', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='default_rng', ctx=Load()), args=[Constant(value=12345)], keywords=[])), FunctionDef(name='f_', args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Name(id='x', ctx=Load()), op=Pow(), right=Constant(value=2)), op=Add(), right=Call(func=Attribute(value=Name(id='rng', ctx=Load()), attr='normal', ctx=Load()), args=[Constant(value=0), Constant(value=0.01)], keywords=[])))], decorator_list=[]), Assign(targets=[Subscript(value=Name(id='df_to_forecast', ctx=Load()), slice=Tuple(elts=[Constant(value='segment_0'), Constant(value='target')], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Constant(value='segment_0'), ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), slice=Slice(upper=Constant(value=100)), ctx=Load()), attr='apply', ctx=Load()), args=[Name(id='f_', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df_to_forecast', ctx=Load())), keyword(arg='freq', value=Constant(value='D')), keyword(arg='df_exog', value=Name(id='df_regressors', ctx=Load())), keyword(arg='known_future', value=Constant(value='all'))])), Return(value=Name(id='ts', ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='test_naming_label_encoder_no_out_colu_mn', args=arguments(posonlyargs=[], args=[arg(arg='df_for_namingCJh'), arg(arg='in_col')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="ȳTe\x9fstϰĐ ǝLaĈǗbʏeͨlEʼn\x85codeǖrƽTƬransŐfƯoĀΓ'¤rm Ϲ͟Cg̀iǳve̖sʄ tʒh̄e coǭrrɹ˒Ϭeƽ˟ct coǵlȤŗ̕˺umnφoƾs Åwɂi˰tɳh nɑo϶ out_col/̞ʾumn\x87.")), Assign(targets=[Name(id='df', ctx=Store())], value=Name(id='df_for_namingCJh', ctx=Load())), Assign(targets=[Name(id='le', ctx=Store())], value=Call(func=Name(id='LabelEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Name(id='in_col', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='answer', ctx=Store())], value=Call(func=Name(id='SET', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list_', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Call(func=Name(id='s', ctx=Load()), args=[Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[])], keywords=[])], ctx=Load()))], keywords=[])), Assert(test=Compare(left=Name(id='answer', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='SET', ctx=Load()), args=[Attribute(value=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='le', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load()), attr='values', ctx=Load())], keywords=[])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='in_column'), List(elts=[Constant(value='2'), Constant(value='regressor_1')], ctx=Load())], keywords=[])]), FunctionDef(name='test_naming_ohe_encoder', args=arguments(posonlyargs=[], args=[arg(arg='two_df_with_new_valuespVA')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='df1', ctx=Store()), Name(id='df2', ctx=Store())], ctx=Store())], value=Name(id='two_df_with_new_valuespVA', ctx=Load())), Assign(targets=[Name(id='ohegMH', ctx=Store())], value=Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='regressor_0')), keyword(arg='out_column', value=Constant(value='targets'))])), Expr(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df1', ctx=Load())], keywords=[])), Assign(targets=[Name(id='s_egments', ctx=Store())], value=List(elts=[Constant(value='segment_0'), Constant(value='segment_1')], ctx=Load())), Assign(targets=[Name(id='target', ctx=Store())], value=List(elts=[Constant(value='target'), Constant(value='targets_0'), Constant(value='targets_1'), Constant(value='targets_2'), Constant(value='regressor_0')], ctx=Load())), Assert(test=Compare(left=SetComp(elt=Tuple(elts=[Name(id='i_', ctx=Load()), Name(id='j', ctx=Load())], ctx=Load()), generators=[comprehension(target=Name(id='i_', ctx=Store()), iter=Name(id='s_egments', ctx=Load()), ifs=[], is_async=0), comprehension(target=Name(id='j', ctx=Store()), iter=Name(id='target', ctx=Load()), ifs=[], is_async=0)]), ops=[Eq()], comparators=[Call(func=Name(id='SET', ctx=Load()), args=[Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df2', ctx=Load())], keywords=[]), attr='columns', ctx=Load()), attr='values', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_naming_ohe_encoder_no_out_column', args=arguments(posonlyargs=[], args=[arg(arg='df_for_namingCJh'), arg(arg='in_col')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Name(id='df_for_namingCJh', ctx=Load())), Assign(targets=[Name(id='ohegMH', ctx=Store())], value=Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Name(id='in_col', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='answer', ctx=Store())], value=Call(func=Name(id='SET', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list_', ctx=Load()), args=[Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[BinOp(left=Call(func=Name(id='s', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[])], keywords=[]), op=Add(), right=Constant(value='_0')), BinOp(left=Call(func=Name(id='s', ctx=Load()), args=[Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='__repr__', ctx=Load()), args=[], keywords=[])], keywords=[]), op=Add(), right=Constant(value='_1'))], ctx=Load()))], keywords=[])), Assert(test=Compare(left=Name(id='answer', ctx=Load()), ops=[Eq()], comparators=[Call(func=Name(id='SET', ctx=Load()), args=[Attribute(value=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load()), attr='columns', ctx=Load()), attr='values', ctx=Load())], keywords=[])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='in_column'), List(elts=[Constant(value='2'), Constant(value='regressor_1')], ctx=Load())], keywords=[])]), FunctionDef(name='test_new_v', args=arguments(posonlyargs=[], args=[arg(arg='dtype'), arg(arg='expecte')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test OnİeHotEncoderTransforɼm correct works with unknoɄρwn Ûvalues.')), Assign(targets=[Tuple(elts=[Name(id='df1', ctx=Store()), Name(id='df2', ctx=Store())], ctx=Store())], value=Call(func=Name(id='get_two_df_with_new_valuesxamO', ctx=Load()), args=[], keywords=[keyword(arg='dtype', value=Name(id='dtype', ctx=Load()))])), Assign(targets=[Name(id='s_egments', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='df1', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), attr='tolist', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='out_columns', ctx=Store())], value=List(elts=[Constant(value='targets_0'), Constant(value='targets_1'), Constant(value='targets_2')], ctx=Load())), Assign(targets=[Name(id='ohegMH', ctx=Store())], value=Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='regressor_0')), keyword(arg='out_column', value=Constant(value='targets'))])), Expr(value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='df1', ctx=Load())], keywords=[])), Assign(targets=[Name(id='DF2_TRANSFORMED', ctx=Store())], value=Call(func=Attribute(value=Name(id='ohegMH', ctx=Load()), attr='transform', ctx=Load()), args=[Name(id='df2', ctx=Load())], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Name(id='s_egments', ctx=Load()), body=[Assign(targets=[Name(id='values', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='DF2_TRANSFORMED', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segment', ctx=Load()), Name(id='out_columns', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), attr='values', ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_almost_equal', ctx=Load()), args=[Name(id='values', ctx=Load()), Subscript(value=Name(id='expecte', ctx=Load()), slice=Name(id='segment', ctx=Load()), ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='expected_values'), List(elts=[Dict(keys=[Constant(value='segment_0'), Constant(value='segment_1')], values=[List(elts=[List(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=0), Constant(value=1)], ctx=Load())], ctx=Load()), List(elts=[List(elts=[Constant(value=1), Constant(value=0), Constant(value=0)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())], ctx=Load())])], ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='dtype'), List(elts=[Constant(value='float'), Constant(value='int'), Constant(value='str'), Constant(value='category')], ctx=Load())], keywords=[])]), FunctionDef(name='get_df_for_ohe_encodingc', args=arguments(posonlyargs=[], args=[arg(arg='dtype', annotation=Name(id='s', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='int')]), body=[Expr(value=Constant(value='     ')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[Constant(value=10)], keywords=[keyword(arg='start_time', value=Constant(value='2021-01-01')), keyword(arg='n_segments', value=Constant(value=1))])), Assign(targets=[Name(id='d', ctx=Store())], value=Dict(keys=[Constant(value='timestamp'), Constant(value='regressor_0'), Constant(value='regressor_1'), Constant(value='regressor_2')], values=[Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='date_range', ctx=Load()), args=[], keywords=[keyword(arg='start', value=Constant(value='2021-01-01')), keyword(arg='end', value=Constant(value='2021-01-12'))]), List(elts=[Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8), Constant(value=5), Constant(value=8)], ctx=Load()), List(elts=[Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5), Constant(value=9), Constant(value=5)], ctx=Load()), List(elts=[Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0), Constant(value=0)], ctx=Load())])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Name(id='d', ctx=Load())], keywords=[])), Assign(targets=[Name(id='regressor_cols', ctx=Store())], value=List(elts=[Constant(value='regressor_0'), Constant(value='regressor_1'), Constant(value='regressor_2')], ctx=Load())), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Name(id='regressor_cols', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Name(id='regressor_cols', ctx=Load()), ctx=Load()), attr='astype', ctx=Load()), args=[Name(id='dtype', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_regressors', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Constant(value='segment_0')), Assign(targets=[Name(id='df_to_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_to_forecast', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_regressors', ctx=Load())], keywords=[])), Assign(targets=[Name(id='tsdataset', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df_to_forecast', ctx=Load())), keyword(arg='freq', value=Constant(value='D')), keyword(arg='df_exog', value=Name(id='df_regressors', ctx=Load()))])), Assign(targets=[Name(id='ANSWER_ON_REGRESSOR_0', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=5)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_1'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='regressor_0'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=8)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_0'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_1'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), slice=Constant(value='test_1'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Name(id='answer_on_regressor_1', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='regressor_1'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=5)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_1'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='regressor_1'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=9)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_0'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_1'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_1', ctx=Load()), slice=Constant(value='test_1'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Assign(targets=[Name(id='answer_on_regressor_2a', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='regressor_2'), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='int', ctx=Load()), args=[Compare(left=Call(func=Name(id='int', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test_0'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='answer_on_regressor_2a', ctx=Load()), slice=Constant(value='test_0'), ctx=Load()), attr='astype', ctx=Load()), args=[Constant(value='category')], keywords=[])), Return(value=Tuple(elts=[Attribute(value=Name(id='tsdataset', ctx=Load()), attr='df', ctx=Load()), Tuple(elts=[Name(id='ANSWER_ON_REGRESSOR_0', ctx=Load()), Name(id='answer_on_regressor_1', ctx=Load()), Name(id='answer_on_regressor_2a', ctx=Load())], ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='test_ohe_sanity', args=arguments(posonlyargs=[], args=[arg(arg='ts_for_ohe_sanity')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ͤTestŀ forư̄΄ʾ corϱʞrĚeǱct Ϝ\x9fwγ˰ork inǞ´ɹ ětʷhʧđýͰe νf\u0378Ţϥ͑δǘ¤ủƩϋl5l ɯȃforec̩astŇingɞ ȿ6pȒi~pƕ<eli@̹ne.Σ')), Assign(targets=[Name(id='horizon', ctx=Store())], value=Constant(value=10)), Assign(targets=[Tuple(elts=[Name(id='train', ctx=Store()), Name(id='test_ts', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='ts_for_ohe_sanity', ctx=Load()), attr='train_test_split', ctx=Load()), args=[], keywords=[keyword(arg='test_size', value=Name(id='horizon', ctx=Load()))])), Assign(targets=[Name(id='ohegMH', ctx=Store())], value=Call(func=Name(id='OneHotEncoderTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='regressor_0'))])), Assign(targets=[Name(id='filteJ', ctx=Store())], value=Call(func=Name(id='FilterFeaturesTransform', ctx=Load()), args=[], keywords=[keyword(arg='exclude', value=List(elts=[Constant(value='regressor_0')], ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='train', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='ohegMH', ctx=Load()), Name(id='filteJ', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mod', ctx=Store())], value=Call(func=Name(id='LinearPerSegmentModel', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='mod', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='train', ctx=Load())], keywords=[])), Assign(targets=[Name(id='future_t', ctx=Store())], value=Call(func=Attribute(value=Name(id='train', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='horizon', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast__ts', ctx=Store())], value=Call(func=Attribute(value=Name(id='mod', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='future_t', ctx=Load())], keywords=[])), Assign(targets=[Name(id='r', ctx=Store())], value=Call(func=Name(id='R2', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=BinOp(left=Constant(value=1), op=Sub(), right=Subscript(value=Call(func=Name(id='r', ctx=Load()), args=[Name(id='test_ts', ctx=Load()), Name(id='forecast__ts', ctx=Load())], keywords=[]), slice=Constant(value='segment_0'), ctx=Load())), ops=[Lt()], comparators=[Constant(value=1e-05)]))], decorator_list=[])], type_ignores=[])