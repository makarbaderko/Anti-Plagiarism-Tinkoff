Module(body=[Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='typing')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='math')]), If(test=Attribute(value=Name(id='typing', ctx=Load()), attr='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0)], orelse=[]), FunctionDef(name='get_anomalies_', args=arguments(posonlyargs=[], args=[arg(arg='ts', annotation=Constant(value='TSDataset')), arg(arg='in_column', annotation=Name(id='st', ctx=Load())), arg(arg='window_size', annotation=Name(id='i', ctx=Load())), arg(arg='alpha', annotation=Name(id='_float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='target'), Constant(value=10), Constant(value=3)]), body=[Assign(targets=[Name(id='outliers_per_segment', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='segments', ctx=Store())], value=Attribute(value=Name(id='ts', ctx=Load()), attr='segments', ctx=Load())), For(target=Name(id='se', ctx=Store()), iter=Name(id='segments', ctx=Load()), body=[Assign(targets=[Name(id='anomalies', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='segment_df', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='ts', ctx=Load()), attr='df', ctx=Load()), slice=Name(id='se', ctx=Load()), ctx=Load()), attr='reset_index', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='values', ctx=Store())], value=Attribute(value=Subscript(value=Name(id='segment_df', ctx=Load()), slice=Name(id='in_column', ctx=Load()), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Name(id='timestamp', ctx=Store())], value=Attribute(value=Subscript(value=Name(id='segment_df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Name(id='n_ite', ctx=Store())], value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='ceil', ctx=Load()), args=[BinOp(left=Call(func=Name(id='l_en', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[]), op=Div(), right=Name(id='window_size', ctx=Load()))], keywords=[])), For(target=Name(id='it', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='n_ite', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='left_border', ctx=Store())], value=BinOp(left=Name(id='it', ctx=Load()), op=Mult(), right=Name(id='window_size', ctx=Load()))), Assign(targets=[Name(id='right_borde', ctx=Store())], value=Call(func=Name(id='m_in', ctx=Load()), args=[BinOp(left=Name(id='left_border', ctx=Load()), op=Add(), right=Name(id='window_size', ctx=Load())), Call(func=Name(id='l_en', ctx=Load()), args=[Name(id='values', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='medz', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='median', ctx=Load()), args=[Subscript(value=Name(id='values', ctx=Load()), slice=Slice(lower=Name(id='left_border', ctx=Load()), upper=Name(id='right_borde', ctx=Load())), ctx=Load())], keywords=[])), Assign(targets=[Name(id='stdWIVS', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='std', ctx=Load()), args=[Subscript(value=Name(id='values', ctx=Load()), slice=Slice(lower=Name(id='left_border', ctx=Load()), upper=Name(id='right_borde', ctx=Load())), ctx=Load())], keywords=[])), Assign(targets=[Name(id='diff', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='abs', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='values', ctx=Load()), slice=Slice(lower=Name(id='left_border', ctx=Load()), upper=Name(id='right_borde', ctx=Load())), ctx=Load()), op=Sub(), right=Name(id='medz', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='anomalies', ctx=Load()), attr='extend', ctx=Load()), args=[BinOp(left=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=Name(id='diff', ctx=Load()), ops=[Gt()], comparators=[BinOp(left=Name(id='stdWIVS', ctx=Load()), op=Mult(), right=Name(id='alpha', ctx=Load()))])], keywords=[]), slice=Constant(value=0), ctx=Load()), op=Add(), right=Name(id='left_border', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='outliers_per_segment', ctx=Load()), slice=Name(id='se', ctx=Load()), ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='timestamp', ctx=Load()), slice=Name(id='it', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='it', ctx=Store()), iter=Name(id='anomalies', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Return(value=Name(id='outliers_per_segment', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='st', ctx=Load()), Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='List', ctx=Load()), slice=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], type_ignores=[])