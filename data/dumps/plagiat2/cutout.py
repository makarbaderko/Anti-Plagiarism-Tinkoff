Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='PIL', names=[alias(name='Image')], level=0), ClassDef(name='Cutout', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='ɸRan˫dƕ¬omǸly masƹkț oM\x9cut one ƹor ΖʳmoreĲȀȚ pa:tchʜes fromť an i˾mage.\n \n  \nǧArgs:\nˠƩή \x9f  ̇ ċnÈ_holes (int):ő Nɢ\x87umber of p\x85a˫tcŉΥřhƸeǲs t̀o ʸȭ˹˷ϰRÒcuʖt Ŗout of ˛ǆea͙chɭ eimagǞe.o\n  size (iṅİt)\x92:͡ The leľɭngth Úϯ(igĹιnțǂŇ pixeϙls) o\x8ffʜ each ϶sqǩuare pǿatch.\n   \n   Ʀ probß+Ǎab̕il\x93ity (úfloat):\x95 Proba̝\x9fbiliκty to˫ Ǣa\x8bpply CutͭOut.')), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='img')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ŬArgŇs:\n ˋƓ̟   imgͻ͇ :Ɍˎ PILiƏ i˳ma˖̘ge +μʽofˇ ǎsɛi˘͘ze (C, ϞHȂʤϠ,̶ WÏ).Ś\n   \n \nRȩeƕ͕υ\u0383ƒ˃tĉŖ Ȑɀ̮ur͍Ǽn͉ͪʏs:\n  āPILƖ ϙiɏmaȅge̎: I˗maįge wi˭tȈνh˭ ƭnȥ͙_Ahoǘ\x92lǜesĪWŅ ųoΔΕ¨ºf dicmΖ«ʨƄensi\x9bonį ʛlÉφŎǝC͏\x8eeIngth ŗʿ̅źxȡ Ċle²nλg͍Xɼth+ Ǿx̆cuǩtƪ Ƙou3t ξofĘ\\̋̚5â iɄtɧΜ.ˑŪ')), If(test=Compare(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[List(elts=[Constant(value=1)], ctx=Load())], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='p', ctx=Load())]), body=[Return(value=Name(id='img', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='img', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='img', ctx=Load())], keywords=[])), Assign(targets=[Name(id='hPl', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='img', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='w', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='img', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load())), Assign(targets=[Name(id='ma', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Tuple(elts=[Name(id='hPl', ctx=Load()), Name(id='w', ctx=Load())], ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[])), For(target=Name(id='njmLKy', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='n_holes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='y', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Name(id='hPl', ctx=Load())], keywords=[])), Assign(targets=[Name(id='x', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Name(id='y1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='y', ctx=Load()), op=Sub(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='hPl', ctx=Load())], keywords=[])), Assign(targets=[Name(id='y2', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='hPl', ctx=Load())], keywords=[])), Assign(targets=[Name(id='x1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='x', ctx=Load()), op=Sub(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Name(id='X2', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='ma', ctx=Load()), slice=Tuple(elts=[Slice(lower=Name(id='y1', ctx=Load()), upper=Name(id='y2', ctx=Load())), Slice(lower=Name(id='x1', ctx=Load()), upper=Name(id='X2', ctx=Load()))], ctx=Load()), ctx=Store())], value=Constant(value=0.0))], orelse=[]), Assign(targets=[Name(id='ma', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='repeat', ctx=Load()), args=[Subscript(value=Name(id='ma', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(), Attribute(value=Name(id='np', ctx=Load()), attr='newaxis', ctx=Load())], ctx=Load()), ctx=Load()), Constant(value=3)], keywords=[keyword(arg='axis', value=Constant(value=2))])), Assign(targets=[Name(id='img', ctx=Store())], value=BinOp(left=Name(id='img', ctx=Load()), op=Mult(), right=Name(id='ma', ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='Image', ctx=Load()), attr='fromarray', ctx=Load()), args=[Call(func=Attribute(value=Name(id='img', ctx=Load()), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='n_holes'), arg(arg='s_ize'), arg(arg='pro')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     Îʼ      ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='n_holes', ctx=Store())], value=Name(id='n_holes', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Store())], value=Name(id='s_ize', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='p', ctx=Store())], value=Name(id='pro', ctx=Load()))], decorator_list=[])], decorator_list=[])], type_ignores=[])