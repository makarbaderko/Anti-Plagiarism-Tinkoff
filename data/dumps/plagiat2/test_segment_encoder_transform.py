Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), ImportFrom(module='etna.transforms', names=[alias(name='SegmentEncoderTransform')], level=0), FunctionDef(name='test_segment_encoder_transform', args=arguments(posonlyargs=[], args=[arg(arg='dummy_df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ÉŽ ')), Assign(targets=[Name(id='transform', ctx=Store())], value=Call(func=Name(id='SegmentEncoderTransform', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='transformed_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='dummy_df', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Subscript(value=Attribute(value=Name(id='transformed_df', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value='segment_code')], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), attr='columns', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)]), msg=Constant(value='Number of columns not the same as segments')), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='dummy_df', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='transformed_df', ctx=Load())], keywords=[])]), msg=Constant(value='Row missing')), Assign(targets=[Name(id='codes', ctx=Store())], value=Call(func=Name(id='SET', ctx=Load()), args=[], keywords=[])), For(target=Name(id='segment', ctx=Store()), iter=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='dummy_df', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='segment')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='COLUMN', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='transformed_df', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Slice(), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Name(id='segment', ctx=Load()), Constant(value='segment_code')], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), Assert(test=Compare(left=Attribute(value=Name(id='COLUMN', ctx=Load()), attr='dtype', ctx=Load()), ops=[Eq()], comparators=[Constant(value='category')]), msg=Constant(value='Column type is not category')), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Name(id='COLUMN', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Attribute(value=Name(id='COLUMN', ctx=Load()), attr='iloc', ctx=Load()), slice=Constant(value=0), ctx=Load())])], keywords=[]), msg=Constant(value='Values are not the same for the whole column')), Expr(value=Call(func=Attribute(value=Name(id='codes', ctx=Load()), attr='add', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='COLUMN', ctx=Load()), attr='iloc', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[]), Assert(test=Compare(left=Name(id='codes', ctx=Load()), ops=[Eq()], comparators=[Set(elts=[Constant(value=0), Constant(value=1)])]), msg=Constant(value='Codes are not 0 and 1'))], decorator_list=[])], type_ignores=[])