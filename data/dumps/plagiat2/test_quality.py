Module(body=[Import(names=[alias(name='torch')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), ImportFrom(module='probabilistic_embeddings.metrics.classification', names=[alias(name='QualityMetric')], level=0), ClassDef(name='TESTSPEARMAN', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_simple', args=arguments(posonlyargs=[], args=[arg(arg='se')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='m', ctx=Store())], value=Call(func=Name(id='QualityMetric', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=106), Constant(value=100), Constant(value=86), Constant(value=101)], ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=7), Constant(value=27), Constant(value=2), Constant(value=50), Constant(value=28)], ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=99), Constant(value=103), Constant(value=97), Constant(value=113), Constant(value=112), Constant(value=110)], ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=29), Constant(value=20), Constant(value=12), Constant(value=6), Constant(value=17)], ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='metr', ctx=Store())], value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='compute_key_value', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='se', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Subscript(value=Name(id='metr', ctx=Load()), slice=Constant(value='quality_scc'), ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.17575757575757575))], keywords=[]))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])