Module(body=[Import(names=[alias(name='typing')]), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='numba')]), ImportFrom(module='typing', names=[alias(name='List')], level=0), Import(names=[alias(name='pandas', asname='pd')]), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0)], orelse=[]), FunctionDef(name='optimal_sse', args=arguments(posonlyargs=[], args=[arg(arg='left', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='right_', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='P', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='pp', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Coɺunȉt ̢t͕he a˽pţproSximatİi˰on error byĞ 1˨ ƖbiΙn frɘom Ol\x94eft ΰto rigÀht elemΥents.\nɄ\n̺ʨParaʇmetφers\n--˅-----\u0381-ρ@--\nleft:\nſ ʻφɄ   left bo§rdǮ̡erĲ\nrigʻht:\n    rigˢĲht boêrdeˮΫr\np:\n    arrayƆ ofǘ sɓÚums of elementŸs, ``p[i]`` - sum from firstŞ to i elements\nppÒ:\n    array of sums oʔf sqĻ͑uares ̰of elements, ``pp[i̶]Ǩ`` ˠͮĵ-˧ Űsum of sıqΤuares ȼfrom fϜirst to i elemeãntksʪz\n\nReturns\n----ƢƩ-Ϩ>--\nresult:ɇ float\n ʸşɹ  : ap͜@proκximation error')), If(test=Compare(left=Name(id='left', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='avg', ctx=Store())], value=Subscript(value=Name(id='P', ctx=Load()), slice=Name(id='right_', ctx=Load()), ctx=Load())), Return(value=BinOp(left=Subscript(value=Name(id='pp', ctx=Load()), slice=Name(id='right_', ctx=Load()), ctx=Load()), op=Sub(), right=BinOp(left=BinOp(left=Name(id='avg', ctx=Load()), op=Pow(), right=Constant(value=2)), op=Div(), right=BinOp(left=BinOp(left=Name(id='right_', ctx=Load()), op=Sub(), right=Name(id='left', ctx=Load())), op=Add(), right=Constant(value=1)))))], orelse=[]), Assign(targets=[Name(id='avg', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='P', ctx=Load()), slice=Name(id='right_', ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='P', ctx=Load()), slice=BinOp(left=Name(id='left', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))), Return(value=BinOp(left=BinOp(left=Subscript(value=Name(id='pp', ctx=Load()), slice=Name(id='right_', ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='pp', ctx=Load()), slice=BinOp(left=Name(id='left', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())), op=Sub(), right=BinOp(left=BinOp(left=Name(id='avg', ctx=Load()), op=Pow(), right=Constant(value=2)), op=Div(), right=BinOp(left=BinOp(left=Name(id='right_', ctx=Load()), op=Sub(), right=Name(id='left', ctx=Load())), op=Add(), right=Constant(value=1)))))], decorator_list=[Call(func=Attribute(value=Name(id='numba', ctx=Load()), attr='jit', ctx=Load()), args=[], keywords=[keyword(arg='nopython', value=Constant(value=True))])], returns=Name(id='float', ctx=Load())), FunctionDef(name='adjus', args=arguments(posonlyargs=[], args=[arg(arg='i', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='k', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='ss_e', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='sse_one_bin', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='CoϢunʇt sɴsjʑȯe_onue_biϒ¿ňƩon[iƴϰ][ϛk]ɀ usiˠ˩ng biǙnary seaŌr\x96ñch.\n\nPa͒ŶraĒmeteǛr»\x8bs\n----Ȧ-ƛ--ęǘ---\ni:\n  Ź  Ʈleftƍϊ bʆ\x83orŖde̝r΅ of seǃries\nk:\n    number ̗ňoɌf binƊs\nsseŽ:\n    arʨrƾϷay Ǫ¾of ƱapproίxiÍmhaUtiΈon error8s\nsse_oDͷbneƾ_çbin\x8cȋϷμ˥:\n    ϳΣa̜rr͢\u038bay of ĳaƠppΊrÀox̷̺iΙˍ̽mņÑation ¹eϙ-ěQ¾rroΣrȱs wi˾ʽĢth ̌oneϤ biȿn\nɒ\n«Retšurμne>s˃\n------¤-\nr\x8fȴɌesΠulƈΡt: fÅloɀϢŉϣat\nʉ    ĳ\x87cȷalÙΏculaƋteʯĮd nʃŊssĭe_̆one_ɲbΉi\u0379őϕn[͗i]ɵ[kƹǖ]')), Assign(targets=[Name(id='now_evaluated', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='k', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='first_evaluatedKpXx', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='k', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='idx_prev', ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load())), Assign(targets=[Name(id='IDX_NOW', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='left', ctx=Store())], value=Constant(value=0)), While(test=Compare(left=Name(id='IDX_NOW', ctx=Load()), ops=[NotEq()], comparators=[Name(id='idx_prev', ctx=Load())]), body=[Assign(targets=[Name(id='right_', ctx=Store())], value=Name(id='i', ctx=Load())), Assign(targets=[Name(id='idx_prev', ctx=Store())], value=Name(id='IDX_NOW', ctx=Load())), While(test=Compare(left=BinOp(left=Name(id='right_', ctx=Load()), op=Sub(), right=Name(id='left', ctx=Load())), ops=[Gt()], comparators=[Constant(value=1)]), body=[If(test=Compare(left=Subscript(value=Subscript(value=Name(id='sse_one_bin', ctx=Load()), slice=BinOp(left=BinOp(left=Name(id='left', ctx=Load()), op=Add(), right=Name(id='right_', ctx=Load())), op=FloorDiv(), right=Constant(value=2)), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), ops=[Gt()], comparators=[Name(id='now_evaluated', ctx=Load())]), body=[Assign(targets=[Name(id='left', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='left', ctx=Load()), op=Add(), right=Name(id='right_', ctx=Load())), op=FloorDiv(), right=Constant(value=2)))], orelse=[Assign(targets=[Name(id='right_', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='left', ctx=Load()), op=Add(), right=Name(id='right_', ctx=Load())), op=FloorDiv(), right=Constant(value=2)))])], orelse=[]), Assign(targets=[Name(id='IDX_NOW', ctx=Store())], value=Name(id='left', ctx=Load())), Assign(targets=[Name(id='now_evaluated', ctx=Store())], value=BinOp(left=Name(id='first_evaluatedKpXx', ctx=Load()), op=Sub(), right=Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=Name(id='IDX_NOW', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='k', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())))], orelse=[]), Assign(targets=[Name(id='n', ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load())), For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='IDX_NOW', ctx=Load()), Name(id='i', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='now', ctx=Store())], value=BinOp(left=Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=Name(id='j', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='k', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), op=Add(), right=Subscript(value=Subscript(value=Name(id='sse_one_bin', ctx=Load()), slice=BinOp(left=Name(id='j', ctx=Load()), op=Add(), right=Constant(value=1)), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))), Assign(targets=[Name(id='n', ctx=Store())], value=Call(func=Name(id='mineRO', ctx=Load()), args=[Name(id='n', ctx=Load()), Name(id='now', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='n', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='numba', ctx=Load()), attr='jit', ctx=Load()), args=[], keywords=[keyword(arg='nopython', value=Constant(value=True))])], returns=Name(id='float', ctx=Load())), FunctionDef(name='v_optimal_hist', args=arguments(posonlyargs=[], args=[arg(arg='series', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='BINS_NUMBER', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='P', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='pp', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ss_e', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), Name(id='BINS_NUMBER', ctx=Load())], ctx=Load())], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Call(func=Name(id='optimal_sse', ctx=Load()), args=[Constant(value=0), Name(id='i', ctx=Load()), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='sse_one_bin', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], ctx=Load())], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='i', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='sse_one_bin', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Name(id='j', ctx=Load()), ctx=Store())], value=Call(func=Name(id='optimal_sse', ctx=Load()), args=[Name(id='i', ctx=Load()), Name(id='j', ctx=Load()), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), For(target=Name(id='tmp_bins_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='BINS_NUMBER', ctx=Load())], keywords=[]), body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='tmp_bins_number', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='ss_e', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Name(id='tmp_bins_number', ctx=Load()), ctx=Store())], value=Call(func=Name(id='adjus', ctx=Load()), args=[Name(id='i', ctx=Load()), Name(id='tmp_bins_number', ctx=Load()), Name(id='ss_e', ctx=Load()), Name(id='sse_one_bin', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Name(id='ss_e', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='numba', ctx=Load()), attr='jit', ctx=Load()), args=[], keywords=[keyword(arg='nopython', value=Constant(value=True))])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='compute_f', args=arguments(posonlyargs=[], args=[arg(arg='series', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='k', annotation=Name(id='intawkkb', ctx=Load())), arg(arg='P', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='pp', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='CoƅΉmpuĠĺte\u0378 F.\x9e F[a][ˁŦͩb]δ[ɇÌ/kˉ] -ʠ̈ mini˨mum appro̵ͥxi̱ΎͭĚmʇatˍiȞ˃ƏoΔn \x83ȿʓȡϞΟeŋrror Śon sʝeǋrĈiɿeˈsʗ[aʇ:b+͙ǵĤ1̾] ØwiȺ̒tȟçϰh ɮkʬ outliers.\n\n\u0383˺ϲ`ǕReÃʪfȚeréǤėnce Ʃ<ͽƏht˃eÌtρp͉ʅ:č//ıwdwwʶ.vlɕdʦϟƌb.͂oGưrg̱͑Ãɓ͑/cfo̱nfÕ̶/1À999/P9æ.pόdfP>κʊ`ºǽ_Α.\n\nͫParamϫeteǈÉrs̜Œͦ\ni̇-ʒŐ-ʆ͡--Ģ--\x7fǲ----Ȗƕʷ\nseŬ`riǚes:\n ɵ ǹ  ˾azrraǅȸʘy to͋ count ĮF\nĕŷk:ġ\n  Τ͓ ɉ˸Ͼ nuɿǣmbeƩr̒ ̿of oã͗uďtlieωrs\npǫȃ:\n ʟɯ   arra͙y͂ ofϢ sumʼĦŇƠs ɳą¶oƙfƕ VƖΒelemen~ƮtǱs̑, `ʦ`Ěßp[Ŕp5\\iǟ˟]`` 5- Ͳsum fͣ˸̈roKmȖ˃ Ɩ0PόthˠŎ tǐϲo iʸ elemȘentȠs\nēƍppL:ɨƨ\n} ŒΓ  ű ǢarrɺayĬ Ɇof˞ tȝsum×ȡs of ήsquĩarɣes ʔofù\x94ɫƶ eυleŽʎments,ʰŲ ͙``pp[i]ǀņ`ˑ`ħȯ - ǞÌˮsu̫m of ̀s˽̸qŊĳuaresɒ ̈Άf"rʬϫom 0thτ ͻītoȒ˧϶ ˊđi eʶơl̓em˳enÀt΅sş\nɍɒ\nĹRÇeúɱt̮ͬurns̤\\ȏ\n-Ɠī-Q--Δ---\nøresGultȞ:jŞ np.ndϜaǄrray\nv ɃȱǙ]x ƑȰ σʎ aĘrϸ.raηy Ƅ+F§,\x8f outȀliers_indices')), Assign(targets=[Name(id='f', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load())], keywords=[])), AnnAssign(target=Name(id='s', ctx=Store()), annotation=Name(id='list', ctx=Load()), value=ListComp(elt=ListComp(elt=ListComp(elt=List(elts=[], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), simple=1), AnnAssign(target=Name(id='s_s', ctx=Store()), annotation=Name(id='list', ctx=Load()), value=ListComp(elt=ListComp(elt=ListComp(elt=List(elts=[], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), simple=1), AnnAssign(target=Name(id='outliers_indices', ctx=Store()), annotation=Name(id='list', ctx=Load()), value=ListComp(elt=ListComp(elt=ListComp(elt=List(elts=[], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), simple=1), For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Call(func=Name(id='optimal_sse', ctx=Load()), args=[Constant(value=0), Name(id='right_border', ctx=Load()), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=List(elts=[Subscript(value=Name(id='P', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load())], ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=List(elts=[Subscript(value=Name(id='pp', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load())], ctx=Load()))], orelse=[]), For(target=Name(id='LEFT_BORDER', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='LEFT_BORDER', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Call(func=Name(id='optimal_sse', ctx=Load()), args=[Name(id='LEFT_BORDER', ctx=Load()), Name(id='right_border', ctx=Load()), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=List(elts=[BinOp(left=Subscript(value=Name(id='P', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='P', ctx=Load()), slice=BinOp(left=Name(id='LEFT_BORDER', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))], ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Store())], value=List(elts=[BinOp(left=Subscript(value=Name(id='pp', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Name(id='pp', ctx=Load()), slice=BinOp(left=Name(id='LEFT_BORDER', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))], ctx=Load()))], orelse=[])], orelse=[]), For(target=Name(id='LEFT_BORDER', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='LEFT_BORDER', ctx=Load()), Call(func=Name(id='mineRO', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), BinOp(left=Name(id='LEFT_BORDER', ctx=Load()), op=Add(), right=Name(id='k', ctx=Load()))], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Name(id='LEFT_BORDER', ctx=Load())), op=Add(), right=Constant(value=1)), ctx=Store())], value=List(elts=[Constant(value=0)], ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Name(id='LEFT_BORDER', ctx=Load())), op=Add(), right=Constant(value=1)), ctx=Store())], value=List(elts=[Constant(value=0)], ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Name(id='LEFT_BORDER', ctx=Load())), op=Add(), right=Constant(value=1)), ctx=Store())], value=List(elts=[Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='LEFT_BORDER', ctx=Load()), BinOp(left=Name(id='right_border', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])], keywords=[])], ctx=Load()))], orelse=[])], orelse=[]), For(target=Name(id='LEFT_BORDER', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='LEFT_BORDER', ctx=Load()), op=Add(), right=Constant(value=1)), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='outlier_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='mineRO', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Name(id='LEFT_BORDER', ctx=Load())), op=Add(), right=Constant(value=1)), BinOp(left=Name(id='k', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='f1', ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='tmp_ss', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='tmp_s', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='f2RzJty', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='n', ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load())), Assign(targets=[Name(id='now_outliers_indices', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='where', ctx=Store())], value=Constant(value=0)), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='tmp_ss', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Name(id='series', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), op=Pow(), right=Constant(value=2)))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tmp_s', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), op=Add(), right=Subscript(value=Name(id='series', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='now_outliers_indices', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='f2RzJty', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='tmp_ss', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), op=Sub(), right=BinOp(left=BinOp(left=Subscript(value=Name(id='tmp_s', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), op=Pow(), right=Constant(value=2)), op=Div(), right=BinOp(left=BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Name(id='LEFT_BORDER', ctx=Load())), op=Add(), right=Constant(value=1)), op=Sub(), right=Name(id='outlier_number', ctx=Load()))))], keywords=[])), If(test=Compare(left=Subscript(value=Name(id='f2RzJty', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Lt()], comparators=[Name(id='n', ctx=Load())]), body=[Assign(targets=[Name(id='n', ctx=Store())], value=Subscript(value=Name(id='f2RzJty', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='where', ctx=Store())], value=Name(id='i', ctx=Load()))], orelse=[])], orelse=[]), If(test=Compare(left=Name(id='f1', ctx=Load()), ops=[Lt()], comparators=[Name(id='n', ctx=Load())]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='f1', ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), If(test=Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load())], keywords=[]), body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='right_border', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[List(elts=[Name(id='right_border', ctx=Load())], ctx=Load())], keywords=[]))])], orelse=[If(test=Compare(left=Name(id='f1', ctx=Load()), ops=[Gt()], comparators=[Name(id='n', ctx=Load())]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='f2RzJty', ctx=Load()), slice=Name(id='where', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='tmp_s', ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='tmp_ss', ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='now_outliers_indices', ctx=Load()))], orelse=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='f1', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='tmp_s', ctx=Load()), attr='extend', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='tmp_ss', ctx=Load()), attr='extend', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='tmp_s', ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='s_s', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Name(id='tmp_ss', ctx=Load())), Assign(targets=[Name(id='tmp', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='right_border', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load())], keywords=[])), If(test=Call(func=Name(id='len', ctx=Load()), args=[Name(id='tmp', ctx=Load())], keywords=[]), body=[For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='tmp', ctx=Load())], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='tmp', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Name(id='right_border', ctx=Load())], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='tmp', ctx=Store())], value=List(elts=[List(elts=[Name(id='right_border', ctx=Load())], ctx=Load())], ctx=Load()))]), Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), attr='extend', ctx=Load()), args=[Name(id='now_outliers_indices', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Name(id='LEFT_BORDER', ctx=Load()), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Name(id='deepcopy', ctx=Load()), args=[Name(id='tmp', ctx=Load())], keywords=[])], keywords=[]))])])], orelse=[])], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='f', ctx=Load()), Name(id='outliers_indices', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='list', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='hist', args=arguments(posonlyargs=[], args=[arg(arg='series', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='BINS_NUMBER', annotation=Name(id='intawkkb', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='approximation_error', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), BinOp(left=Name(id='BINS_NUMBER', ctx=Load()), op=Add(), right=Constant(value=1)), Name(id='BINS_NUMBER', ctx=Load())], ctx=Load())], keywords=[])), AnnAssign(target=Name(id='anomal_ies', ctx=Store()), annotation=Name(id='list', ctx=Load()), value=ListComp(elt=ListComp(elt=ListComp(elt=List(elts=[], ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='BINS_NUMBER', ctx=Load())], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='j', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Name(id='BINS_NUMBER', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]), generators=[comprehension(target=Name(id='s', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), ifs=[], is_async=0)]), simple=1), Assign(targets=[Tuple(elts=[Name(id='P', ctx=Store()), Name(id='pp', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='empty_like', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='empty_like', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Subscript(value=Name(id='P', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Subscript(value=Name(id='series', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Subscript(value=Name(id='pp', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='series', ctx=Load()), slice=Constant(value=0), ctx=Load()), op=Pow(), right=Constant(value=2))), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='P', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='P', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), op=Add(), right=Subscript(value=Name(id='series', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))), Assign(targets=[Subscript(value=Name(id='pp', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='pp', ctx=Load()), slice=BinOp(left=Name(id='i', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), op=Add(), right=BinOp(left=Subscript(value=Name(id='series', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), op=Pow(), right=Constant(value=2))))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='f', ctx=Store()), Name(id='outliers_indices', ctx=Store())], ctx=Store())], value=Call(func=Name(id='compute_f', ctx=Load()), args=[Name(id='series', ctx=Load()), BinOp(left=Name(id='BINS_NUMBER', ctx=Load()), op=Sub(), right=Constant(value=1)), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='approximation_error', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=Constant(value=1)), Constant(value=0)], ctx=Load()), ctx=Store())], value=Call(func=Name(id='v_optimal_hist', ctx=Load()), args=[Name(id='series', ctx=Load()), Name(id='BINS_NUMBER', ctx=Load()), Name(id='P', ctx=Load()), Name(id='pp', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='approximation_error', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1), Slice()], ctx=Load()), ctx=Store())], value=Subscript(value=Name(id='f', ctx=Load()), slice=Constant(value=0), ctx=Load())), For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='outlier_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Name(id='BINS_NUMBER', ctx=Load())], keywords=[]), body=[If(test=Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='anomal_ies', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Constant(value=1), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), For(target=Name(id='right_border', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[])], keywords=[]), body=[For(target=Name(id='tmp_bins_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2), Call(func=Name(id='mineRO', ctx=Load()), args=[BinOp(left=Name(id='BINS_NUMBER', ctx=Load()), op=Add(), right=Constant(value=1)), BinOp(left=Name(id='right_border', ctx=Load()), op=Add(), right=Constant(value=2))], keywords=[])], keywords=[]), body=[For(target=Name(id='outlier_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='mineRO', ctx=Load()), args=[Name(id='BINS_NUMBER', ctx=Load()), BinOp(left=BinOp(left=Name(id='right_border', ctx=Load()), op=Add(), right=Constant(value=2)), op=Sub(), right=Name(id='tmp_bins_number', ctx=Load()))], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='tmp_approximation_error', ctx=Store())], value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=Tuple(elts=[Slice(upper=Name(id='right_border', ctx=Load())), BinOp(left=Name(id='tmp_bins_number', ctx=Load()), op=Sub(), right=Constant(value=1)), Slice(upper=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='tmp_f', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='f', ctx=Load()), slice=Tuple(elts=[Slice(lower=Constant(value=1), upper=BinOp(left=Name(id='right_border', ctx=Load()), op=Add(), right=Constant(value=1))), Name(id='right_border', ctx=Load()), Slice(upper=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load()), slice=Tuple(elts=[Slice(), Slice(step=UnaryOp(op=USub(), operand=Constant(value=1)))], ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Subscript(value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='tmp_bins_number', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), args=[BinOp(left=Name(id='tmp_approximation_error', ctx=Load()), op=Add(), right=Name(id='tmp_f', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='where', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='where', ctx=Load()), args=[Compare(left=BinOp(left=Name(id='tmp_approximation_error', ctx=Load()), op=Add(), right=Name(id='tmp_f', ctx=Load())), ops=[Eq()], comparators=[Subscript(value=Subscript(value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='tmp_bins_number', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load())])], keywords=[])), If(test=Compare(left=Subscript(value=Subscript(value=Name(id='where', ctx=Load()), slice=Constant(value=1), ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[NotEq()], comparators=[Name(id='outlier_number', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='anomal_ies', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='tmp_bins_number', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Subscript(value=Name(id='outliers_indices', ctx=Load()), slice=BinOp(left=Constant(value=1), op=Add(), right=Subscript(value=Subscript(value=Name(id='where', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value=0), ctx=Load())), ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='outlier_number', ctx=Load()), op=Sub(), right=Subscript(value=Subscript(value=Name(id='where', ctx=Load()), slice=Constant(value=1), ctx=Load()), slice=Constant(value=0), ctx=Load())), ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Subscript(value=Subscript(value=Subscript(value=Name(id='anomal_ies', ctx=Load()), slice=Name(id='right_border', ctx=Load()), ctx=Load()), slice=Name(id='tmp_bins_number', ctx=Load()), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), attr='extend', ctx=Load()), args=[Call(func=Name(id='deepcopy', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='anomal_ies', ctx=Load()), slice=Subscript(value=Subscript(value=Name(id='where', ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Load()), slice=BinOp(left=Name(id='tmp_bins_number', ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()), slice=Subscript(value=Subscript(value=Name(id='where', ctx=Load()), slice=Constant(value=1), ctx=Load()), slice=Constant(value=0), ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='count', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='n', ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=Constant(value=0), ctx=Load())), For(target=Name(id='outlier_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), Call(func=Name(id='mineRO', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='approximation_error', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load()), Subscript(value=Attribute(value=Name(id='approximation_error', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=2), ctx=Load())], keywords=[])], keywords=[]), body=[If(test=Compare(left=Subscript(value=Subscript(value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='approximation_error', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Sub(), right=Constant(value=1)), op=Sub(), right=Name(id='outlier_number', ctx=Load())), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()), ops=[LtE()], comparators=[Name(id='n', ctx=Load())]), body=[Assign(targets=[Name(id='count', ctx=Store())], value=Name(id='outlier_number', ctx=Load())), Assign(targets=[Name(id='n', ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='approximation_error', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='approximation_error', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Sub(), right=Constant(value=1)), op=Sub(), right=Name(id='outlier_number', ctx=Load())), ctx=Load()), slice=Name(id='outlier_number', ctx=Load()), ctx=Load()))], orelse=[])], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='anomal_ies', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), slice=BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='approximation_error', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Sub(), right=Constant(value=1)), op=Sub(), right=Name(id='count', ctx=Load())), ctx=Load()), slice=Name(id='count', ctx=Load()), ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='get_anomalies_hist', args=arguments(posonlyargs=[], args=[arg(arg='ts', annotation=Constant(value='TSDataset')), arg(arg='in_column', annotation=Name(id='st', ctx=Load())), arg(arg='BINS_NUMBER', annotation=Name(id='intawkkb', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='target'), Constant(value=10)]), body=[Expr(value=Constant(value='Get point ouňtliŎęrs͏ in timeċ ģseriΝes uwsing hɵistogʣramŢ mode6l.Υ\n\nOutliers areɢ ǿɑall ɩpoints that,ƺƈ whˌ\x95Ǧen removed,ɅΡ |result inü a histŉogram ̐with a lowΦer approximantionʣ ƳerÊrˮo̵r,\neven withϾ the nȢuƝmber of binsƚ ɶleÑsʎs ͩǤMthan the \u0379ǩn˙Ƙ̠ǬumbϺer̠ oʙ϶f outliers.\n\nPŰνaramete͆rs\n------ĭķ--Ǖ--\nƜtŪs:\nʱ  ×  Tǎ\x99SDϏataset with tim˴eserˑieʖs̴τē daϕtaϊµ\ninØȜ_columƧn:\nʴ    naȑÜÁmϿe of the col̤ʟuïmn ʹƵiȠnń whichϠ thƀe aΣnomalyμ isɉ s$earching\nbinsǾ_\x80Ʉånumbΰͧerĸ:\n    number oUf bins\n\nRı̢eturns\n-Ň------\n͘:\n  Ĥɓ  ƪdic̸`tɲΉ Θof˱ oĊIutlierͪs \x80in form̎at {̃segÐment:;Ѐ [ξoutlieŅrsQƟƔ_tŏime̜stampIɞs˴]}')), Assign(targets=[Name(id='outliers_per_segment', ctx=Store())], value=Dict(keys=[], values=[])), Assign(targets=[Name(id='SEGMENTS', ctx=Store())], value=Attribute(value=Name(id='ts', ctx=Load()), attr='segments', ctx=Load())), For(target=Name(id='SEG', ctx=Store()), iter=Name(id='SEGMENTS', ctx=Load()), body=[Assign(targets=[Name(id='segment_df', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='ts', ctx=Load()), attr='df', ctx=Load()), slice=Name(id='SEG', ctx=Load()), ctx=Load()), attr='reset_index', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='values', ctx=Store())], value=Attribute(value=Subscript(value=Name(id='segment_df', ctx=Load()), slice=Name(id='in_column', ctx=Load()), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Name(id='timestamp', ctx=Store())], value=Attribute(value=Subscript(value=Name(id='segment_df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Name(id='anomal_ies', ctx=Store())], value=Call(func=Name(id='hist', ctx=Load()), args=[Name(id='values', ctx=Load()), Name(id='BINS_NUMBER', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='outliers_per_segment', ctx=Load()), slice=Name(id='SEG', ctx=Load()), ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='timestamp', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Name(id='anomal_ies', ctx=Load()), ifs=[], is_async=0)]))], orelse=[]), Return(value=Name(id='outliers_per_segment', ctx=Load()))], decorator_list=[], returns=Subscript(value=Attribute(value=Name(id='typing', ctx=Load()), attr='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='st', ctx=Load()), Subscript(value=Name(id='List', ctx=Load()), slice=Attribute(value=Name(id='pd', ctx=Load()), attr='Timestamp', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()))], type_ignores=[])