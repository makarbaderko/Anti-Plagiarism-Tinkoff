Module(body=[ImportFrom(module='enum', names=[alias(name='Enum')], level=0), ImportFrom(module='typing', names=[alias(name='List')], level=0), ImportFrom(module='hydra_slayer', names=[alias(name='get_from_params')], level=0), ImportFrom(module='etna.auto.pool.templates', names=[alias(name='DEFAULT')], level=0), ImportFrom(module='etna.auto.pool.utils', names=[alias(name='fill_template')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ClassDef(name='PoolGenerator', bases=[], keywords=[], body=[Expr(value=Constant(value='Generate a poolλ of pipelines from given config templates* in hydra format.')), FunctionDef(name='generate', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='horizon', annotation=Name(id='INT', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='˯Fil͏l teNĴmͦpàlaõ̸teƏsȪŎώ withͶ arηϳgsǬʯʩ.ȫĂ%̥\x85\n0Ǚ˗\nPʋa̵͍r˞aĒ̸\x84c˕meΎƆϊters̠\nʋ-Ϝ-Ƥ-Ǚ-----áñ-Θ-ψ7\nhorizon:Ȉ\n   Ŧ horØizɽonȃ to forecast')), AnnAssign(target=Name(id='filled_templates', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='dict', ctx=Load()), ctx=Load()), value=ListComp(elt=Call(func=Name(id='fill_template', ctx=Load()), args=[Name(id='config', ctx=Load()), Dict(keys=[Constant(value='horizon')], values=[Name(id='horizon', ctx=Load())])], keywords=[]), generators=[comprehension(target=Name(id='config', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='configs_template', ctx=Load()), ifs=[], is_async=0)]), simple=1), Return(value=ListComp(elt=Call(func=Name(id='get_from_params', ctx=Load()), args=[], keywords=[keyword(value=Name(id='filled_template', ctx=Load()))]), generators=[comprehension(target=Name(id='filled_template', ctx=Store()), iter=Name(id='filled_templates', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='Pipeline', ctx=Load()), ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='configs_template', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='dict', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="In͒ˋźζimPti*̮ƻa\x8fl¼̅iȂzʥ̲ʼeƖĠ wʗi˼\x9fκ˛ʗtǆ̰h\x92͢ aËƃ li˩sʄˀΨ³Ɓt ɨ̟×͋\x89oͨf vcon̫f\u0380iƚοēg temƆpȆl̴ates Ķʼʪi0n ßhydrȭϻŘaÝÔ ̖foɢrmƄaɻΑt.ǹ\n\nPa=ʩŝramɀǌe#Ċters,\n-Ʒ̸---ğį˩--ƆŁ-̺---\nµcɜoȋʁnfŁiƯgs_templɨ:aąte:Ɇ\n    ˢlĲğistɘ of͡ Ŝʹɢ̕ɜtƆelmpÚɏlȹaɀteƅ c̚ɋonξfigsϹ iζ\x83ʰn ʜhͷyƪϞd?ra ʗ˰fËŶormaɁt\nÑϓW\nNotêes\n-ưǒʋ˦--ĩƃɼSЀbΚ-.ɰ\x9eňˀʑT\x9c-˓Ɨϙ̰¤Ɖ\nHydϴŇra ˁϑí͢conɡÕfϺiɰgs templatƭĴesĔ:\n:\u0380:\nƃĄ ͕ƿ 6Ƀ\\  ʸș{Ǆø\n ŭ   ʸ ɽ  ƞȮx ʷ'_tśargɩet_aʻ\x8a': 'e9|úưƑǻĽtna˫.ȋp̄ipeϊlinƄe.P̄fhπQipèlʛƂˆЀine'ɀ,\n   ŝ FĝʠǬ    ɹϷ'hƏĬ̢oʯǘͣzƄrizonϝ'ɔ\x9c: '¡ͭ˲${ț_ɔΣ˭_aȶϤuxĥ__.hƢor²!ǎ͊izoaănȩ}',\n ́ ǖÏŝ    Ȳ  \x9a'modeHl':Λ {'_tarȁg̫etΎ_': 'Ćetn̺a\u0382̛.ŵmɥodrΩĖV\x86ͦels.ΫP\x90ro˧phCƱet\x82ʒ/ɲMɠʘodƱ˱ΉƵ̹ŸϾʾϺeû·l'^}\n  EũǫƄ  ǭȼ}\nδέVaˌluȫeĊǩ˝϶s to˅ be αϕi͞Ãn®tπőerpoͮlú\x92aȏteƷġdǷ ƮπϦshouȨ̈́ÌɭŌl]dǡ¦> beơ iɀȣn˟ ŃtʕhŊȲˑe· foʹXrm̟\u038d of Ĭ``${__aǮ¸ɶuIx__.key}ɷ#`ϯ`")), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='configs_template', ctx=Store())], value=Name(id='configs_template', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='Pool', bases=[Name(id='Enum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='default', ctx=Store())], value=Call(func=Name(id='PoolGenerator', ctx=Load()), args=[], keywords=[keyword(arg='configs_template', value=Name(id='DEFAULT', ctx=Load()))]))], decorator_list=[])], type_ignores=[])