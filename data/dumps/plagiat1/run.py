Module(body=[Import(names=[alias(name='random')]), Import(names=[alias(name='hydra_slayer')]), ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict')], level=0), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), ImportFrom(module='omegaconf', names=[alias(name='OmegaConf')], level=0), ImportFrom(module='etna.commands', names=[alias(name='*')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset'), alias(name='generate_ar_df')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), Assign(targets=[Name(id='FILE_PATH', ctx=Store())], value=Attribute(value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[]), attr='parent', ctx=Load())), Assign(targets=[Name(id='config_path', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='Path', ctx=Load()), attr='cwd', ctx=Load()), args=[], keywords=[]), op=Div(), right=Constant(value='.hydra')), op=Div(), right=Constant(value='config.yaml'))), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Name(id='OmegaConf', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='config_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='config_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='OmegaConf', ctx=Load()), attr='to_object', ctx=Load()), args=[Call(func=Attribute(value=Name(id='OmegaConf', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='config_path', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='seed', ctx=Load())], keywords=[])), FunctionDef(name='generate_tsdataset', args=arguments(posonlyargs=[], args=[arg(arg='config')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='df_timeseries', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='periods', ctx=Load())), keyword(arg='start_time', value=Constant(value='2021-06-01')), keyword(arg='n_segments', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='n_segments', ctx=Load())), keyword(arg='freq', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='freq', ctx=Load()))])), Assign(targets=[Name(id='df_timeseries', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_timeseries', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_exog', ctx=Store())], value=Constant(value=None)), If(test=Compare(left=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='exog', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='df_exog', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=BinOp(left=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='periods', ctx=Load()), op=Add(), right=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='pipeline', ctx=Load()), attr='horizon', ctx=Load()))), keyword(arg='start_time', value=Constant(value='2021-06-01')), keyword(arg='n_segments', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='n_segments', ctx=Load())), keyword(arg='freq', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='freq', ctx=Load()))])), Assign(targets=[Name(id='df_exog', ctx=Store())], value=Call(func=Attribute(value=Name(id='df_exog', ctx=Load()), attr='rename', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=Dict(keys=[Constant(value='target')], values=[Constant(value='regressor_0')]))])), Assign(targets=[Name(id='n_regressors_to_add', ctx=Store())], value=Call(func=Name(id='maxtyg', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='n_segments', ctx=Load()), op=Mult(), right=Constant(value=0.1))], keywords=[]), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='df_exog', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Tuple(elts=[Name(id='df_exog', ctx=Load()), Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[], keywords=[keyword(arg='data', value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0)], keywords=[keyword(arg='high', value=Constant(value=1000)), keyword(arg='size', value=Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='df_exog', ctx=Load())], keywords=[]), Name(id='n_regressors_to_add', ctx=Load())], ctx=Load()))])), keyword(arg='columns', value=ListComp(elt=JoinedStr(values=[Constant(value='regressor_'), FormattedValue(value=Name(id='i', ctx=Load()), conversion=-1)]), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Name(id='n_regressors_to_add', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]))])], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Name(id='df_exog', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_exog', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='tsdataset', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df_timeseries', ctx=Load())), keyword(arg='freq', value=Attribute(value=Attribute(value=Name(id='config', ctx=Load()), attr='dataset', ctx=Load()), attr='freq', ctx=Load())), keyword(arg='df_exog', value=Name(id='df_exog', ctx=Load()))])), Return(value=Name(id='tsdataset', ctx=Load()))], decorator_list=[], returns=Name(id='TSDataset', ctx=Load())), Assign(targets=[Name(id='pipeline_configs', ctx=Store())], value=Subscript(value=Name(id='config_dict', ctx=Load()), slice=Constant(value='pipeline'), ctx=Load())), Assign(targets=[Name(id='backtest_configs', ctx=Store())], value=Subscript(value=Name(id='config_dict', ctx=Load()), slice=Constant(value='backtest'), ctx=Load())), AnnAssign(target=Name(id='pipeline', ctx=Store()), annotation=Name(id='Pipeline', ctx=Load()), value=Call(func=Attribute(value=Name(id='hydra_slayer', ctx=Load()), attr='get_from_params', ctx=Load()), args=[], keywords=[keyword(value=Name(id='pipeline_configs', ctx=Load()))]), simple=1), AnnAssign(target=Name(id='backtest_configs_hydra_slayer', ctx=Store()), annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()), value=Call(func=Attribute(value=Name(id='hydra_slayer', ctx=Load()), attr='get_from_params', ctx=Load()), args=[], keywords=[keyword(value=Name(id='backtest_configs', ctx=Load()))]), simple=1), Assign(targets=[Name(id='tsdataset', ctx=Store())], value=Call(func=Name(id='generate_tsdataset', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='metri_cs', ctx=Store()), Name(id='forecast', ctx=Store()), Name(id='info', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='tsdataset', ctx=Load())), keyword(value=Name(id='backtest_configs_hydra_slayer', ctx=Load()))]))], type_ignores=[])