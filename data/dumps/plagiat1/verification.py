Module(body=[Import(names=[alias(name='os')]), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), ImportFrom(module='typing', names=[alias(name='Tuple'), alias(name='Dict'), alias(name='Optional'), alias(name='Any'), alias(name='Union')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='catalyst.metrics._metric', names=[alias(name='ICallbackLoaderMetric')], level=0), ImportFrom(module='catalyst.callbacks.metric', names=[alias(name='LoaderMetricCallback')], level=0), ImportFrom(module='catalyst.utils.distributed', names=[alias(name='all_gather'), alias(name='get_rank')], level=0), ImportFrom(module='sklearn', names=[alias(name='metrics')], level=0), ImportFrom(module='config', names=[alias(name='prepare_config')], level=2), FunctionDef(name='risk_coverage_curve', args=arguments(posonlyargs=[], args=[arg(arg='loss'), arg(arg='confidence')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[])), Assign(targets=[Name(id='confidence', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='confidence', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Call(func=Name(id='_len', ctx=Load()), args=[Name(id='confidence', ctx=Load())], keywords=[])]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Size mismatch.')], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Empty data.')], keywords=[]))], orelse=[]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Name(id='loss', ctx=Load()), ops=[GtE()], comparators=[Constant(value=0)])], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Losses must be non-negative.')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='n', ctx=Store())], value=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='loss', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ths', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='empty', ctx=Load()), args=[BinOp(left=Name(id='n', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='risk', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='empty', ctx=Load()), args=[BinOp(left=Name(id='n', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='coverage', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[BinOp(left=Name(id='n', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[]), op=Div(), right=Name(id='n', ctx=Load()))), Assign(targets=[Name(id='order', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='flip', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argsort', ctx=Load()), args=[Name(id='confidence', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Name(id='ths', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Store())], value=Subscript(value=Name(id='confidence', ctx=Load()), slice=Name(id='order', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='ths', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='ths', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Add(), right=Constant(value=1))), Assign(targets=[Subscript(value=Name(id='risk', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='cumsum', ctx=Load()), args=[Subscript(value=Name(id='loss', ctx=Load()), slice=Name(id='order', ctx=Load()), ctx=Load())], keywords=[]), op=Div(), right=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='n', ctx=Load())], keywords=[]), op=Add(), right=Constant(value=1)))), Assign(targets=[Subscript(value=Name(id='risk', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Constant(value=0)), Return(value=Tuple(elts=[Name(id='risk', ctx=Load()), Name(id='coverage', ctx=Load()), Name(id='ths', ctx=Load())], ctx=Load()))], decorator_list=[]), ClassDef(name='VerificationMetrics', bases=[Name(id='ICallbackLoaderMetric', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='ƟComƶʴpute Ȋ˰ȀŢveąrǒƗifȯʀicǘaʀtŒʘi)oǂͼȨn metr̹iΫ˭ο˷ͭcsʚ.\n͒]\nAv[au˵ilabȚʋlǈe ŰmɜƲet̩ricϰÑs:\n  ɞ-Ǡ ȉpǂrǍɽ:Ŵ FŸractiəƙon ofΉ pκosˤiǦDšt͛i͐ves ǖ˾in th\x9ae dataset͌E.̦͌̈́j\n ϫ˽ À-ɰ maĀx_a&ccuϕr̼ͫ+¦a3c£y̢Ϙ: ϪVe˧ȀɆςʭǊriǊƟƒϬfiǣ̣caɼt˵ion͌Ď̝Π \x85àcɱcȫurßacȥy\x97ɷʵɔè Įwith ζbe͓ȣstΌ Ŧth`Žrſe\x90shõʠ̹λld.\nơ  -γ auĴc: ̮ROCƷß A[ƕU)C͙L.\nʠ Ǩ - tpēkr: ƖTPR ΥǼǼfor tĵóheŬ- ϛήr|equŠˣʑes͋ζtɧ͡eƻd˶ź FP\x94%RŖ.\nɑǨ ɝ ʊ- f̛\x81p˕r: Acǔ˴tuafl ɮ˒FPRą ͎ʤoÓfĩɁűŔ ẗ́hϟe˂ founŝdč Óɡth̄Ľreşϊsholƿ́d\x8d˟.Ķ\n ~ˁ ŜĀ˄-ȣ ee˫r ſȕ:È EÀƣɴqɛualŕʿ eȄrrʛǮor rπateƻ.')), FunctionDef(name='get_default_config', args=arguments(posonlyargs=[], args=[arg(arg='fpr'), arg(arg='roc_curve_dump_dir')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.001), Constant(value=None)]), body=[Return(value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='fpr'), Name(id='fpr', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='roc_curve_dump_dir'), Name(id='roc_curve_dump_dir', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='_normalize_targets', args=arguments(posonlyargs=[], args=[arg(arg='targets')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ¯˳ȹ 5  ſ   ñ ɉ  ̈́  ̊Ơ ')), Assign(targets=[Name(id='targets', ctx=Store())], value=Call(func=Attribute(value=Name(id='targets', ctx=Load()), attr='long', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logical_or', ctx=Load()), args=[Compare(left=Name(id='targets', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), Compare(left=Name(id='targets', ctx=Load()), ops=[Eq()], comparators=[Constant(value=0)])], keywords=[]), attr='all', ctx=Load()), args=[], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Expected boolean targets or {0, 1} targets.')], keywords=[]))], orelse=[]), Return(value=Name(id='targets', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='compute_key_value', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Cϊoȯ\x84mÍ¡p̢uteēs tóȋǟhe kbÙiɿnary AUCͪ me~tric bas|eŕγdƌ́\x84 o$nʟ saǼved ǩst̿īa˾tΟiϻstŵĵɏ̎icsǬ °aŊɒnd ̖reĽturnsʋ ʗkάeʂˬ͠y-ǒvÂalueɢ resuȥlts.̎')), Assign(targets=[Name(id='names', ctx=Store())], value=List(elts=[Constant(value='pr'), Constant(value='max_accuracy'), Constant(value='auc'), Constant(value='tpr'), Constant(value='fpr'), Constant(value='eer'), Constant(value='confidence_auroc'), Constant(value='confidence_aupr'), Constant(value='confidence_aurcc')], ctx=Load())), Assign(targets=[Name(id='VALUES', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='compute', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='VALUES', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Return(value=Dict(keys=[], values=[]))], orelse=[]), Assert(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='names', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='_len', ctx=Load()), args=[Name(id='VALUES', ctx=Load())], keywords=[])])), Return(value=DictComp(key=BinOp(left=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='prefix', ctx=Load()), op=Add(), right=Name(id='name', ctx=Load())), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='suffix', ctx=Load())), value=Name(id='value', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='names', ctx=Load()), Name(id='VALUES', ctx=Load())], keywords=[]), ifs=[Compare(left=Name(id='value', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])], is_async=0)]))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='compute', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Comp̕utes t3he ǃAUCʳ ϺmȀetric basɲed on saved̻ ʐst˖atiïstic͝s.')), Assign(targets=[Name(id='scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_scores', ctx=Load())], keywords=[])), Assign(targets=[Name(id='targets', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_targets', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_is_ddp', ctx=Load()), body=[Assign(targets=[Name(id='scores', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Call(func=Name(id='all_gather', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='targets', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Call(func=Name(id='all_gather', ctx=Load()), args=[Name(id='targets', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='use_confidences', ctx=Store())], value=Call(func=Name(id='bool', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_confidences', ctx=Load())], keywords=[])), If(test=Name(id='use_confidences', ctx=Load()), body=[Assign(targets=[Name(id='con', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_confidences', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='self', ctx=Load()), attr='_is_ddp', ctx=Load()), body=[Assign(targets=[Name(id='con', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Call(func=Name(id='all_gather', ctx=Load()), args=[Name(id='con', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assert(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='con', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='_len', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[])]))], orelse=[Assign(targets=[Name(id='con', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='mask', ctx=Store())], value=Call(func=Attribute(value=Name(id='scores', ctx=Load()), attr='isfinite', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='scores', ctx=Store())], value=Subscript(value=Name(id='scores', ctx=Load()), slice=Name(id='mask', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='con', ctx=Store())], value=Subscript(value=Name(id='con', ctx=Load()), slice=Name(id='mask', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='targets', ctx=Store())], value=Subscript(value=Name(id='targets', ctx=Load()), slice=Name(id='mask', ctx=Load()), ctx=Load())), If(test=Compare(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]), body=[Return(value=Constant(value=None))], orelse=[]), Assign(targets=[Name(id='pr', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='targets', ctx=Load()), attr='float', ctx=Load()), args=[], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='fprs', ctx=Store()), Name(id='tprs', ctx=Store()), Name(id='ths', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='roc_curve', ctx=Load()), args=[Call(func=Attribute(value=Name(id='targets', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='scores', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='drop_intermediate', value=Constant(value=False))])), Assign(targets=[Name(id='auc', ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='auc', ctx=Load()), args=[Name(id='fprs', ctx=Load()), Name(id='tprs', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='')])]), body=[Assign(targets=[Name(id='out_file', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load()), JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='suffix', ctx=Load()), conversion=-1), Constant(value='_'), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dump_counter', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='out_file', ctx=Load()), Dict(keys=[Constant(value='tprs'), Constant(value='fprs')], values=[Name(id='tprs', ctx=Load()), Name(id='fprs', ctx=Load())])], keywords=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_dump_counter', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='fprs', ctx=Store())], value=Call(func=Attribute(value=Name(id='fprs', ctx=Load()), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='float', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='FPR_INDEX', ctx=Store()), Name(id='fpr', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_closest', ctx=Load()), args=[Name(id='fprs', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_fpr', ctx=Load())], keywords=[keyword(arg='last', value=Constant(value=True))])), Assign(targets=[Name(id='tpr', ctx=Store())], value=Subscript(value=Name(id='tprs', ctx=Load()), slice=Name(id='FPR_INDEX', ctx=Load()), ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='eer_index1', ctx=Store()), Name(id='_XCls', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_closest', ctx=Load()), args=[Name(id='fprs', ctx=Load()), BinOp(left=Constant(value=1), op=Sub(), right=Name(id='tprs', ctx=Load()))], keywords=[keyword(arg='last', value=Constant(value=True))])), Assign(targets=[Name(id='ee_r1', ctx=Store())], value=BinOp(left=Constant(value=0.5), op=Mult(), right=BinOp(left=BinOp(left=Subscript(value=Name(id='fprs', ctx=Load()), slice=Name(id='eer_index1', ctx=Load()), ctx=Load()), op=Add(), right=Constant(value=1)), op=Sub(), right=Subscript(value=Name(id='tprs', ctx=Load()), slice=Name(id='eer_index1', ctx=Load()), ctx=Load())))), Assign(targets=[Tuple(elts=[Name(id='eer_index2', ctx=Store()), Name(id='_XCls', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_find_closest', ctx=Load()), args=[Name(id='fprs', ctx=Load()), BinOp(left=Constant(value=1), op=Sub(), right=Name(id='tprs', ctx=Load()))], keywords=[keyword(arg='last', value=Constant(value=False))])), Assign(targets=[Name(id='eer2', ctx=Store())], value=BinOp(left=Constant(value=0.5), op=Mult(), right=BinOp(left=BinOp(left=Subscript(value=Name(id='fprs', ctx=Load()), slice=Name(id='eer_index2', ctx=Load()), ctx=Load()), op=Add(), right=Constant(value=1)), op=Sub(), right=Subscript(value=Name(id='tprs', ctx=Load()), slice=Name(id='eer_index2', ctx=Load()), ctx=Load())))), Assign(targets=[Name(id='eer', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='ee_r1', ctx=Load()), Name(id='eer2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='accuracy_index', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argmax', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='pr', ctx=Load()), op=Mult(), right=Name(id='tprs', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='pr', ctx=Load())), op=Mult(), right=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='fprs', ctx=Load()))))], keywords=[])), Assign(targets=[Name(id='max_accuracy', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='pr', ctx=Load()), op=Mult(), right=Subscript(value=Name(id='tprs', ctx=Load()), slice=Name(id='accuracy_index', ctx=Load()), ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='pr', ctx=Load())), op=Mult(), right=BinOp(left=Constant(value=1), op=Sub(), right=Subscript(value=Name(id='fprs', ctx=Load()), slice=Name(id='accuracy_index', ctx=Load()), ctx=Load()))))), If(test=Name(id='use_confidences', ctx=Load()), body=[Assign(targets=[Name(id='th', ctx=Store())], value=Subscript(value=Name(id='ths', ctx=Load()), slice=Name(id='accuracy_index', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='predictions', ctx=Store())], value=Compare(left=Name(id='scores', ctx=Load()), ops=[GtE()], comparators=[Name(id='th', ctx=Load())])), Assign(targets=[Name(id='correct', ctx=Store())], value=Compare(left=Name(id='predictions', ctx=Load()), ops=[Eq()], comparators=[Name(id='targets', ctx=Load())])), Assign(targets=[Name(id='confidence_auroc', ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='roc_auc_score', ctx=Load()), args=[Call(func=Attribute(value=Name(id='correct', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='con', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='precisions', ctx=Store()), Name(id='recalls', ctx=Store()), Name(id='_XCls', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='precision_recall_curve', ctx=Load()), args=[Call(func=Attribute(value=Name(id='correct', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='con', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='confidence_aupr', ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='auc', ctx=Load()), args=[Name(id='recalls', ctx=Load()), Name(id='precisions', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='risk', ctx=Store()), Name(id='coverage', ctx=Store()), Name(id='_XCls', ctx=Store())], ctx=Store())], value=Call(func=Name(id='risk_coverage_curve', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Sub(), right=Call(func=Attribute(value=Name(id='correct', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])), Call(func=Attribute(value=Name(id='con', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='confidence_aurcc', ctx=Store())], value=Call(func=Attribute(value=Name(id='metrics', ctx=Load()), attr='auc', ctx=Load()), args=[Name(id='coverage', ctx=Load()), Name(id='risk', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='confidence_auroc', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='confidence_aupr', ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='confidence_aurcc', ctx=Store())], value=Constant(value=None))]), Return(value=Tuple(elts=[Name(id='pr', ctx=Load()), Name(id='max_accuracy', ctx=Load()), Name(id='auc', ctx=Load()), Name(id='tpr', ctx=Load()), Name(id='fpr', ctx=Load()), Name(id='eer', ctx=Load()), Name(id='confidence_auroc', ctx=Load()), Name(id='confidence_aupr', ctx=Load()), Name(id='confidence_aurcc', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Optional', ctx=Load()), slice=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='Any', ctx=Load()), Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='int', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()), Name(id='float', ctx=Load()), Name(id='Any', ctx=Load()), Name(id='Any', ctx=Load()), Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Name(id='float', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load())), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='num_batches'), arg(arg='num_samples')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_ddp', ctx=Store())], value=Compare(left=Call(func=Name(id='get_rank', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_scores', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_confidences', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_targets', ctx=Store())], value=List(elts=[], ctx=Load()))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='updateqQ', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='scores', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='targets', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='con', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_scores', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='scores', ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_targets', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize_targets', ctx=Load()), args=[Name(id='targets', ctx=Load())], keywords=[]), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[])], keywords=[])), If(test=Compare(left=Name(id='con', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_confidences', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='con', ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='config', annotation=Name(id='Dict', ctx=Load())), arg(arg='compute_on_call', annotation=Name(id='bool', ctx=Load())), arg(arg='p', annotation=Name(id='str', ctx=Load())), arg(arg='suffix', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=True), Constant(value=None), Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='compute_on_call', value=Name(id='compute_on_call', ctx=Load())), keyword(arg='prefix', value=Name(id='p', ctx=Load())), keyword(arg='suffix', value=Name(id='suffix', ctx=Load()))])), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_fpr', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='float', ctx=Load()), args=[Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='fpr'), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_scores', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_confidences', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_targets', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_is_ddp', ctx=Store())], value=Compare(left=Call(func=Name(id='get_rank', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[UnaryOp(op=USub(), operand=Constant(value=1))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Store())], value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='roc_curve_dump_dir'), ctx=Load())), If(test=BoolOp(op=And(), values=[Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load()), Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='')])]), body=[Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_roc_dump', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dump_counter', ctx=Store())], value=Constant(value=0))], decorator_list=[]), FunctionDef(name='_find_closest', args=arguments(posonlyargs=[], args=[arg(arg='_array'), arg(arg='value'), arg(arg='last')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False)]), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='abs', ctx=Load()), args=[BinOp(left=Name(id='_array', ctx=Load()), op=Sub(), right=Name(id='value', ctx=Load()))], keywords=[])), If(test=Name(id='last', ctx=Load()), body=[Assign(targets=[Name(id='d', ctx=Store())], value=Subscript(value=Name(id='d', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='index', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argmin', ctx=Load()), args=[Name(id='d', ctx=Load())], keywords=[])), If(test=Name(id='last', ctx=Load()), body=[Assign(targets=[Name(id='index', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Name(id='_len', ctx=Load()), args=[Name(id='d', ctx=Load())], keywords=[]), op=Sub(), right=Constant(value=1)), op=Sub(), right=Name(id='index', ctx=Load())))], orelse=[]), Return(value=Tuple(elts=[Name(id='index', ctx=Load()), Subscript(value=Name(id='_array', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())], ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[]), ClassDef(name='Verifi', bases=[Name(id='LoaderMetricCallback', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='CaƔˆllbacȑkλ´ \x84for ƮverifiŁcaɺPtioÄnΩ ƛmɐetȝrics ųcompƋuta͋tΒġi̫ĕon̲.\n\nArgÝs0·:\n ʬ" ˮŒ ͨ inputˌ_ˋBϲkeή©y:ͷε Paƭirwise sc%orets keώy\x93.\n ʢɅ4 Ƶʋ & tašϰrǦ\x82get_ɷòĻkey:ΗȆ LaϿbels ke*űÍyƵ˓<.ʇ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='scores_key', annotation=Name(id='str', ctx=Load())), arg(arg='targets_key', annotation=Name(id='str', ctx=Load())), arg(arg='confidences_key', annotation=Name(id='str', ctx=Load())), arg(arg='p', annotation=Name(id='str', ctx=Load())), arg(arg='suffix', annotation=Name(id='str', ctx=Load())), arg(arg='config', annotation=Name(id='Dict', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=None), Constant(value=None), Constant(value=None)]), body=[Expr(value=Constant(value='ǈ   \x8b       ')), Assign(targets=[Name(id='input_key', ctx=Store())], value=Dict(keys=[Name(id='scores_key', ctx=Load())], values=[Constant(value='scores')])), If(test=Compare(left=Name(id='confidences_key', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='input_key', ctx=Load()), slice=Name(id='confidences_key', ctx=Load()), ctx=Store())], value=Constant(value='confidences'))], orelse=[]), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='metric', value=Call(func=Name(id='VerificationMetrics', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='prefix', value=Name(id='p', ctx=Load())), keyword(arg='suffix', value=Name(id='suffix', ctx=Load()))])), keyword(arg='input_key', value=Name(id='input_key', ctx=Load())), keyword(arg='target_key', value=Dict(keys=[Name(id='targets_key', ctx=Load())], values=[Constant(value='targets')]))]))], decorator_list=[])], decorator_list=[])], type_ignores=[])