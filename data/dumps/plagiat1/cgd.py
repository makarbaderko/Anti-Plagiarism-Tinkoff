Module(body=[Import(names=[alias(name='torch')]), ImportFrom(module='pretrainedmodels.models.senet', names=[alias(name='SENet'), alias(name='SEResNetBottleneck'), alias(name='pretrained_settings')], level=0), ImportFrom(module='torch.utils', names=[alias(name='model_zoo')], level=0), ClassDef(name='CGDSENet', bases=[Name(id='SENet', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Imʺplemenʵtation Əof CvGD netẅ́ork ƕwłith multiɮple Ȉg\x9clobal poǳoling brancheļs.\n\nSeÞe original paper:\n    ρCombinaýtion o͆f Multiple ̿Global Descriptor×s for Image Retrϲiev\x88aΦl (201ȼ9).')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='block'), arg(arg='layers'), arg(arg='grou'), arg(arg='reduction'), arg(arg='dropout_p'), arg(arg='inpla'), arg(arg='input_'), arg(arg='downsample_kernel_size'), arg(arg='downsample_padding'), arg(arg='num_classes')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=128), Constant(value=True), Constant(value=3), Constant(value=1), Constant(value=1000)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='block', value=Name(id='block', ctx=Load())), keyword(arg='layers', value=Name(id='layers', ctx=Load())), keyword(arg='groups', value=Name(id='grou', ctx=Load())), keyword(arg='reduction', value=Name(id='reduction', ctx=Load())), keyword(arg='dropout_p', value=Name(id='dropout_p', ctx=Load())), keyword(arg='inplanes', value=Name(id='inpla', ctx=Load())), keyword(arg='input_3x3', value=Name(id='input_', ctx=Load())), keyword(arg='downsample_kernel_size', value=Name(id='downsample_kernel_size', ctx=Load())), keyword(arg='downsample_padding', value=Name(id='downsample_padding', ctx=Load())), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))])), Assign(targets=[Attribute(value=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='layer4', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='conv1', ctx=Load()), attr='stride_', ctx=Store())], value=Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load())), Assign(targets=[Attribute(value=Subscript(value=Attribute(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='layer4', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='downsample', ctx=Load()), slice=Constant(value=0), ctx=Load()), attr='stride_', ctx=Store())], value=Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='initialize_pretrained_model', args=arguments(posonlyargs=[], args=[arg(arg='model'), arg(arg='num_classes'), arg(arg='settings')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Compare(left=Name(id='num_classes', ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='num_classes'), ctx=Load())]), msg=Call(func=Attribute(value=Constant(value='num_classes should be {}, but is {}'), attr='format', ctx=Load()), args=[Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='num_classes'), ctx=Load()), Name(id='num_classes', ctx=Load())], keywords=[])), Assign(targets=[Name(id='checkpointrcUBS', ctx=Store())], value=Call(func=Attribute(value=Name(id='model_zoo', ctx=Load()), attr='load_url', ctx=Load()), args=[Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='url'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='checkpointrcUBS', ctx=Load()), slice=Constant(value='last_linear.weight'), ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), slice=Constant(value='last_linear.weight'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='checkpointrcUBS', ctx=Load()), slice=Constant(value='last_linear.bias'), ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), slice=Constant(value='last_linear.bias'), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Name(id='checkpointrcUBS', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='cgd_se_resnet50', args=arguments(posonlyargs=[], args=[arg(arg='num_classes'), arg(arg='pretra')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1000), Constant(value='imagenet')]), body=[Expr(value=Constant(value='   ͳ  ˹ ɕ̔ʄŀ   ǥ\x82sƥ Ǒě   ƴ ')), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Name(id='CGDSENet', ctx=Load()), args=[Name(id='SEResNetBottleneck', ctx=Load()), List(elts=[Constant(value=3), Constant(value=4), Constant(value=6), Constant(value=3)], ctx=Load())], keywords=[keyword(arg='groups', value=Constant(value=1)), keyword(arg='reduction', value=Constant(value=16)), keyword(arg='dropout_p', value=Constant(value=None)), keyword(arg='inplanes', value=Constant(value=64)), keyword(arg='input_3x3', value=Constant(value=False)), keyword(arg='downsample_kernel_size', value=Constant(value=1)), keyword(arg='downsample_padding', value=Constant(value=0)), keyword(arg='num_classes', value=Name(id='num_classes', ctx=Load()))])), Assign(targets=[Name(id='settings', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='pretrained_settings', ctx=Load()), slice=Constant(value='se_resnet50'), ctx=Load()), slice=Name(id='pretra', ctx=Load()), ctx=Load())), If(test=Compare(left=Name(id='pretra', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='initialize_pretrained_model', ctx=Load()), args=[Name(id='model', ctx=Load()), Name(id='num_classes', ctx=Load()), Name(id='settings', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='model', ctx=Load()), attr='input_space', ctx=Store())], value=Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='input_space'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='model', ctx=Load()), attr='input_size', ctx=Store())], value=Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='input_size'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='model', ctx=Load()), attr='input_range', ctx=Store())], value=Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='input_range'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='model', ctx=Load()), attr='mean', ctx=Store())], value=Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='mean'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='model', ctx=Load()), attr='std', ctx=Store())], value=Subscript(value=Name(id='settings', ctx=Load()), slice=Constant(value='std'), ctx=Load())), Return(value=Name(id='model', ctx=Load()))], decorator_list=[])], type_ignores=[])