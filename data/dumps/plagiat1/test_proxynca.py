Module(body=[Import(names=[alias(name='math')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), Import(names=[alias(name='torch')]), ImportFrom(module='probabilistic_embeddings.criterion.proxynca', names=[alias(name='ProxyNCALoss')], level=0), ImportFrom(module='probabilistic_embeddings.layers', names=[alias(name='DiracDistribution'), alias(name='NegativeL2Scorer')], level=0), ClassDef(name='TestProxyNCALoss', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='            ')), FunctionDef(name='TEST_1D', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  mĥΘ   ˉLĢ  Ƞ  ǊͶ')), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='DiracDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Constant(value=1)]))])), Assign(targets=[Name(id='scorer', ctx=Store())], value=Call(func=Name(id='NegativeL2Scorer', ctx=Load()), args=[Name(id='distribution', ctx=Load())], keywords=[])), Assign(targets=[Name(id='proxy_nca_lossY', ctx=Store())], value=Call(func=Name(id='ProxyNCALoss', ctx=Load()), args=[], keywords=[keyword(arg='aggregation', value=Constant(value='none'))])), Assign(targets=[Name(id='embeddings', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=0), Constant(value=2)], ctx=Load())], keywords=[]), attr='float', ctx=Load()), args=[], keywords=[]), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='targets', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=0.5))], ctx=Load())], keywords=[]), attr='float', ctx=Load()), args=[], keywords=[]), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='labels', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=0), Constant(value=1), Constant(value=0)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='losses', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='proxy_nca_lossY', ctx=Load()), args=[Name(id='embeddings', ctx=Load()), Name(id='labels', ctx=Load()), Name(id='targets', ctx=Load()), Name(id='scorer', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]), attr='tolist', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='losses_gt', ctx=Store())], value=List(elts=[Constant(value=3.75), UnaryOp(op=USub(), operand=Constant(value=0.75)), UnaryOp(op=USub(), operand=Constant(value=5.25))], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='losses', ctx=Load())], keywords=[]), Constant(value=3)], keywords=[])), For(target=Tuple(elts=[Name(id='loss', ctx=Store()), Name(id='loss_gtLhTD', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='losses', ctx=Load()), Name(id='losses_gt', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Name(id='loss', ctx=Load()), Name(id='loss_gtLhTD', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])