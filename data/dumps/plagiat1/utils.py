Module(body=[Import(names=[alias(name='ast')]), Import(names=[alias(name='collections')]), Import(names=[alias(name='pathlib')]), ImportFrom(module='typing', names=[alias(name='Optional')], level=0), Import(names=[alias(name='intervaltree')]), Import(names=[alias(name='pandas', asname='pd')]), FunctionDef(name='parse_file_to_intervaltree', args=arguments(posonlyargs=[], args=[arg(arg='file_path', annotation=Name(id='st', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[FunctionDef(name='node_interval', args=arguments(posonlyargs=[], args=[arg(arg='node', annotation=Attribute(value=Name(id='ast', ctx=Load()), attr='stmt', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ÇŸU')), Assign(targets=[Name(id='mi', ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='lineno', ctx=Load())), Assign(targets=[Name(id='max_', ctx=Store())], value=Attribute(value=Name(id='node', ctx=Load()), attr='lineno', ctx=Load())), For(target=Name(id='node', ctx=Store()), iter=Call(func=Attribute(value=Name(id='ast', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='node', ctx=Load())], keywords=[]), body=[If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='node', ctx=Load()), Constant(value='lineno')], keywords=[]), body=[Assign(targets=[Name(id='mi', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='mi', ctx=Load()), Attribute(value=Name(id='node', ctx=Load()), attr='lineno', ctx=Load())], keywords=[])), Assign(targets=[Name(id='max_', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='max_', ctx=Load()), Attribute(value=Name(id='node', ctx=Load()), attr='lineno', ctx=Load())], keywords=[]))], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='mi', ctx=Load()), BinOp(left=Name(id='max_', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load()))], decorator_list=[]), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='file_path', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Name(id='parsed', ctx=Store())], value=Call(func=Attribute(value=Name(id='ast', ctx=Load()), attr='parse', ctx=Load()), args=[Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[])], keywords=[]))]), Assign(targets=[Name(id='tree', ctx=Store())], value=Call(func=Attribute(value=Name(id='intervaltree', ctx=Load()), attr='IntervalTree', ctx=Load()), args=[], keywords=[])), For(target=Name(id='item', ctx=Store()), iter=Call(func=Attribute(value=Name(id='ast', ctx=Load()), attr='walk', ctx=Load()), args=[Name(id='parsed', ctx=Load())], keywords=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='item', ctx=Load()), Tuple(elts=[Attribute(value=Name(id='ast', ctx=Load()), attr='ClassDef', ctx=Load()), Attribute(value=Name(id='ast', ctx=Load()), attr='FunctionDef', ctx=Load())], ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='interval_', ctx=Store())], value=Call(func=Name(id='node_interval', ctx=Load()), args=[Name(id='item', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='tree', ctx=Load()), slice=Slice(lower=Subscript(value=Name(id='interval_', ctx=Load()), slice=Constant(value=0), ctx=Load()), upper=Subscript(value=Name(id='interval_', ctx=Load()), slice=Constant(value=1), ctx=Load())), ctx=Store())], value=Attribute(value=Name(id='item', ctx=Load()), attr='name', ctx=Load()))], orelse=[])], orelse=[]), Return(value=Name(id='tree', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='intervaltree', ctx=Load()), attr='IntervalTree', ctx=Load())), FunctionDef(name='get_perfomance_dataframe', args=arguments(posonlyargs=[], args=[arg(arg='scalene_json_data', annotation=Name(id='DICT', ctx=Load())), arg(arg='main_filename', annotation=Name(id='st', ctx=Load())), arg(arg='t', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='main.py'), Constant(value=5)]), body=[Expr(value=Constant(value=' ')), Assign(targets=[Name(id='total_time', ctx=Store())], value=Subscript(value=Name(id='scalene_json_data', ctx=Load()), slice=Constant(value='elapsed_time_sec'), ctx=Load())), Assign(targets=[Name(id='top_lines', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[], keywords=[])), For(target=Name(id='file', ctx=Store()), iter=Subscript(value=Name(id='scalene_json_data', ctx=Load()), slice=Constant(value='files'), ctx=Load()), body=[If(test=Compare(left=Name(id='file', ctx=Load()), ops=[Eq()], comparators=[Name(id='main_filename', ctx=Load())]), body=[Continue()], orelse=[]), Assign(targets=[Name(id='tree', ctx=Store())], value=Call(func=Name(id='parse_file_to_intervaltree', ctx=Load()), args=[Name(id='file', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df_v', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Subscript(value=Subscript(value=Subscript(value=Name(id='scalene_json_data', ctx=Load()), slice=Constant(value='files'), ctx=Load()), slice=Name(id='file', ctx=Load()), ctx=Load()), slice=Constant(value='lines'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='n_cpu_percent_all'), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='n_cpu_percent_python'), ctx=Load()), op=Add(), right=Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='n_cpu_percent_c'), ctx=Load()))), Assign(targets=[Name(id='df_v', ctx=Store())], value=Call(func=Attribute(value=Name(id='df_v', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=Constant(value='n_cpu_percent_all')), keyword(arg='ascending', value=Constant(value=False))])), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='file'), ctx=Store())], value=Name(id='file', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='function'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='df_v', ctx=Load()), attr='lineno', ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='y')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[GeneratorExp(elt=Attribute(value=Name(id='i', ctx=Load()), attr='data', ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Name(id='tree', ctx=Load()), slice=Name(id='y', ctx=Load()), ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Attribute(value=Name(id='x', ctx=Load()), attr='begin', ctx=Load())))]), ifs=[], is_async=0)])], keywords=[]))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='function_n_cpu_percent_all'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='df_v', ctx=Load()), attr='groupby', ctx=Load()), args=[Constant(value='function')], keywords=[]), attr='n_cpu_percent_all', ctx=Load()), attr='transform', ctx=Load()), args=[Constant(value='sum')], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='function_n_copy_mb_s'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='df_v', ctx=Load()), attr='groupby', ctx=Load()), args=[Constant(value='function')], keywords=[]), attr='n_copy_mb_s', ctx=Load()), attr='transform', ctx=Load()), args=[Constant(value='sum')], keywords=[])), If(test=Name(id='t', ctx=Load()), body=[Assign(targets=[Name(id='df_v', ctx=Store())], value=Call(func=Attribute(value=Name(id='df_v', ctx=Load()), attr='head', ctx=Load()), args=[Name(id='t', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='percent_cpu_time'), ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='scalene_json_data', ctx=Load()), slice=Constant(value='files'), ctx=Load()), slice=Name(id='file', ctx=Load()), ctx=Load()), slice=Constant(value='percent_cpu_time'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df_v', ctx=Load()), slice=Constant(value='total_time'), ctx=Store())], value=Name(id='total_time', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='top_lines', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='df_v', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='top_lines', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='top_lines', ctx=Load())], keywords=[]), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='percent_cpu_time'), Constant(value='function_n_cpu_percent_all'), Constant(value='n_cpu_percent_all')], ctx=Load())), keyword(arg='ascending', value=Constant(value=False))])), Assign(targets=[Name(id='top_lines', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='top_lines', ctx=Load()), attr='set_index', ctx=Load()), args=[List(elts=[Constant(value='file'), Constant(value='total_time'), Constant(value='percent_cpu_time'), Constant(value='function'), Constant(value='function_n_cpu_percent_all'), Constant(value='function_n_copy_mb_s')], ctx=Load())], keywords=[]), slice=List(elts=[Constant(value='line'), Constant(value='n_cpu_percent_all'), Constant(value='n_cpu_percent_c'), Constant(value='n_cpu_percent_python'), Constant(value='n_copy_mb_s')], ctx=Load()), ctx=Load())), Return(value=Name(id='top_lines', ctx=Load()))], decorator_list=[]), FunctionDef(name='get_perfomance_dataframe_py_spy', args=arguments(posonlyargs=[], args=[arg(arg='speedscope_json_data', annotation=Name(id='DICT', ctx=Load())), arg(arg='PATTERN_TO_FILTER', annotation=Name(id='st', ctx=Load())), arg(arg='t', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load())), arg(arg='threshold', annotation=Name(id='float', ctx=Load())), arg(arg='dump_freq', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='etna/etna'), Constant(value=5), Constant(value=0.1), Constant(value=0.01)]), body=[Assign(targets=[Name(id='frames', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='speedscope_json_data', ctx=Load()), slice=Constant(value='shared'), ctx=Load()), slice=Constant(value='frames'), ctx=Load())), Assign(targets=[Name(id='samples', ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='speedscope_json_data', ctx=Load()), slice=Constant(value='profiles'), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value='samples'), ctx=Load())), Assign(targets=[Name(id='samples', ctx=Store())], value=Subscript(value=Subscript(value=Subscript(value=Name(id='speedscope_json_data', ctx=Load()), slice=Constant(value='profiles'), ctx=Load()), slice=Constant(value=0), ctx=Load()), slice=Constant(value='samples'), ctx=Load())), Assign(targets=[Name(id='total_time', ctx=Store())], value=Call(func=Attribute(value=Name(id='collections', ctx=Load()), attr='defaultdict', ctx=Load()), args=[Name(id='int', ctx=Load())], keywords=[])), For(target=Name(id='sample', ctx=Store()), iter=Name(id='samples', ctx=Load()), body=[For(target=Name(id='i', ctx=Store()), iter=Subscript(value=Name(id='sample', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), body=[If(test=Compare(left=Name(id='PATTERN_TO_FILTER', ctx=Load()), ops=[In()], comparators=[Subscript(value=Subscript(value=Name(id='frames', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value='file'), ctx=Load())]), body=[AugAssign(target=Subscript(value=Name(id='total_time', ctx=Load()), slice=Tuple(elts=[Subscript(value=Subscript(value=Name(id='frames', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value='name'), ctx=Load()), Subscript(value=Subscript(value=Name(id='frames', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value='file'), ctx=Load()), Subscript(value=Subscript(value=Name(id='frames', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), slice=Constant(value='line'), ctx=Load())], ctx=Load()), ctx=Store()), op=Add(), value=Constant(value=1)), Break()], orelse=[])], orelse=[])], orelse=[]), Assign(targets=[Name(id='df_py_spy', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Call(func=Attribute(value=Name(id='total_time', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='lineno'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='x', ctx=Load()), slice=Constant(value=2), ctx=Load()))], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='file'), ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Name(id='x', ctx=Load()), slice=Constant(value=1), ctx=Load()))], keywords=[])), Assign(targets=[Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='columns', ctx=Store())], value=List(elts=[Constant(value='tuples'), Constant(value='counter'), Constant(value='lineno'), Constant(value='file')], ctx=Load())), Assign(targets=[Name(id='source_code_dict', ctx=Store())], value=Call(func=Name(id='DICT', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='source_tre', ctx=Store())], value=Call(func=Name(id='DICT', ctx=Load()), args=[], keywords=[])), For(target=Name(id='filename', ctx=Store()), iter=Call(func=Attribute(value=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='file', ctx=Load()), attr='unique', ctx=Load()), args=[], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Assign(targets=[Subscript(value=Name(id='source_code_dict', ctx=Load()), slice=Name(id='filename', ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='f', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assign(targets=[Subscript(value=Name(id='source_tre', ctx=Load()), slice=Name(id='filename', ctx=Load()), ctx=Store())], value=Call(func=Name(id='parse_file_to_intervaltree', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='function'), ctx=Store())], value=Call(func=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='y')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Constant(value='.'), attr='join', ctx=Load()), args=[GeneratorExp(elt=Attribute(value=Name(id='i', ctx=Load()), attr='data', ctx=Load()), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='sorted', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='source_tre', ctx=Load()), slice=Subscript(value=Name(id='y', ctx=Load()), slice=Constant(value='file'), ctx=Load()), ctx=Load()), slice=Subscript(value=Name(id='y', ctx=Load()), slice=Constant(value='lineno'), ctx=Load()), ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Attribute(value=Name(id='x', ctx=Load()), attr='begin', ctx=Load())))]), ifs=[], is_async=0)])], keywords=[]))], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='line'), ctx=Store())], value=Call(func=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='y')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Subscript(value=Subscript(value=Name(id='source_code_dict', ctx=Load()), slice=Subscript(value=Name(id='y', ctx=Load()), slice=Constant(value='file'), ctx=Load()), ctx=Load()), slice=BinOp(left=Subscript(value=Name(id='y', ctx=Load()), slice=Constant(value='lineno'), ctx=Load()), op=Sub(), right=Constant(value=1)), ctx=Load()))], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='approx_time'), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='counter'), ctx=Load()), op=Mult(), right=Name(id='dump_freq', ctx=Load()))), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='file_approx_time'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='groupby', ctx=Load()), args=[Constant(value='file')], keywords=[]), attr='approx_time', ctx=Load()), attr='transform', ctx=Load()), args=[Constant(value='sum')], keywords=[])), Assign(targets=[Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='file'), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='file', ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Constant(value='/'), attr='join', ctx=Load()), args=[Subscript(value=Attribute(value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), attr='parts', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Name(id='df_py_spy', ctx=Store())], value=Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Compare(left=Subscript(value=Name(id='df_py_spy', ctx=Load()), slice=Constant(value='approx_time'), ctx=Load()), ops=[Gt()], comparators=[Name(id='threshold', ctx=Load())]), ctx=Load())), Assign(targets=[Name(id='df_py_spy', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='sort_values', ctx=Load()), args=[], keywords=[keyword(arg='by', value=List(elts=[Constant(value='file_approx_time'), Constant(value='approx_time')], ctx=Load())), keyword(arg='ascending', value=Constant(value=False))]), attr='set_index', ctx=Load()), args=[List(elts=[Constant(value='file'), Constant(value='file_approx_time'), Constant(value='function')], ctx=Load())], keywords=[]), slice=List(elts=[Constant(value='approx_time'), Constant(value='line')], ctx=Load()), ctx=Load())), If(test=Name(id='t', ctx=Load()), body=[Assign(targets=[Name(id='df_py_spy', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='df_py_spy', ctx=Load()), attr='groupby', ctx=Load()), args=[], keywords=[keyword(arg='level', value=List(elts=[Constant(value=0)], ctx=Load()))]), attr='head', ctx=Load()), args=[Name(id='t', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='df_py_spy', ctx=Load()))], decorator_list=[])], type_ignores=[])