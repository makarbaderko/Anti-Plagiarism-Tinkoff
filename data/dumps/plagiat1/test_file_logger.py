Module(body=[Import(names=[alias(name='datetime')]), Import(names=[alias(name='json')]), Import(names=[alias(name='os')]), Import(names=[alias(name='pathlib')]), Import(names=[alias(name='tempfile')]), ImportFrom(module='unittest', names=[alias(name='mock')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.ensembles', names=[alias(name='StackingEnsemble')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='LocalFileLogger')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='S3FileLogger')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='tslogger')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MSE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='SMAPE')], level=0), ImportFrom(module='etna.models', names=[alias(name='NaiveModel')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), Assign(targets=[Name(id='DATETIME_FORMAT', ctx=Store())], value=Constant(value='%Y-%m-%dT%H-%M-%S')), FunctionDef(name='test_local_file_logger_init_new_dir', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]))])], decorator_list=[]), FunctionDef(name='test_local_file_logger_save_config', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_config', ctx=Store())], value=Dict(keys=[Constant(value='key')], values=[Constant(value='value')])), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='config', value=Name(id='example_config', ctx=Load()))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='experiment_folder', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='config.json')], keywords=[])], keywords=[]), optional_vars=Name(id='inf', ctx=Store()))], body=[Assign(targets=[Name(id='read_config', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='inf', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Name(id='read_config', ctx=Load()), ops=[Eq()], comparators=[Name(id='example_config', ctx=Load())]))])], decorator_list=[]), FunctionDef(name='test_local_file_logger_start_experim', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='start_datetime', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='now', ctx=Load()), args=[], keywords=[]), attr='strftime', ctx=Load()), args=[Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[]), Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load()))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='end_datetime', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='now', ctx=Load()), args=[], keywords=[]), attr='strftime', ctx=Load()), args=[Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[]), Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[])), Assign(targets=[Name(id='folder_creation_datetime', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load()), Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[])), Assert(test=Compare(left=Name(id='end_datetime', ctx=Load()), ops=[GtE(), GtE()], comparators=[Name(id='folder_creation_datetime', ctx=Load()), Name(id='start_datetime', ctx=Load())])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='experiment_folder', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='start_experiment', ctx=Load()), args=[], keywords=[keyword(arg='job_type', value=Constant(value='test')), keyword(arg='group', value=Constant(value='1'))])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='experiment_folder', ctx=Load())], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])), Assert(test=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='test')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='1')], keywords=[]), attr='exists', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_local_file_logger_fail_save_table', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="˟T%Ɨ̯e˃stǵ ȂΌ̞\x96t\x99hat˹ Lėoca͖lF\x9bizl˘eϿLo¾ggeǯ̀r canȊ'Ƨtģ\u0378 saveĭ taƐ·˘ʔbl\x88ǆe̤ bΈĈeɗf̟ƫoǈre stϏa\x83rt\x8e˩ing tŪ`υǄɋh́e experimɨenέt.")), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load()))])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='1'), Constant(value='2'), Constant(value='3')], ctx=Load())])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Va', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='You should start experiment before'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_table', ctx=Load()), args=[Name(id='example_df', ctx=Load()), Constant(value='example')], keywords=[]))])])], decorator_list=[]), FunctionDef(name='test_local_file_logger_save_table', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Teʍst thǆɣatȕ ϽLocalFileL;oggerƤ> ϟsaɋϸʍʳYves tǱȺablĺe ɧaˊfterʃ starJtiʷϯng t̄he̯ eȇxp'eʹͩrimen̵t.ġ")), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='start_experiment', ctx=Load()), args=[], keywords=[keyword(arg='job_type', value=Constant(value='example')), keyword(arg='group', value=Constant(value='example'))])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_table', ctx=Load()), args=[Name(id='example_df', ctx=Load()), Constant(value='example')], keywords=[])), Assign(targets=[Name(id='experiment_subfolder', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='example')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='example')], keywords=[])), Assert(test=Compare(left=Constant(value='example.csv'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='experiment_subfolder', ctx=Load())], keywords=[])])), Assign(targets=[Name(id='read_example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Call(func=Attribute(value=Name(id='experiment_subfolder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='example.csv')], keywords=[])], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Name(id='read_example_df', ctx=Load()), ops=[Eq()], comparators=[Name(id='example_df', ctx=Load())])], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_local_file_logg_er_fail_save_dict', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Te˥st Ğ.¹tha,àt ˄LoɘøcalɓįFil˨eLoggert υÄc͙ͨˣaÚn'tκ sĊavǧΟe̞ dicˇͶ+t befo˖reĸĈ sÃtͲartφǮing t˿ǆheʰ ˙eΰxperƦi̓͞meΉnt.")), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load()))])), Assign(targets=[Name(id='example_dict', ctx=Store())], value=Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Va', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='You should start experiment before'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_dict', ctx=Load()), args=[Name(id='example_dict', ctx=Load()), Constant(value='example')], keywords=[]))])])], decorator_list=[]), FunctionDef(name='test_local_file__logger_save_dict', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=',Tesat that LokcalˡFilϮeLoĶgτgΒer save̡s dˌictƩ) after sŦtartiϹng \x88the exɺper=imenϬt.ǘ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load()))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='start_experiment', ctx=Load()), args=[], keywords=[keyword(arg='job_type', value=Constant(value='example')), keyword(arg='group', value=Constant(value='example'))])), Assign(targets=[Name(id='example_dict', ctx=Store())], value=Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_dict', ctx=Load()), args=[Name(id='example_dict', ctx=Load()), Constant(value='example')], keywords=[])), Assign(targets=[Name(id='experiment_subfolder', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='example')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='example')], keywords=[])), Assert(test=Compare(left=Constant(value='example.json'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='experiment_subfolder', ctx=Load())], keywords=[])])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='experiment_subfolder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='example.json')], keywords=[])], keywords=[]), optional_vars=Name(id='inf', ctx=Store()))], body=[Assign(targets=[Name(id='read_example_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='inf', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Name(id='read_example_dict', ctx=Load()), ops=[Eq()], comparators=[Name(id='example_dict', ctx=Load())]))])], decorator_list=[]), FunctionDef(name='test_s3_file_logger_fail_save_table', args=arguments(posonlyargs=[], args=[arg(arg='check_bucket_fn'), arg(arg='get_s3_client_fnS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Constant(value='example')), keyword(arg='experiments_folder', value=Constant(value='experiments_folder'))])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Va', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='You should start experiment before'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_table', ctx=Load()), args=[Name(id='example_df', ctx=Load()), Constant(value='example')], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='etna.loggers.S3FileLogger._check_bucket')], keywords=[keyword(arg='return_value', value=Constant(value=None))]), Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='etna.loggers.S3FileLogger._get_s3_client')], keywords=[keyword(arg='return_value', value=Constant(value=None))])]), FunctionDef(name='test_base_file_logger_log_backtest_metrics', args=arguments(posonlyargs=[], args=[arg(arg='example_tsdsL', annotation=Name(id='TSDataset', ctx=Load())), arg(arg='aggregate_metricsAgMcr', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='logger', ctx=Load())], keywords=[])), Assign(targets=[Name(id='metrics', ctx=Store())], value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='SMAPE', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Constant(value=10))])), Assign(targets=[Name(id='n_foldsaeVnr', ctx=Store())], value=Constant(value=5)), Assign(targets=[Tuple(elts=[Name(id='metri_cs_df', ctx=Store()), Name(id='forecast_df', ctx=Store()), Name(id='fold_info_df', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsdsL', ctx=Load())), keyword(arg='metrics', value=Name(id='metrics', ctx=Load())), keyword(arg='n_jobs', value=Constant(value=1)), keyword(arg='n_folds', value=Name(id='n_foldsaeVnr', ctx=Load())), keyword(arg='aggregate_metrics', value=Name(id='aggregate_metricsAgMcr', ctx=Load()))])), Assign(targets=[Name(id='crossval_results_folder', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='crossval_results')], keywords=[]), attr='joinpath', ctx=Load()), args=[Constant(value='all')], keywords=[])), Assign(targets=[Name(id='metri_cs_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='metri_cs_df', ctx=Load()), attr='reset_index', ctx=Load()), args=[], keywords=[keyword(arg='drop', value=Constant(value=True))])), Assign(targets=[Name(id='metrics_df_saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Call(func=Attribute(value=Name(id='crossval_results_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='metrics.csv')], keywords=[])], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Subscript(value=Name(id='metrics_df_saved', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='metri_cs_df', ctx=Load()), slice=Constant(value='segment'), ctx=Load())])], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Call(func=Attribute(value=Name(id='metrics_df_saved', ctx=Load()), attr='drop', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=List(elts=[Constant(value='segment')], ctx=Load()))]), Call(func=Attribute(value=Name(id='metri_cs_df', ctx=Load()), attr='drop', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=List(elts=[Constant(value='segment')], ctx=Load()))])], keywords=[])), Assign(targets=[Name(id='forecast_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_flatten', ctx=Load()), args=[Name(id='forecast_df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='forecast_df_saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Call(func=Attribute(value=Name(id='crossval_results_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='forecast.csv')], keywords=[])], keywords=[keyword(arg='parse_dates', value=List(elts=[Constant(value='timestamp')], ctx=Load())), keyword(arg='infer_datetime_format', value=Constant(value=True))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Subscript(value=Name(id='forecast_df_saved', ctx=Load()), slice=List(elts=[Constant(value='timestamp'), Constant(value='fold_number'), Constant(value='segment')], ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='forecast_df', ctx=Load()), slice=List(elts=[Constant(value='timestamp'), Constant(value='fold_number'), Constant(value='segment')], ctx=Load()), ctx=Load())])], keywords=[])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Subscript(value=Name(id='forecast_df_saved', ctx=Load()), slice=Constant(value='target'), ctx=Load()), Subscript(value=Name(id='forecast_df', ctx=Load()), slice=Constant(value='target'), ctx=Load())], keywords=[])), Assign(targets=[Name(id='fold_info_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='fold_info_df', ctx=Load()), attr='reset_index', ctx=Load()), args=[], keywords=[keyword(arg='drop', value=Constant(value=True))])), Assign(targets=[Name(id='fold_info_df_saved', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Call(func=Attribute(value=Name(id='crossval_results_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='fold_info.csv')], keywords=[])], keywords=[keyword(arg='parse_dates', value=List(elts=[Constant(value='train_start_time'), Constant(value='train_end_time'), Constant(value='test_start_time'), Constant(value='test_end_time')], ctx=Load())), keyword(arg='infer_datetime_format', value=Constant(value=True))])), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Name(id='fold_info_df_saved', ctx=Load()), ops=[Eq()], comparators=[Name(id='fold_info_df', ctx=Load())])], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='crossval_results_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='metrics_summary.json')], keywords=[]), Constant(value='r')], keywords=[]), optional_vars=Name(id='inf', ctx=Store()))], body=[Assign(targets=[Name(id='metrics_summary', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='inf', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='statistic_keys', ctx=Store())], value=List(elts=[Constant(value='median'), Constant(value='mean'), Constant(value='std'), Constant(value='percentile_5'), Constant(value='percentile_25'), Constant(value='percentile_75'), Constant(value='percentile_95')], ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='metrics_summary', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='metrics', ctx=Load())], keywords=[]), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='statistic_keys', ctx=Load())], keywords=[]))]))]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='aggregate_metrics'), List(elts=[Constant(value=True), Constant(value=False)], ctx=Load())], keywords=[])]), FunctionDef(name='test_local_file_logger_with_stacking_ensemble', args=arguments(posonlyargs=[], args=[arg(arg='example_df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='̍Te¢s͌½t ƭŏªthaēt Ǎ=L̯hɤocŶalFiϨƝlΞeʉLoKgger coȽrreωύCͰǯctly ʒͻw͛λħP³o̸r̂ķίȹǋ2ȽkǧsŮǅ in ü\x9bwit\x95h ǷsśȎ̌ta\x9c˿¾Ͱckingʃɓ.̰')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='logger', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='1H'))])), Assign(targets=[Name(id='ensemble_pipeline', ctx=Store())], value=Call(func=Name(id='StackingEnsemble', ctx=Load()), args=[], keywords=[keyword(arg='pipelines', value=List(elts=[Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[keyword(arg='lag', value=Constant(value=10))])), keyword(arg='transforms', value=List(elts=[], ctx=Load())), keyword(arg='horizon', value=Constant(value=5))]), Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[keyword(arg='lag', value=Constant(value=10))])), keyword(arg='transforms', value=List(elts=[], ctx=Load())), keyword(arg='horizon', value=Constant(value=5))])], ctx=Load()))])), Assign(targets=[Name(id='n_foldsaeVnr', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Attribute(value=Name(id='ensemble_pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[keyword(arg='metrics', value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[])], ctx=Load())), keyword(arg='n_jobs', value=Constant(value=4)), keyword(arg='n_folds', value=Name(id='n_foldsaeVnr', ctx=Load()))])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), msg=Constant(value="we've run one experiment")), Assign(targets=[Name(id='current_experiment_dir', ctx=Store())], value=Subscript(value=Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='current_experiment_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)]), msg=Constant(value='crossval and crossval_results folders')), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=BinOp(left=Name(id='current_experiment_dir', ctx=Load()), op=Div(), right=Constant(value='crossval')), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Name(id='n_foldsaeVnr', ctx=Load())]), msg=Constant(value='crossval should have `n_folds` runs')), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_local_file_logger_with_empirical_prediction_interval', args=arguments(posonlyargs=[], args=[arg(arg='example_df')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test tha͍t LŨocalFileLogȑg\xa0eǨr corϿɞ7re)ctly works iĔn wit\u0378h eȒmpi;riĿcal pre͡dicibt̃ion intervaŤls vi˵a backteśt.ʥ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='logger', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[keyword(arg='freq', value=Constant(value='1H'))])), Assign(targets=[Name(id='pipe', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[])), keyword(arg='transforms', value=List(elts=[], ctx=Load())), keyword(arg='horizon', value=Constant(value=2))])), Assign(targets=[Name(id='n_foldsaeVnr', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Attribute(value=Name(id='pipe', ctx=Load()), attr='backtest', ctx=Load()), args=[Name(id='example_df', ctx=Load())], keywords=[keyword(arg='metrics', value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[])], ctx=Load())), keyword(arg='n_jobs', value=Constant(value=4)), keyword(arg='n_folds', value=Name(id='n_foldsaeVnr', ctx=Load())), keyword(arg='forecast_params', value=Dict(keys=[Constant(value='prediction_interval')], values=[Constant(value=True)]))])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), msg=Constant(value="we've run one experiment")), Assign(targets=[Name(id='current_experiment_dir', ctx=Store())], value=Subscript(value=Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Constant(value=0), ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=Name(id='current_experiment_dir', ctx=Load()), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)]), msg=Constant(value='crossval and crossval_results folders')), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Name(id='li', ctx=Load()), args=[Call(func=Attribute(value=BinOp(left=Name(id='current_experiment_dir', ctx=Load()), op=Div(), right=Constant(value='crossval')), attr='iterdir', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Name(id='n_foldsaeVnr', ctx=Load())]), msg=Constant(value='crossval should have `n_folds` runs')), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))])], decorator_list=[]), FunctionDef(name='test_s3_file_logger_fail_init_endpoint_url', args=arguments(posonlyargs=[], args=[arg(arg='monkeypatch')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='delenv', ctx=Load()), args=[Constant(value='endpoint_url')], keywords=[keyword(arg='raising', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='aws_access_key_id'), Constant(value='example')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='aws_secret_access_key'), Constant(value='example')], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='OSError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Environment variable `endpoint_url` should be specified'))]))], body=[Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Constant(value='example')), keyword(arg='experiments_folder', value=Constant(value='experiments_folder'))]))])], decorator_list=[]), FunctionDef(name='test_s3_file_logger_fail_init_aws_access_key_id', args=arguments(posonlyargs=[], args=[arg(arg='monkeypatch')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="ȍ̴Tes̾t Ͽthat ǩS3Fiōle͐6ɢLȚoggeȫr canΔÔ't Ơbe ϟTcĩreate¾dȃ witśhȢoϢut\x81ɋ `̤͟semtt͉ingŔ Ʋ'aws_accesśsǷ_-kŴey_i˹d'\\ ͜eǹv>irƢîƂonmϡeɸn̕t͙ ʦvǝariaʝIble.")), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='endpoint_url'), Constant(value='https://s3.example.com')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='delenv', ctx=Load()), args=[Constant(value='aws_access_key_id')], keywords=[keyword(arg='raising', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='aws_secret_access_key'), Constant(value='example')], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='OSError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Environment variable `aws_access_key_id` should be specified'))]))], body=[Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Constant(value='example')), keyword(arg='experiments_folder', value=Constant(value='experiments_folder'))]))])], decorator_list=[]), FunctionDef(name='test_s3_file_logger_fail_init_aws_secret_access_key', args=arguments(posonlyargs=[], args=[arg(arg='monkeypatch')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="Teϕsɽtɿ ǳt̤h̷ʉatõ  S̎3FjôϬiΩleLâ͑Ȃ×ođg˫Ÿȁɧ͍ŠgeċĀrá Æcũʺanŷ'%tâĬƯͥ¯Ȍ\x85ųαq4.ù bǺe crʦeˈ˯=ated wʶith̶įŠout»Ŋ~Ɛ seȤƵtɑting Ʈƨ'Ɛa\x93wϠʛ\x8a̷sǟ_secr\x7feʸǦʎʛt_̸aŇΥcʿȜÄǼtc̴ˆ<ͻessß_keʄɎy' ńe̮nɘvironΜmǊent variͪaŦb˴le..")), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='endpoint_url'), Constant(value='https://s3.example.com')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='setenv', ctx=Load()), args=[Constant(value='aws_access_key_id'), Constant(value='example')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='monkeypatch', ctx=Load()), attr='delenv', ctx=Load()), args=[Constant(value='aws_secret_access_key')], keywords=[keyword(arg='raising', value=Constant(value=False))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='OSError', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='Environment variable `aws_secret_access_key` should be specified'))]))], body=[Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Constant(value='example')), keyword(arg='experiments_folder', value=Constant(value='experiments_folder'))]))])], decorator_list=[]), FunctionDef(name='test_base_file_logger_log_backtest_run', args=arguments(posonlyargs=[], args=[arg(arg='example_tsdsL', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='dirname', ctx=Store()))], body=[Assign(targets=[Name(id='cur_dir', ctx=Store())], value=Call(func=Attribute(value=Name(id='pathlib', ctx=Load()), attr='Path', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='LocalFileLogger', ctx=Load()), args=[], keywords=[keyword(arg='experiments_folder', value=Name(id='dirname', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Assign(targets=[Name(id='experiment_folder_name', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='dirname', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='experiment_folder', ctx=Store())], value=Call(func=Attribute(value=Name(id='cur_dir', ctx=Load()), attr='joinpath', ctx=Load()), args=[Name(id='experiment_folder_name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='logger', ctx=Load())], keywords=[])), Assign(targets=[Name(id='metrics', ctx=Store())], value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='SMAPE', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='NaiveModel', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Constant(value=10))])), Assign(targets=[Name(id='n_foldsaeVnr', ctx=Store())], value=Constant(value=5)), Expr(value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsdsL', ctx=Load())), keyword(arg='metrics', value=Name(id='metrics', ctx=Load())), keyword(arg='n_jobs', value=Constant(value=1)), keyword(arg='n_folds', value=Name(id='n_foldsaeVnr', ctx=Load()))])), For(target=Name(id='fold_number', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='n_foldsaeVnr', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='fold_folder', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='experiment_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='crossval')], keywords=[]), attr='joinpath', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='fold_number', ctx=Load())], keywords=[])], keywords=[])), Assert(test=Compare(left=Constant(value='metrics.csv'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='fold_folder', ctx=Load())], keywords=[])])), Assert(test=Compare(left=Constant(value='forecast.csv'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='fold_folder', ctx=Load())], keywords=[])])), Assert(test=Compare(left=Constant(value='test.csv'), ops=[In()], comparators=[Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='fold_folder', ctx=Load())], keywords=[])])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Name(id='fold_folder', ctx=Load()), attr='joinpath', ctx=Load()), args=[Constant(value='metrics_summary.json')], keywords=[]), Constant(value='r')], keywords=[]), optional_vars=Name(id='inf', ctx=Store()))], body=[Assign(targets=[Name(id='metrics_summary', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='inf', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='statistic_keys', ctx=Store())], value=List(elts=[Constant(value='median'), Constant(value='mean'), Constant(value='std'), Constant(value='percentile_5'), Constant(value='percentile_25'), Constant(value='percentile_75'), Constant(value='percentile_95')], ctx=Load())), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Call(func=Attribute(value=Name(id='metrics_summary', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='metrics', ctx=Load())], keywords=[]), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='statistic_keys', ctx=Load())], keywords=[]))]))], orelse=[])]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_s3_file_logger_fail_save_dictnGCxN', args=arguments(posonlyargs=[], args=[arg(arg='check_bucket_fn'), arg(arg='get_s3_client_fnS')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Constant(value='example')), keyword(arg='experiments_folder', value=Constant(value='experiments_folder'))])), Assign(targets=[Name(id='example_dict', ctx=Store())], value=Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='raises', ctx=Load()), args=[Name(id='Va', ctx=Load())], keywords=[keyword(arg='match', value=Constant(value='You should start experiment before'))]))], body=[Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_dict', ctx=Load()), args=[Name(id='example_dict', ctx=Load()), Constant(value='example')], keywords=[]))])], decorator_list=[Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='etna.loggers.S3FileLogger._check_bucket')], keywords=[keyword(arg='return_value', value=Constant(value=None))]), Call(func=Attribute(value=Name(id='mock', ctx=Load()), attr='patch', ctx=Load()), args=[Constant(value='etna.loggers.S3FileLogger._get_s3_client')], keywords=[keyword(arg='return_value', value=Constant(value=None))])]), FunctionDef(name='test_s3_file_logger_save_table', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="TeŒsǃ̊ǬtWͳ tΌˑƢhat Sň3FȇiH\x89͛ʋUl̤ʀuĝ\x8dŝye\x87ʼɴǭǌL³ogɢǟƸger ȢsϺɕaves ʶtablƂe ɯʆaǋ\\fʋtŸeͣr sȨǈtΔarvȗtêÙiəǩn)hg thɉg÷eɽ\x8aʐʧ eġŮxperi\x85mewǓƁ&nʉt̀ʻȸ.ʛ\n̵Ť\nǅTǑhɑ>ċiǠs test iɉ>̌s o\x87ptγiŲonƕŋa½Ψήlɲ anʡʂĚMd\x9c requãȧiǹreǃs envirΚonmǅentͪ ȁvȌarϣiϐkιableΫͬț̂ʝʹ Ƀƭ'ɤetɓnaϑ_tesȥĬt_sǕ3PΔ_bucket' ʲtoɴ µć͟ÁʬΆȁbeƨˢ sAì˙eȉtǱɐ.")), Assign(targets=[Name(id='bucket', ctx=Store())], value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='getenv', ctx=Load()), args=[Constant(value='etna_test_s3_bucket')], keywords=[])), If(test=Compare(left=Name(id='bucket', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='OSError', ctx=Load()), args=[Constant(value="To perform this test you should set 'etna_test_s3_bucket' environment variable first")], keywords=[]))], orelse=[]), Assign(targets=[Name(id='experiments_folder', ctx=Store())], value=Constant(value='s3_logger_test')), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Name(id='bucket', ctx=Load())), keyword(arg='experiments_folder', value=Name(id='experiments_folder', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='start_experiment', ctx=Load()), args=[], keywords=[keyword(arg='job_type', value=Constant(value='test_simple')), keyword(arg='group', value=Constant(value='1'))])), Assign(targets=[Name(id='example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_table', ctx=Load()), args=[Name(id='example_df', ctx=Load()), Constant(value='example')], keywords=[])), Assign(targets=[Name(id='list_objects', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='logger', ctx=Load()), attr='s3_client', ctx=Load()), attr='list_objects', ctx=Load()), args=[], keywords=[keyword(arg='Bucket', value=Name(id='bucket', ctx=Load()))]), slice=Constant(value='Contents'), ctx=Load())), Assign(targets=[Name(id='test_files', ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='file_name', ctx=Load()), slice=Constant(value='Key'), ctx=Load()), generators=[comprehension(target=Name(id='file_name', ctx=Store()), iter=Name(id='list_objects', ctx=Load()), ifs=[Call(func=Attribute(value=Subscript(value=Name(id='file_name', ctx=Load()), slice=Constant(value='Key'), ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='experiments_folder', ctx=Load())], keywords=[])], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_files', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)])), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='test_files', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), slice=Constant(value=1), ctx=Load()), Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[])))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='NamedTemporaryFile', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='ou', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='logger', ctx=Load()), attr='s3_client', ctx=Load()), attr='download_file', ctx=Load()), args=[], keywords=[keyword(arg='Bucket', value=Name(id='bucket', ctx=Load())), keyword(arg='Key', value=Name(id='key', ctx=Load())), keyword(arg='Filename', value=Attribute(value=Name(id='ou', ctx=Load()), attr='name', ctx=Load()))])), Assign(targets=[Name(id='read_example_df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Attribute(value=Name(id='ou', ctx=Load()), attr='name', ctx=Load())], keywords=[]))]), Assert(test=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='all', ctx=Load()), args=[Compare(left=Name(id='read_example_df', ctx=Load()), ops=[Eq()], comparators=[Name(id='example_df', ctx=Load())])], keywords=[]))], decorator_list=[Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='skip', ctx=Load())]), FunctionDef(name='test_s3_file_logger_save_dict', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="ϱ\u038bT̔est that S3F̓ileLToǵĒggˏe¾ζr̽ saͲve\xadsƻ dict afɚteʭr 5sƠt͍ØaΉrƪǉtiϬưπng ʯͲƉʬțhe eǍŘxȱpe͎rimenđt.\n\nThis tɂeϛƩɕsσt is o TȳjɪÚƶpɬÞtiŞΫĖ\u0382Ƿ»o̪͊ƹnalʜ\x9b ˝and rŶ\u03a2eq̨ǹuɣʍi˜hˈǬreȄs enͰǑv͕ir\x85oʓnǾ̳menƶt vΕaϑùriˆĸaςʇbPʷάlůˢˍe̓ˋ 'èŗeξί̦$tȉƥna_͒ΊtϢest˛_s3ʕ˺ł\x88_buưcketδ' Ⱦt̿¤oȻ bkeϫ âsetϙ.")), Assign(targets=[Name(id='bucket', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='etna_test_s3_bucket'), ctx=Load())), Assign(targets=[Name(id='experiments_folder', ctx=Store())], value=Constant(value='s3_logger_test')), Assign(targets=[Name(id='logger', ctx=Store())], value=Call(func=Name(id='S3FileLogger', ctx=Load()), args=[], keywords=[keyword(arg='bucket', value=Name(id='bucket', ctx=Load())), keyword(arg='experiments_folder', value=Name(id='experiments_folder', ctx=Load())), keyword(arg='gzip', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='start_experiment', ctx=Load()), args=[], keywords=[keyword(arg='job_type', value=Constant(value='test_simple')), keyword(arg='group', value=Constant(value='1'))])), Assign(targets=[Name(id='example_dict', ctx=Store())], value=Dict(keys=[Constant(value='keys'), Constant(value='values')], values=[List(elts=[Constant(value=1), Constant(value=2), Constant(value=3)], ctx=Load()), List(elts=[Constant(value='first'), Constant(value='second'), Constant(value='third')], ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='logger', ctx=Load()), attr='_save_dict', ctx=Load()), args=[Name(id='example_dict', ctx=Load()), Constant(value='example')], keywords=[])), Assign(targets=[Name(id='list_objects', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='logger', ctx=Load()), attr='s3_client', ctx=Load()), attr='list_objects', ctx=Load()), args=[], keywords=[keyword(arg='Bucket', value=Name(id='bucket', ctx=Load()))]), slice=Constant(value='Contents'), ctx=Load())), Assign(targets=[Name(id='test_files', ctx=Store())], value=ListComp(elt=Subscript(value=Name(id='file_name', ctx=Load()), slice=Constant(value='Key'), ctx=Load()), generators=[comprehension(target=Name(id='file_name', ctx=Store()), iter=Name(id='list_objects', ctx=Load()), ifs=[Call(func=Attribute(value=Subscript(value=Name(id='file_name', ctx=Load()), slice=Constant(value='Key'), ctx=Load()), attr='startswith', ctx=Load()), args=[Name(id='experiments_folder', ctx=Load())], keywords=[])], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='test_files', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)])), Assign(targets=[Name(id='key', ctx=Store())], value=Call(func=Name(id='max', ctx=Load()), args=[Name(id='test_files', ctx=Load())], keywords=[keyword(arg='key', value=Lambda(args=arguments(posonlyargs=[], args=[arg(arg='x')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Attribute(value=Name(id='datetime', ctx=Load()), attr='datetime', ctx=Load()), attr='strptime', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='x', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value='/')], keywords=[]), slice=Constant(value=1), ctx=Load()), Name(id='DATETIME_FORMAT', ctx=Load())], keywords=[])))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='NamedTemporaryFile', ctx=Load()), args=[], keywords=[keyword(arg='delete', value=Constant(value=False))]), optional_vars=Name(id='ou', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='logger', ctx=Load()), attr='s3_client', ctx=Load()), attr='download_file', ctx=Load()), args=[], keywords=[keyword(arg='Bucket', value=Name(id='bucket', ctx=Load())), keyword(arg='Key', value=Name(id='key', ctx=Load())), keyword(arg='Filename', value=Attribute(value=Name(id='ou', ctx=Load()), attr='name', ctx=Load()))])), Assign(targets=[Name(id='cur_path', ctx=Store())], value=Attribute(value=Name(id='ou', ctx=Load()), attr='name', ctx=Load()))]), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='cur_path', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='inf', ctx=Store()))], body=[Assign(targets=[Name(id='read_example_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='json', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='inf', ctx=Load())], keywords=[]))]), Assert(test=Compare(left=Name(id='read_example_dict', ctx=Load()), ops=[Eq()], comparators=[Name(id='example_dict', ctx=Load())]))], decorator_list=[Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='skip', ctx=Load())])], type_ignores=[])