Module(body=[ImportFrom(module='tempfile', names=[alias(name='NamedTemporaryFile')], level=0), ImportFrom(module='typing', names=[alias(name='Sequence')], level=0), Import(names=[alias(name='pytest')]), ImportFrom(module='loguru', names=[alias(name='logger', asname='_logger')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='Transform')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='ConsoleLogger')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='tslogger')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MSE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='SMAPE')], level=0), ImportFrom(module='etna.models', names=[alias(name='ProphetModel')], level=0), ImportFrom(module='etna.models', names=[alias(name='CatBoostMultiSegmentModel')], level=0), ImportFrom(module='etna.models', names=[alias(name='LinearMultiSegmentModel')], level=0), ImportFrom(module='etna.models', names=[alias(name='LinearPerSegmentModel')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='Metric')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='AddConstTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='DateFlagsTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='LagTransform')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), FunctionDef(name='check_logged_transforms', args=arguments(posonlyargs=[], args=[arg(arg='_log_file', annotation=Name(id='st_r', ctx=Load())), arg(arg='transforms', annotation=Subscript(value=Name(id='Sequence', ctx=Load()), slice=Name(id='Transform', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='CŔheckʄ ɛPthaƄɖt ʁtχĄͳȪransformǖ͛s΅±ł= ńare lĂo̒gƘϛĪged iÈ¼nŤto the̞ǹ f̡̖i±˘le.ȅ͕')), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='_log_file', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='in_file', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='in_file', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='transforms', ctx=Load())], keywords=[])])), For(target=Tuple(elts=[Name(id='line', ctx=Store()), Name(id='transform', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='zip', ctx=Load()), args=[Name(id='lines', ctx=Load()), Name(id='transforms', ctx=Load())], keywords=[]), body=[Assert(test=Compare(left=Attribute(value=Attribute(value=Name(id='transform', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), ops=[In()], comparators=[Name(id='line', ctx=Load())]))], orelse=[])])], decorator_list=[]), FunctionDef(name='test_tsdataset_transform_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ą̂CƔšhΝeÀķĪ\x81ck Ɔƛw͓˸̾̕orkǓȀÞiÓngƩ of l˞ogg̻Ǵ^̽¡i5ncgZϟ Ϙ̭ƶiȸnside `ȅTΣSDatŊaset΄.̝Ʒtrʉansform`ɳ.ʾǗɘ̏')), Assign(targets=[Name(id='transforms', ctx=Store())], value=List(elts=[Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='value', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))])], ctx=Load())), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='transform', ctx=Load()), args=[], keywords=[keyword(arg='transforms', value=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='transforms', ctx=Load()))])), Expr(value=Call(func=Name(id='check_logged_transforms', ctx=Load()), args=[], keywords=[keyword(arg='log_file', value=Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())), keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_tsdataset_fit_transform_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='transforms', ctx=Store())], value=List(elts=[Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='value', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))])], ctx=Load())), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Expr(value=Call(func=Name(id='check_logged_transforms', ctx=Load()), args=[], keywords=[keyword(arg='log_file', value=Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())), keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_tsdataset_make_future_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ŎĉCÖheckς wor\u0382king oϔfí \x85lSoggiͨnƣÊΙgqʦ insiϛdeͪ `TSĒDat͢aƁset.makeǲ_futu)r̨e\x9c`.l')), Assign(targets=[Name(id='transforms', ctx=Store())], value=List(elts=[Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='value', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))])], ctx=Load())), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='_VW', ctx=Store())], value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='make_future', ctx=Load()), args=[Constant(value=5)], keywords=[])), Expr(value=Call(func=Name(id='check_logged_transforms', ctx=Load()), args=[], keywords=[keyword(arg='log_file', value=Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())), keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_tsdataset_inverse_transform_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='µCheckɻǄ ʠwĐoˍr̰č̭˦kξinǟ͐\x81ƚ̚g ̖ƾϛ̿ofĭ Ʋlo˶gging inɨsideʯ\x83 `TS\x99\x80DaśtasetLt.ainϧˏ̽verˌse_traϖͦns΅ɾforȴϞmΈ`.ȠϿ')), Assign(targets=[Name(id='transforms', ctx=Store())], value=List(elts=[Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='lags', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='value', value=Constant(value=5)), keyword(arg='in_column', value=Constant(value='target'))])], ctx=Load())), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='fit_transform', ctx=Load()), args=[], keywords=[keyword(arg='transforms', value=Name(id='transforms', ctx=Load()))])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='inverse_transform', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='check_logged_transforms', ctx=Load()), args=[], keywords=[keyword(arg='log_file', value=Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())), keyword(arg='transforms', value=Subscript(value=Name(id='transforms', ctx=Load()), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_metric_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load())), arg(arg='metric', annotation=Name(id='Metric', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='horizon', ctx=Store())], value=Constant(value=10)), Assign(targets=[Tuple(elts=[Name(id='ts_train', ctx=Store()), Name(id='ts_test', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='train_test_split', ctx=Load()), args=[], keywords=[keyword(arg='test_size', value=Name(id='horizon', ctx=Load()))])), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='ProphetModel', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Name(id='horizon', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='ts_train', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='forecast', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='_VW', ctx=Store())], value=Call(func=Name(id='metric', ctx=Load()), args=[], keywords=[keyword(arg='y_true', value=Name(id='ts_test', ctx=Load())), keyword(arg='y_pred', value=Name(id='ts_forecast', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='in_file', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='in_file', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)])), Assert(test=Compare(left=Call(func=Name(id='repr', ctx=Load()), args=[Name(id='metric', ctx=Load())], keywords=[]), ops=[In()], comparators=[Subscript(value=Name(id='lines', ctx=Load()), slice=Constant(value=0), ctx=Load())]))]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='metric'), List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[keyword(arg='mode', value=Constant(value='macro'))])], ctx=Load())], keywords=[])]), FunctionDef(name='test_backtest_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='metrics', ctx=Store())], value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='SMAPE', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Name(id='metrics_str', ctx=Store())], value=List(elts=[Constant(value='MAE'), Constant(value='MSE'), Constant(value='SMAPE')], ctx=Load())), Assign(targets=[Name(id='date_flags', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_week', value=Constant(value=True)), keyword(arg='day_number_in_month', value=Constant(value=True))])), Assign(targets=[Name(id='pipe', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='CatBoostMultiSegmentModel', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Constant(value=10)), keyword(arg='transforms', value=List(elts=[Name(id='date_flags', ctx=Load())], ctx=Load()))])), Assign(targets=[Name(id='n_folds', ctx=Store())], value=Constant(value=5)), Expr(value=Call(func=Attribute(value=Name(id='pipe', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsds', ctx=Load())), keyword(arg='metrics', value=Name(id='metrics', ctx=Load())), keyword(arg='n_jobs', value=Constant(value=1)), keyword(arg='n_folds', value=Name(id='n_folds', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='in_file', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='in_file', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='lines', ctx=Store())], value=ListComp(elt=Name(id='line', ctx=Load()), generators=[comprehension(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), ifs=[Compare(left=Constant(value='backtest'), ops=[In()], comparators=[Name(id='line', ctx=Load())])], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[BinOp(left=BinOp(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='metrics', ctx=Load())], keywords=[]), op=Mult(), right=Name(id='n_folds', ctx=Load())), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='example_tsds', ctx=Load()), attr='segments', ctx=Load())], keywords=[]))])), Assert(test=Call(func=Name(id='a_ll', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='any', ctx=Load()), args=[ListComp(elt=Compare(left=Name(id='metric_str', ctx=Load()), ops=[In()], comparators=[Name(id='line', ctx=Load())]), generators=[comprehension(target=Name(id='metric_str', ctx=Store()), iter=Name(id='metrics_str', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), generators=[comprehension(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), ifs=[], is_async=0)])], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_b', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds', annotation=Name(id='TSDataset', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[keyword(arg='table', value=Constant(value=False))])], keywords=[])), Assign(targets=[Name(id='metrics', ctx=Store())], value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='SMAPE', ctx=Load()), args=[], keywords=[])], ctx=Load())), Assign(targets=[Name(id='date_flags', ctx=Store())], value=Call(func=Name(id='DateFlagsTransform', ctx=Load()), args=[], keywords=[keyword(arg='day_number_in_week', value=Constant(value=True)), keyword(arg='day_number_in_month', value=Constant(value=True))])), Assign(targets=[Name(id='pipe', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='CatBoostMultiSegmentModel', ctx=Load()), args=[], keywords=[])), keyword(arg='horizon', value=Constant(value=10)), keyword(arg='transforms', value=List(elts=[Name(id='date_flags', ctx=Load())], ctx=Load()))])), Assign(targets=[Name(id='n_folds', ctx=Store())], value=Constant(value=5)), Expr(value=Call(func=Attribute(value=Name(id='pipe', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='example_tsds', ctx=Load())), keyword(arg='metrics', value=Name(id='metrics', ctx=Load())), keyword(arg='n_jobs', value=Constant(value=1)), keyword(arg='n_folds', value=Name(id='n_folds', ctx=Load()))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='in_file', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='in_file', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='lines', ctx=Store())], value=ListComp(elt=Name(id='line', ctx=Load()), generators=[comprehension(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), ifs=[Compare(left=Constant(value='backtest'), ops=[In()], comparators=[Name(id='line', ctx=Load())])], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)]))]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_model_logging', args=arguments(posonlyargs=[], args=[arg(arg='example_tsds'), arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ĳΙCh˅Úe̘̒̾cϠ}k ϭworθkinģžŕg of loȡ˼gΦǪging in x\x9e\x8ffitl/\x93ĒΆϮǪȾfǍoʵ=rneǚê©ca«Ϩ͓st Zo\u038dȜ\x88fĖ ïmodɯelƫ.ů')), Assign(targets=[Name(id='horizon', ctx=Store())], value=Constant(value=7)), Assign(targets=[Name(id='lags', ctx=Store())], value=Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='lags', value=ListComp(elt=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Name(id='horizon', ctx=Load())), generators=[comprehension(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=1), BinOp(left=Constant(value=5), op=Add(), right=Constant(value=1))], keywords=[]), ifs=[], is_async=0)]))])), Expr(value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='fit_transform', ctx=Load()), args=[List(elts=[Name(id='lags', ctx=Load())], ctx=Load())], keywords=[])), Assign(targets=[Name(id='file', ctx=Store())], value=Call(func=Name(id='NamedTemporaryFile', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='_logger', ctx=Load()), attr='add', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load())], keywords=[])), Assign(targets=[Name(id='idx', ctx=Store())], value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Call(func=Name(id='ConsoleLogger', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='fit', ctx=Load()), args=[Name(id='example_tsds', ctx=Load())], keywords=[])), Assign(targets=[Name(id='to_forecast', ctx=Store())], value=Call(func=Attribute(value=Name(id='example_tsds', ctx=Load()), attr='make_future', ctx=Load()), args=[Name(id='horizon', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='m', ctx=Load()), attr='forecast', ctx=Load()), args=[Name(id='to_forecast', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Attribute(value=Name(id='file', ctx=Load()), attr='name', ctx=Load()), Constant(value='r')], keywords=[]), optional_vars=Name(id='in_file', ctx=Store()))], body=[Assign(targets=[Name(id='lines', ctx=Store())], value=Call(func=Attribute(value=Name(id='in_file', ctx=Load()), attr='readlines', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='lines', ctx=Store())], value=ListComp(elt=Name(id='line', ctx=Load()), generators=[comprehension(target=Name(id='line', ctx=Store()), iter=Name(id='lines', ctx=Load()), ifs=[Compare(left=Attribute(value=Attribute(value=Name(id='lags', ctx=Load()), attr='__class__', ctx=Load()), attr='__name__', ctx=Load()), ops=[NotIn()], comparators=[Name(id='line', ctx=Load())])], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='lines', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)])), Assert(test=Compare(left=Constant(value='fit'), ops=[In()], comparators=[Subscript(value=Name(id='lines', ctx=Load()), slice=Constant(value=0), ctx=Load())])), Assert(test=Compare(left=Constant(value='forecast'), ops=[In()], comparators=[Subscript(value=Name(id='lines', ctx=Load()), slice=Constant(value=1), ctx=Load())]))]), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='idx', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='model'), List(elts=[Call(func=Name(id='LinearPerSegmentModel', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='LinearMultiSegmentModel', ctx=Load()), args=[], keywords=[])], ctx=Load())], keywords=[])])], type_ignores=[])