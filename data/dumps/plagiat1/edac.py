Module(body=[ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List'), alias(name='Optional'), alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='copy', names=[alias(name='deepcopy')], level=0), ImportFrom(module='dataclasses', names=[alias(name='asdict'), alias(name='dataclass')], level=0), Import(names=[alias(name='math')]), Import(names=[alias(name='os')]), Import(names=[alias(name='random')]), Import(names=[alias(name='uuid')]), Import(names=[alias(name='wandb')]), Import(names=[alias(name='gym')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pyrallis')]), Import(names=[alias(name='d4rl')]), ImportFrom(module='torch.distributions', names=[alias(name='Normal')], level=0), Import(names=[alias(name='torch.nn', asname='nn')]), ImportFrom(module='tqdm', names=[alias(name='trange')], level=0), Import(names=[alias(name='torch')]), ClassDef(name='TrainConfig', bases=[], keywords=[], body=[Expr(value=Constant(value='   ʆ Z  ͌    Ḉ͏ è Ė ')), AnnAssign(target=Name(id='project_', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='CORL'), simple=1), AnnAssign(target=Name(id='group', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='EDAC-D4RL'), simple=1), AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='EDAC'), simple=1), AnnAssign(target=Name(id='hidden_dim', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=256), simple=1), AnnAssign(target=Name(id='num_critics', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='gamma', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=0.99), simple=1), AnnAssign(target=Name(id='tau', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=0.005), simple=1), AnnAssign(target=Name(id='eta', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=1.0), simple=1), AnnAssign(target=Name(id='actor_learning_rate', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=0.0003), simple=1), AnnAssign(target=Name(id='critic_learning_rate', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=0.0003), simple=1), AnnAssign(target=Name(id='alpha_learning_rate', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=0.0003), simple=1), AnnAssign(target=Name(id='max_action', ctx=Store()), annotation=Name(id='float_', ctx=Load()), value=Constant(value=1.0), simple=1), AnnAssign(target=Name(id='buffer_size', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000000), simple=1), AnnAssign(target=Name(id='env_name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='halfcheetah-medium-v2'), simple=1), AnnAssign(target=Name(id='batch_size', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=256), simple=1), AnnAssign(target=Name(id='n', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=3000), simple=1), AnnAssign(target=Name(id='num_updates_on_epoch', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000), simple=1), AnnAssign(target=Name(id='normalize_reward', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), AnnAssign(target=Name(id='eval_episodes', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='eval_every', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=5), simple=1), AnnAssign(target=Name(id='checkpoints_pathnmvVu', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), AnnAssign(target=Name(id='deterministic_torch', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=False), simple=1), AnnAssign(target=Name(id='train_seed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='eval_seed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=42), simple=1), AnnAssign(target=Name(id='log_every', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=100), simple=1), AnnAssign(target=Name(id='device', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='cpu'), simple=1), FunctionDef(name='__post_init__', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ł  Έµ  ĺ')), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='name', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='s', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Attribute(value=Name(id='s', ctx=Load()), attr='env_name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Subscript(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Slice(upper=Constant(value=8)), ctx=Load()), conversion=-1)])), If(test=Compare(left=Attribute(value=Name(id='s', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='checkpoints_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='checkpoints_path', ctx=Load()), Attribute(value=Name(id='s', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[Name(id='dataclass', ctx=Load())]), Assign(targets=[Name(id='Tenso_rBatch', ctx=Store())], value=Subscript(value=Name(id='List', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load())), FunctionDef(name='soft_update', args=arguments(posonlyargs=[], args=[arg(arg='target', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='source', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='tau', annotation=Name(id='float_', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   Ÿ     ŷ ϝ     ʺ  ')), For(target=Tuple(elts=[Name(id='target_param', ctx=Store()), Name(id='source_param', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='_zip', ctx=Load()), args=[Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='source', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='target_param', ctx=Load()), attr='data', ctx=Load()), attr='copy_', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='tau', ctx=Load())), op=Mult(), right=Attribute(value=Name(id='target_param', ctx=Load()), attr='data', ctx=Load())), op=Add(), right=BinOp(left=Name(id='tau', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='source_param', ctx=Load()), attr='data', ctx=Load())))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='wandb_init', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='dict_', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='init', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='project', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='project'), ctx=Load())), keyword(arg='group', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='group'), ctx=Load())), keyword(arg='name', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='name'), ctx=Load()))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wandb', ctx=Load()), attr='run', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='set_seed', args=arguments(posonlyargs=[], args=[arg(arg='seed', annotation=Name(id='int', ctx=Load())), arg(arg='env', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load()), ctx=Load())), arg(arg='deterministic_torch', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[If(test=Compare(left=Name(id='env', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='action_space', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PYTHONHASHSEED'), ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='manual_seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='use_deterministic_algorithms', ctx=Load()), args=[Name(id='deterministic_torch', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='wrap_env', args=arguments(posonlyargs=[], args=[arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='state_mean', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float_', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='state_std', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float_', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='reward_scale', annotation=Name(id='float_', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.0), Constant(value=1.0), Constant(value=1.0)]), body=[Expr(value=Constant(value='    ρ  ϱ  ')), FunctionDef(name='normalize_state', args=arguments(posonlyargs=[], args=[arg(arg='STATE')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   Yɖ   ȏ')), Return(value=BinOp(left=BinOp(left=Name(id='STATE', ctx=Load()), op=Sub(), right=Name(id='state_mean', ctx=Load())), op=Div(), right=Name(id='state_std', ctx=Load())))], decorator_list=[]), FunctionDef(name='scale_reward', args=arguments(posonlyargs=[], args=[arg(arg='rew_ard')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Name(id='reward_scale', ctx=Load()), op=Mult(), right=Name(id='rew_ard', ctx=Load())))], decorator_list=[]), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformObservation', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='normalize_state', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='reward_scale', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1.0)]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformReward', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='scale_reward', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='env', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), ClassDef(name='ReplayBuffer', bases=[], keywords=[], body=[FunctionDef(name='add_transition', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='state_dim', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='buffer_size', annotation=Name(id='int', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='cpu')]), body=[Expr(value=Constant(value='         ')), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_buffer_size', ctx=Store())], value=Name(id='buffer_size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_pointer', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_size', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_actions', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='action_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_rewards', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_next_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_dones', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_device', ctx=Store())], value=Name(id='device', ctx=Load()))], decorator_list=[]), FunctionDef(name='_to_tensor', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='data', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\x92Ļ         ƫƴ  ')), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='s', ctx=Load()), attr='_device', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='sample', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='batch_size', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Α      ϖßĿǥ  ^      Ǯ ø   ')), Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='_size', ctx=Load()), Attribute(value=Name(id='s', ctx=Load()), attr='_pointer', ctx=Load())], keywords=[])], keywords=[keyword(arg='size', value=Name(id='batch_size', ctx=Load()))])), Assign(targets=[Name(id='states', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_states', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='actio_ns', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_actions', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='rewards', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_rewards', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='next_states', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_next_states', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='dones', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_dones', ctx=Load()), slice=Name(id='indices', ctx=Load()), ctx=Load())), Return(value=List(elts=[Name(id='states', ctx=Load()), Name(id='actio_ns', ctx=Load()), Name(id='rewards', ctx=Load()), Name(id='next_states', ctx=Load()), Name(id='dones', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Name(id='Tenso_rBatch', ctx=Load())), FunctionDef(name='load_d4rl_dataset', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='data', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' Γ ʏ ǻϞ    \x9fʫ ')), If(test=Compare(left=Attribute(value=Name(id='s', ctx=Load()), attr='_size', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Trying to load data into non-empty replay buffer')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='n_transitions', ctx=Store())], value=Subscript(value=Attribute(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='n_transitions', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='s', ctx=Load()), attr='_buffer_size', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Replay buffer is smaller than the dataset you are trying to load!')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_actions', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='actions'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_rewards', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_next_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='_dones', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='terminals'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Name(id='s', ctx=Load()), attr='_size', ctx=Store()), op=Add(), value=Name(id='n_transitions', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='_pointer', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='_size', ctx=Load()), Name(id='n_transitions', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Dataset size: '), FormattedValue(value=Name(id='n_transitions', ctx=Load()), conversion=-1)])], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='VectorizedLi', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='3  e ɶ ɠŶ·!   ')), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='x', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Name(id='x', ctx=Load()), op=MatMult(), right=Attribute(value=Name(id='s', ctx=Load()), attr='weight', ctx=Load())), op=Add(), right=Attribute(value=Name(id='s', ctx=Load()), attr='bias', ctx=Load())))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='in_features', annotation=Name(id='int', ctx=Load())), arg(arg='out_features', annotation=Name(id='int', ctx=Load())), arg(arg='ensemble_size', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='     ©δȢ ÷ ɦ  Ƞ ̮ǘ     ΰ S  ')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='in_features', ctx=Store())], value=Name(id='in_features', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='out_features', ctx=Store())], value=Name(id='out_features', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='ensemble_size', ctx=Store())], value=Name(id='ensemble_size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='weight', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Parameter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='empty', ctx=Load()), args=[Name(id='ensemble_size', ctx=Load()), Name(id='in_features', ctx=Load()), Name(id='out_features', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='bias', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Parameter', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='empty', ctx=Load()), args=[Name(id='ensemble_size', ctx=Load()), Constant(value=1), Name(id='out_features', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='reset_parameters', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='reset_parameters', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ȷɄ')), For(target=Name(id='layer', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='ensemble_size', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='nn', ctx=Load()), attr='init', ctx=Load()), attr='kaiming_uniform_', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='weight', ctx=Load()), slice=Name(id='layer', ctx=Load()), ctx=Load())], keywords=[keyword(arg='a', value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[Constant(value=5)], keywords=[]))]))], orelse=[]), Assign(targets=[Tuple(elts=[Name(id='fan_in', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='nn', ctx=Load()), attr='init', ctx=Load()), attr='_calculate_fan_in_and_fan_out', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='weight', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='bound', ctx=Store())], value=IfExp(test=Compare(left=Name(id='fan_in', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='sqrt', ctx=Load()), args=[Name(id='fan_in', ctx=Load())], keywords=[])), orelse=Constant(value=0))), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='bias', ctx=Load()), UnaryOp(op=USub(), operand=Name(id='bound', ctx=Load())), Name(id='bound', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), ClassDef(name='Actor', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[Expr(value=Constant(value=' ˥ ͷϽ Ó     ϸ@   Ψ  ')), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='deterministic', annotation=Name(id='bool', ctx=Load())), arg(arg='need_log_prob', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=False), Constant(value=False)]), body=[Assign(targets=[Name(id='hidden', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='trunk', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='mu', ctx=Store()), Name(id='log_sigma', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='mu', ctx=Load()), args=[Name(id='hidden', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='log_sigma', ctx=Load()), args=[Name(id='hidden', ctx=Load())], keywords=[])], ctx=Load())), Assign(targets=[Name(id='log_sigma', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='clip', ctx=Load()), args=[Name(id='log_sigma', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=5)), Constant(value=2)], keywords=[])), Assign(targets=[Name(id='policy_dist', ctx=Store())], value=Call(func=Name(id='Normal', ctx=Load()), args=[Name(id='mu', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='exp', ctx=Load()), args=[Name(id='log_sigma', ctx=Load())], keywords=[])], keywords=[])), If(test=Name(id='deterministic', ctx=Load()), body=[Assign(targets=[Name(id='action', ctx=Store())], value=Name(id='mu', ctx=Load()))], orelse=[Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Name(id='policy_dist', ctx=Load()), attr='rsample', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Tuple(elts=[Name(id='tanh_action', ctx=Store()), Name(id='log_prob', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tanh', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[]), Constant(value=None)], ctx=Load())), If(test=Name(id='need_log_prob', ctx=Load()), body=[Assign(targets=[Name(id='log_prob', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='policy_dist', ctx=Load()), attr='log_prob', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[]), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Assign(targets=[Name(id='log_prob', ctx=Store())], value=BinOp(left=Name(id='log_prob', ctx=Load()), op=Sub(), right=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Call(func=Attribute(value=Name(id='tanh_action', ctx=Load()), attr='pow', ctx=Load()), args=[Constant(value=2)], keywords=[])), op=Add(), right=Constant(value=1e-06))], keywords=[]), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=UnaryOp(op=USub(), operand=Constant(value=1)))])))], orelse=[]), Return(value=Tuple(elts=[BinOp(left=Name(id='tanh_action', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='s', ctx=Load()), attr='max_action', ctx=Load())), Name(id='log_prob', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='state_dim', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='hidden_dim', annotation=Name(id='int', ctx=Load())), arg(arg='max_action', annotation=Name(id='float_', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1.0)]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='trunk', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='mu', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='action_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='log_sigma', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='action_dim', ctx=Load())], keywords=[])), For(target=Name(id='layer', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='trunk', ctx=Load()), slice=Slice(step=Constant(value=2)), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='constant_', ctx=Load()), args=[Attribute(value=Name(id='layer', ctx=Load()), attr='bias', ctx=Load()), Constant(value=0.1)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='mu', ctx=Load()), attr='weight', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.001)), Constant(value=0.001)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='mu', ctx=Load()), attr='bias', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.001)), Constant(value=0.001)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_sigma', ctx=Load()), attr='weight', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.001)), Constant(value=0.001)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_sigma', ctx=Load()), attr='bias', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.001)), Constant(value=0.001)], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='action_dim', ctx=Store())], value=Name(id='action_dim', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='max_action', ctx=Store())], value=Name(id='max_action', ctx=Load()))], decorator_list=[]), FunctionDef(name='ac_t', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ǯʟ ȼ  ʖ±ɣ   Ƥ \x9dǜ ŗ    r ʍ    Ϝ ')), Assign(targets=[Name(id='deterministic', ctx=Store())], value=UnaryOp(op=Not(), operand=Attribute(value=Name(id='s', ctx=Load()), attr='training', ctx=Load()))), Assign(targets=[Name(id='STATE', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[keyword(arg='device', value=Name(id='device', ctx=Load())), keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load()))])), Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Call(func=Name(id='s', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[keyword(arg='deterministic', value=Name(id='deterministic', ctx=Load()))]), slice=Constant(value=0), ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='action', ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], decorator_list=[]), ClassDef(name='VectorizedCritic', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='action', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ')), Assign(targets=[Name(id='state_action', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[List(elts=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), If(test=Compare(left=Call(func=Attribute(value=Name(id='state_action', ctx=Load()), attr='dim', ctx=Load()), args=[], keywords=[]), ops=[NotEq()], comparators=[Constant(value=3)]), body=[Assert(test=Compare(left=Call(func=Attribute(value=Name(id='state_action', ctx=Load()), attr='dim', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=2)])), Assign(targets=[Name(id='state_action', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='state_action', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='repeat_interleave', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='num_critics', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=0))]))], orelse=[]), Assert(test=Compare(left=Call(func=Attribute(value=Name(id='state_action', ctx=Load()), attr='dim', ctx=Load()), args=[], keywords=[]), ops=[Eq()], comparators=[Constant(value=3)])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='state_action', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='s', ctx=Load()), attr='num_critics', ctx=Load())])), Assign(targets=[Name(id='q_values', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), args=[Name(id='state_action', ctx=Load())], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Return(value=Name(id='q_values', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='state_dim', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='hidden_dim', annotation=Name(id='int', ctx=Load())), arg(arg='num_critics', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Name(id='VectorizedLi', ctx=Load()), args=[BinOp(left=Name(id='state_dim', ctx=Load()), op=Add(), right=Name(id='action_dim', ctx=Load())), Name(id='hidden_dim', ctx=Load()), Name(id='num_critics', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='VectorizedLi', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load()), Name(id='num_critics', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='VectorizedLi', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Name(id='hidden_dim', ctx=Load()), Name(id='num_critics', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='VectorizedLi', ctx=Load()), args=[Name(id='hidden_dim', ctx=Load()), Constant(value=1), Name(id='num_critics', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='layer', ctx=Store()), iter=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), slice=Slice(step=Constant(value=2)), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='constant_', ctx=Load()), args=[Attribute(value=Name(id='layer', ctx=Load()), attr='bias', ctx=Load()), Constant(value=0.1)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='weight', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.003)), Constant(value=0.003)], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='uniform_', ctx=Load()), args=[Attribute(value=Subscript(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), attr='bias', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=0.003)), Constant(value=0.003)], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='num_critics', ctx=Store())], value=Name(id='num_critics', ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='EDAC', bases=[], keywords=[], body=[Expr(value=Constant(value='Ȕ n Ĺ ΐ  Ϊ̞s    Ƨ Ɍ    Ϳ  ȇ  κ ̟ ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='actor', annotation=Name(id='Actor', ctx=Load())), arg(arg='actor_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='critic', annotation=Name(id='VectorizedCritic', ctx=Load())), arg(arg='critic_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='gamma', annotation=Name(id='float_', ctx=Load())), arg(arg='tau', annotation=Name(id='float_', ctx=Load())), arg(arg='eta', annotation=Name(id='float_', ctx=Load())), arg(arg='alpha_learning_rate', annotation=Name(id='float_', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.99), Constant(value=0.005), Constant(value=1.0), Constant(value=0.0001), Constant(value='cpu')]), body=[Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='device', ctx=Store())], value=Name(id='device', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Store())], value=Name(id='actor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Store())], value=Name(id='critic', ctx=Load())), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='target_critic', ctx=Store())], value=Call(func=Name(id='deepcopy', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load())], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='actor_optimizer', ctx=Store())], value=Name(id='actor_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='critic_optimizer', ctx=Store())], value=Name(id='critic_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='tau', ctx=Store())], value=Name(id='tau', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='gamma', ctx=Store())], value=Name(id='gamma', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='eta', ctx=Store())], value=Name(id='eta', ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='target_entropy', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Name(id='float_', ctx=Load()), args=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), attr='action_dim', ctx=Load())], keywords=[]))), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Constant(value=0.0)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='s', ctx=Load()), attr='device', ctx=Load())), keyword(arg='requires_grad', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='alpha_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[List(elts=[Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load())], ctx=Load())], keywords=[keyword(arg='lr', value=Name(id='alpha_learning_rate', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='_critic_diversity_loss', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='action', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='num_critics', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), attr='num_critics', ctx=Load())), Assign(targets=[Name(id='STATE', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='STATE', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='repeat_interleave', ctx=Load()), args=[Name(id='num_critics', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=0))])), Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='action', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='repeat_interleave', ctx=Load()), args=[Name(id='num_critics', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=0))]), attr='requires_grad_', ctx=Load()), args=[Constant(value=True)], keywords=[])), Assign(targets=[Name(id='q_ensembleEMBW', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load())], keywords=[])), Assign(targets=[Name(id='q_action_grad', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='autograd', ctx=Load()), attr='grad', ctx=Load()), args=[Call(func=Attribute(value=Name(id='q_ensembleEMBW', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[]), Name(id='action', ctx=Load())], keywords=[keyword(arg='retain_graph', value=Constant(value=True)), keyword(arg='create_graph', value=Constant(value=True))]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='q_action_grad', ctx=Store())], value=BinOp(left=Name(id='q_action_grad', ctx=Load()), op=Div(), right=BinOp(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='q_action_grad', ctx=Load())], keywords=[keyword(arg='p', value=Constant(value=2)), keyword(arg='dim', value=Constant(value=2))]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), op=Add(), right=Constant(value=1e-10)))), Assign(targets=[Name(id='q_action_grad', ctx=Store())], value=Call(func=Attribute(value=Name(id='q_action_grad', ctx=Load()), attr='transpose', ctx=Load()), args=[Constant(value=0), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='masks', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='eye', ctx=Load()), args=[Name(id='num_critics', ctx=Load())], keywords=[keyword(arg='device', value=Attribute(value=Name(id='s', ctx=Load()), attr='device', ctx=Load()))]), attr='unsqueeze', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='repeat', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='q_action_grad', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), Constant(value=1), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='q_action_grad', ctx=Store())], value=BinOp(left=Name(id='q_action_grad', ctx=Load()), op=MatMult(), right=Call(func=Attribute(value=Name(id='q_action_grad', ctx=Load()), attr='permute', ctx=Load()), args=[Constant(value=0), Constant(value=2), Constant(value=1)], keywords=[]))), Assign(targets=[Name(id='q_action_grad', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='masks', ctx=Load())), op=Mult(), right=Name(id='q_action_grad', ctx=Load()))), Assign(targets=[Name(id='grad_loss', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='q_action_grad', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=Tuple(elts=[Constant(value=1), Constant(value=2)], ctx=Load()))]), attr='mean', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='grad_loss', ctx=Store())], value=BinOp(left=Name(id='grad_loss', ctx=Load()), op=Div(), right=BinOp(left=Name(id='num_critics', ctx=Load()), op=Sub(), right=Constant(value=1)))), Return(value=Name(id='grad_loss', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='update', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='batchVlpWh', annotation=Name(id='Tenso_rBatch', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='STATE', ctx=Store()), Name(id='action', ctx=Store()), Name(id='rew_ard', ctx=Store()), Name(id='next_state', ctx=Store()), Name(id='done', ctx=Store())], ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='arr', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='device', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='arr', ctx=Store()), iter=Name(id='batchVlpWh', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='alpha_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_alpha_loss', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='alpha_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='alpha_loss', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='alpha_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='actor_loss', ctx=Store()), Name(id='actor_batch_entropy', ctx=Store()), Name(id='q_policy_std', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_actor_loss', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='actor_loss', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='critic_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_critic_loss', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load()), Name(id='rew_ard', ctx=Load()), Name(id='next_state', ctx=Load()), Name(id='done', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='critic_loss', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Expr(value=Call(func=Name(id='soft_update', ctx=Load()), args=[Attribute(value=Name(id='s', ctx=Load()), attr='target_critic', ctx=Load()), Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load())], keywords=[keyword(arg='tau', value=Attribute(value=Name(id='s', ctx=Load()), attr='tau', ctx=Load()))])), Assign(targets=[Name(id='max_action', ctx=Store())], value=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), attr='max_action', ctx=Load())), Assign(targets=[Name(id='random_actions', ctx=Store())], value=BinOp(left=UnaryOp(op=USub(), operand=Name(id='max_action', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Constant(value=2), op=Mult(), right=Name(id='max_action', ctx=Load())), op=Mult(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand_like', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[])))), Assign(targets=[Name(id='q_random_std', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='random_actions', ctx=Load())], keywords=[]), attr='std', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='update_info', ctx=Store())], value=Dict(keys=[Constant(value='alpha_loss'), Constant(value='critic_loss'), Constant(value='actor_loss'), Constant(value='batch_entropy'), Constant(value='alpha'), Constant(value='q_policy_std'), Constant(value='q_random_std')], values=[Call(func=Attribute(value=Name(id='alpha_loss', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='critic_loss', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='actor_loss', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Name(id='actor_batch_entropy', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Name(id='q_policy_std', ctx=Load()), Name(id='q_random_std', ctx=Load())])), Return(value=Name(id='update_info', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='float_', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='load_state_dict', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='state_dict', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='actor'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='critic'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='target_critic', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='target_critic'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='actor_optim'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic_optimizer', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='critic_optim'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='alpha_optimizer', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='alpha_optim'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load()), attr='data', ctx=Load()), slice=Constant(value=0), ctx=Store())], value=Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='log_alpha'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), attr='detach', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='state_dict', args=arguments(posonlyargs=[], args=[arg(arg='s')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='STATE', ctx=Store())], value=Dict(keys=[Constant(value='actor'), Constant(value='critic'), Constant(value='target_critic'), Constant(value='log_alpha'), Constant(value='actor_optim'), Constant(value='critic_optim'), Constant(value='alpha_optim')], values=[Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='target_critic', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic_optimizer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='alpha_optimizer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[])])), Return(value=Name(id='STATE', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='_actor_loss', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ŷȐ·Ÿ   ͓  ȓ Ù̢̇    ')), Assign(targets=[Tuple(elts=[Name(id='action', ctx=Store()), Name(id='action_log_prob', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[keyword(arg='need_log_prob', value=Constant(value=True))])), Assign(targets=[Name(id='q_value_dist', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load())], keywords=[])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='q_value_dist', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), attr='num_critics', ctx=Load())])), Assign(targets=[Name(id='q_value_min', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Name(id='q_value_dist', ctx=Load()), attr='min', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='values', ctx=Load())), Assign(targets=[Name(id='q_value_std', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='q_value_dist', ctx=Load()), attr='std', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='batch_entropy', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='action_log_prob', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]))), Assert(test=Compare(left=Attribute(value=Name(id='action_log_prob', ctx=Load()), attr='shape', ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='q_value_min', ctx=Load()), attr='shape', ctx=Load())])), Assign(targets=[Name(id='l', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=BinOp(left=Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Load()), op=Mult(), right=Name(id='action_log_prob', ctx=Load())), op=Sub(), right=Name(id='q_value_min', ctx=Load())), attr='mean', ctx=Load()), args=[], keywords=[])), Return(value=Tuple(elts=[Name(id='l', ctx=Load()), Name(id='batch_entropy', ctx=Load()), Name(id='q_value_std', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), Name(id='float_', ctx=Load()), Name(id='float_', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='_critic_loss', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='action', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='rew_ard', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='next_state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='done', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ϩ  \x90̋   Ț  ɧ ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='next_action', ctx=Store()), Name(id='next_action_log_prob', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), args=[Name(id='next_state', ctx=Load())], keywords=[keyword(arg='need_log_prob', value=Constant(value=True))])), Assign(targets=[Name(id='q_next', ctx=Store())], value=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='target_critic', ctx=Load()), args=[Name(id='next_state', ctx=Load()), Name(id='next_action', ctx=Load())], keywords=[]), attr='min', ctx=Load()), args=[Constant(value=0)], keywords=[]), attr='values', ctx=Load())), Assign(targets=[Name(id='q_next', ctx=Store())], value=BinOp(left=Name(id='q_next', ctx=Load()), op=Sub(), right=BinOp(left=Attribute(value=Name(id='s', ctx=Load()), attr='alpha', ctx=Load()), op=Mult(), right=Name(id='next_action_log_prob', ctx=Load())))), Assert(test=Compare(left=Attribute(value=Call(func=Attribute(value=Name(id='q_next', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='shape', ctx=Load()), ops=[Eq(), Eq()], comparators=[Attribute(value=Name(id='done', ctx=Load()), attr='shape', ctx=Load()), Attribute(value=Name(id='rew_ard', ctx=Load()), attr='shape', ctx=Load())])), Assign(targets=[Name(id='q_target', ctx=Store())], value=BinOp(left=Name(id='rew_ard', ctx=Load()), op=Add(), right=BinOp(left=BinOp(left=Attribute(value=Name(id='s', ctx=Load()), attr='gamma', ctx=Load()), op=Mult(), right=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='done', ctx=Load()))), op=Mult(), right=Call(func=Attribute(value=Name(id='q_next', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))))]), Assign(targets=[Name(id='q_values', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='critic', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load())], keywords=[])), Assign(targets=[Name(id='critic_loss', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=BinOp(left=BinOp(left=Name(id='q_values', ctx=Load()), op=Sub(), right=Call(func=Attribute(value=Name(id='q_target', ctx=Load()), attr='view', ctx=Load()), args=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), op=Pow(), right=Constant(value=2)), attr='mean', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=Constant(value=1))]), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=Constant(value=0))])), Assign(targets=[Name(id='diversity_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='_critic_diversity_loss', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='action', ctx=Load())], keywords=[])), Assign(targets=[Name(id='l', ctx=Store())], value=BinOp(left=Name(id='critic_loss', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='s', ctx=Load()), attr='eta', ctx=Load()), op=Mult(), right=Name(id='diversity_loss', ctx=Load())))), Return(value=Name(id='l', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='_alpha_loss', args=arguments(posonlyargs=[], args=[arg(arg='s'), arg(arg='STATE', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ȩå  ǉ Ņċϔ  Ρ Ţ ̨ Ə _     ')), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='action', ctx=Store()), Name(id='action_log_prob', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='s', ctx=Load()), attr='actor', ctx=Load()), args=[Name(id='STATE', ctx=Load())], keywords=[keyword(arg='need_log_prob', value=Constant(value=True))]))]), Assign(targets=[Name(id='l', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=UnaryOp(op=USub(), operand=Attribute(value=Name(id='s', ctx=Load()), attr='log_alpha', ctx=Load())), op=Mult(), right=BinOp(left=Name(id='action_log_prob', ctx=Load()), op=Add(), right=Attribute(value=Name(id='s', ctx=Load()), attr='target_entropy', ctx=Load()))), attr='mean', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='l', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], decorator_list=[]), FunctionDef(name='eval_actorRizq', args=arguments(posonlyargs=[], args=[arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='actor', annotation=Name(id='Actor', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load())), arg(arg='n_episodes', annotation=Name(id='int', ctx=Load())), arg(arg='seed', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ˆ   U  Ġ  \x8a      ')), Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='eval', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='episode_rewards', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='n_episodes', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='STATE', ctx=Store()), Name(id='done', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]), Constant(value=False)], ctx=Load())), Assign(targets=[Name(id='episode_reward', ctx=Store())], value=Constant(value=0.0)), While(test=UnaryOp(op=Not(), operand=Name(id='done', ctx=Load())), body=[Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='act', ctx=Load()), args=[Name(id='STATE', ctx=Load()), Name(id='device', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='STATE', ctx=Store()), Name(id='rew_ard', ctx=Store()), Name(id='done', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='step', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[])), AugAssign(target=Name(id='episode_reward', ctx=Store()), op=Add(), value=Name(id='rew_ard', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='episode_rewards', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='episode_reward', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='train', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='episode_rewards', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='return_reward_range', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='max_episode_stepsjsDQt')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='returns', ctx=Store()), Name(id='lengths', ctx=Store())], ctx=Store())], value=Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='ep_ret', ctx=Store()), Name(id='ep_len', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0)], ctx=Load())), For(target=Tuple(elts=[Name(id='r', ctx=Store()), Name(id='d', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='_zip', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='ep_ret', ctx=Store()), op=Add(), value=Call(func=Name(id='float_', ctx=Load()), args=[Name(id='r', ctx=Load())], keywords=[])), AugAssign(target=Name(id='ep_len', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=BoolOp(op=Or(), values=[Name(id='d', ctx=Load()), Compare(left=Name(id='ep_len', ctx=Load()), ops=[Eq()], comparators=[Name(id='max_episode_stepsjsDQt', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='returns', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_ret', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='lengths', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_len', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='ep_ret', ctx=Store()), Name(id='ep_len', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0)], ctx=Load()))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='lengths', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='ep_len', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='_sum', ctx=Load()), args=[Name(id='lengths', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load())], keywords=[])])), Return(value=Tuple(elts=[Call(func=Name(id='min', ctx=Load()), args=[Name(id='returns', ctx=Load())], keywords=[]), Call(func=Name(id='max', ctx=Load()), args=[Name(id='returns', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='modify_reward', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='env_name'), arg(arg='max_episode_stepsjsDQt')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1000)]), body=[If(test=Call(func=Name(id='an', ctx=Load()), args=[GeneratorExp(elt=Compare(left=Name(id='_s', ctx=Load()), ops=[In()], comparators=[Name(id='env_name', ctx=Load())]), generators=[comprehension(target=Name(id='_s', ctx=Store()), iter=Tuple(elts=[Constant(value='halfcheetah'), Constant(value='hopper'), Constant(value='walker2d')], ctx=Load()), ifs=[], is_async=0)])], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='min_retqQxl', ctx=Store()), Name(id='max_ret', ctx=Store())], ctx=Store())], value=Call(func=Name(id='return_reward_range', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Name(id='max_episode_stepsjsDQt', ctx=Load())], keywords=[])), AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Div(), value=BinOp(left=Name(id='max_ret', ctx=Load()), op=Sub(), right=Name(id='min_retqQxl', ctx=Load()))), AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Mult(), value=Name(id='max_episode_stepsjsDQt', ctx=Load()))], orelse=[If(test=Compare(left=Constant(value='antmaze'), ops=[In()], comparators=[Name(id='env_name', ctx=Load())]), body=[AugAssign(target=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store()), op=Sub(), value=Constant(value=1.0))], orelse=[])])], decorator_list=[]), FunctionDef(name='train', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='TrainConfig', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ɎϘ δ   k γ̵Ⱦcß  ɪ  ̻)    ͩ\x97  ')), Expr(value=Call(func=Name(id='set_seed', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='train_seed', ctx=Load())], keywords=[keyword(arg='deterministic_torch', value=Attribute(value=Name(id='config', ctx=Load()), attr='deterministic_torch', ctx=Load()))])), Expr(value=Call(func=Name(id='wandb_init', ctx=Load()), args=[Call(func=Name(id='asdict', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='eval_env', ctx=Store())], value=Call(func=Name(id='wrap_env', ctx=Load()), args=[Call(func=Attribute(value=Name(id='gym', ctx=Load()), attr='make', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='state_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='eval_env', ctx=Load()), attr='observation_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='action_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='eval_env', ctx=Load()), attr='action_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='d4rl_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='d4rl', ctx=Load()), attr='qlearning_dataset', ctx=Load()), args=[Name(id='eval_env', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='config', ctx=Load()), attr='normalize_reward', ctx=Load()), body=[Expr(value=Call(func=Name(id='modify_reward', ctx=Load()), args=[Name(id='d4rl_dataset', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='buffer', ctx=Store())], value=Call(func=Name(id='ReplayBuffer', ctx=Load()), args=[], keywords=[keyword(arg='state_dim', value=Name(id='state_dim', ctx=Load())), keyword(arg='action_dim', value=Name(id='action_dim', ctx=Load())), keyword(arg='buffer_size', value=Attribute(value=Name(id='config', ctx=Load()), attr='buffer_size', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='load_d4rl_dataset', ctx=Load()), args=[Name(id='d4rl_dataset', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor', ctx=Store())], value=Call(func=Name(id='Actor', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Name(id='action_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='hidden_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='max_action', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='actor_learning_rate', ctx=Load()))])), Assign(targets=[Name(id='critic', ctx=Store())], value=Call(func=Name(id='VectorizedCritic', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Name(id='action_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='hidden_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='num_critics', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='critic', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='critic_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='critic', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='critic_learning_rate', ctx=Load()))])), Assign(targets=[Name(id='trainer', ctx=Store())], value=Call(func=Name(id='EDAC', ctx=Load()), args=[], keywords=[keyword(arg='actor', value=Name(id='actor', ctx=Load())), keyword(arg='actor_optimizer', value=Name(id='actor_optimizer', ctx=Load())), keyword(arg='critic', value=Name(id='critic', ctx=Load())), keyword(arg='critic_optimizer', value=Name(id='critic_optimizer', ctx=Load())), keyword(arg='gamma', value=Attribute(value=Name(id='config', ctx=Load()), attr='gamma', ctx=Load())), keyword(arg='tau', value=Attribute(value=Name(id='config', ctx=Load()), attr='tau', ctx=Load())), keyword(arg='eta', value=Attribute(value=Name(id='config', ctx=Load()), attr='eta', ctx=Load())), keyword(arg='alpha_learning_rate', value=Attribute(value=Name(id='config', ctx=Load()), attr='alpha_learning_rate', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Checkpoints path: '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='config.yaml')], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='f', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Name(id='total_updates', ctx=Store())], value=Constant(value=0.0)), For(target=Name(id='epoch', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='num_epochs', ctx=Load())], keywords=[keyword(arg='desc', value=Constant(value='Training'))]), body=[For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='num_updates_on_epoch', ctx=Load())], keywords=[keyword(arg='desc', value=Constant(value='Epoch')), keyword(arg='leave', value=Constant(value=False))]), body=[Assign(targets=[Name(id='batchVlpWh', ctx=Store())], value=Call(func=Attribute(value=Name(id='buffer', ctx=Load()), attr='sample', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[])), Assign(targets=[Name(id='update_info', ctx=Store())], value=Call(func=Attribute(value=Name(id='trainer', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='batchVlpWh', ctx=Load())], keywords=[])), If(test=Compare(left=BinOp(left=Name(id='total_updates', ctx=Load()), op=Mod(), right=Attribute(value=Name(id='config', ctx=Load()), attr='log_every', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[Constant(value='epoch'), None], values=[Name(id='epoch', ctx=Load()), Name(id='update_info', ctx=Load())])], keywords=[]))], orelse=[]), AugAssign(target=Name(id='total_updates', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=BinOp(left=Name(id='epoch', ctx=Load()), op=Mod(), right=Attribute(value=Name(id='config', ctx=Load()), attr='eval_every', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Name(id='epoch', ctx=Load()), ops=[Eq()], comparators=[BinOp(left=Attribute(value=Name(id='config', ctx=Load()), attr='num_epochs', ctx=Load()), op=Sub(), right=Constant(value=1))])]), body=[Assign(targets=[Name(id='eval_returnsTBT', ctx=Store())], value=Call(func=Name(id='eval_actorRizq', ctx=Load()), args=[], keywords=[keyword(arg='env', value=Name(id='eval_env', ctx=Load())), keyword(arg='actor', value=Name(id='actor', ctx=Load())), keyword(arg='n_episodes', value=Attribute(value=Name(id='config', ctx=Load()), attr='eval_episodes', ctx=Load())), keyword(arg='seed', value=Attribute(value=Name(id='config', ctx=Load()), attr='eval_seed', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load()))])), Assign(targets=[Name(id='eval_log', ctx=Store())], value=Dict(keys=[Constant(value='eval/reward_mean'), Constant(value='eval/reward_std'), Constant(value='epoch')], values=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='eval_returnsTBT', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='std', ctx=Load()), args=[Name(id='eval_returnsTBT', ctx=Load())], keywords=[]), Name(id='epoch', ctx=Load())])), If(test=Call(func=Name(id='hasattr', ctx=Load()), args=[Name(id='eval_env', ctx=Load()), Constant(value='get_normalized_score')], keywords=[]), body=[Assign(targets=[Name(id='normalized_score', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='eval_env', ctx=Load()), attr='get_normalized_score', ctx=Load()), args=[Name(id='eval_returnsTBT', ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=100.0))), Assign(targets=[Subscript(value=Name(id='eval_log', ctx=Load()), slice=Constant(value='eval/normalized_score_mean'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='normalized_score', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='eval_log', ctx=Load()), slice=Constant(value='eval/normalized_score_std'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='std', ctx=Load()), args=[Name(id='normalized_score', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Name(id='eval_log', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='save', ctx=Load()), args=[Call(func=Attribute(value=Name(id='trainer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), JoinedStr(values=[FormattedValue(value=Name(id='epoch', ctx=Load()), conversion=-1), Constant(value='.pt')])], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='finish', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='wrap', ctx=Load()), args=[], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='train', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])