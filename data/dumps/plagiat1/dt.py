Module(body=[ImportFrom(module='typing', names=[alias(name='Any'), alias(name='DefaultDict'), alias(name='Dict'), alias(name='List'), alias(name='Optional'), alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='collections', names=[alias(name='defaultdict')], level=0), Import(names=[alias(name='os')]), ImportFrom(module='dataclasses', names=[alias(name='asdict'), alias(name='dataclass')], level=0), Import(names=[alias(name='random')]), Import(names=[alias(name='uuid')]), Import(names=[alias(name='d4rl')]), Import(names=[alias(name='gym')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pyrallis')]), Import(names=[alias(name='torch')]), Import(names=[alias(name='torch.nn', asname='nn')]), ImportFrom(module='torch.nn', names=[alias(name='functional', asname='F')], level=0), ImportFrom(module='torch.utils.data', names=[alias(name='DataLoader'), alias(name='IterableDataset')], level=0), ImportFrom(module='tqdm.auto', names=[alias(name='tqdm'), alias(name='trange')], level=0), Import(names=[alias(name='wandb')]), ClassDef(name='TrainConfig', bases=[], keywords=[], body=[Expr(value=Constant(value=' ~ %')), AnnAssign(target=Name(id='project', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='CORL'), simple=1), AnnAssign(target=Name(id='group', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='DT-D4RL'), simple=1), AnnAssign(target=Name(id='name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='DT'), simple=1), AnnAssign(target=Name(id='embedding_dim', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=128), simple=1), AnnAssign(target=Name(id='num_layers', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=3), simple=1), AnnAssign(target=Name(id='num_heads', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1), simple=1), AnnAssign(target=Name(id='seq_len', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=20), simple=1), AnnAssign(target=Name(id='episode', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000), simple=1), AnnAssign(target=Name(id='attenti_on_dropout', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.1), simple=1), AnnAssign(target=Name(id='residual_dropout', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.1), simple=1), AnnAssign(target=Name(id='embedding_dropout', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.1), simple=1), AnnAssign(target=Name(id='max_action', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=1.0), simple=1), AnnAssign(target=Name(id='env_name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='halfcheetah-medium-v2'), simple=1), AnnAssign(target=Name(id='learning_rate', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.0001), simple=1), AnnAssign(target=Name(id='betas', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='flo', ctx=Load()), Name(id='flo', ctx=Load())], ctx=Load()), ctx=Load()), value=Tuple(elts=[Constant(value=0.9), Constant(value=0.999)], ctx=Load()), simple=1), AnnAssign(target=Name(id='weight_decay', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.0001), simple=1), AnnAssign(target=Name(id='clip_grad', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='flo', ctx=Load()), ctx=Load()), value=Constant(value=0.25), simple=1), AnnAssign(target=Name(id='batch_si', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=64), simple=1), AnnAssign(target=Name(id='upda', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=100000), simple=1), AnnAssign(target=Name(id='warmup_steps', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10000), simple=1), AnnAssign(target=Name(id='reward_scale', ctx=Store()), annotation=Name(id='flo', ctx=Load()), value=Constant(value=0.001), simple=1), AnnAssign(target=Name(id='num_workers', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=4), simple=1), AnnAssign(target=Name(id='target_returns', ctx=Store()), annotation=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='flo', ctx=Load()), Constant(value=Ellipsis)], ctx=Load()), ctx=Load()), value=Tuple(elts=[Constant(value=12000.0), Constant(value=6000.0)], ctx=Load()), simple=1), AnnAssign(target=Name(id='eval_episodes', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=100), simple=1), AnnAssign(target=Name(id='eval_ever', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10000), simple=1), AnnAssign(target=Name(id='checkpoints_path', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), AnnAssign(target=Name(id='deterministic_torc', ctx=Store()), annotation=Name(id='b_ool', ctx=Load()), value=Constant(value=False), simple=1), AnnAssign(target=Name(id='train_seed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='eval_seed', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=42), simple=1), AnnAssign(target=Name(id='device', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='cuda'), simple=1), FunctionDef(name='__post_init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='env_name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Subscript(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Slice(upper=Constant(value=8)), ctx=Load()), conversion=-1)])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[Name(id='dataclass', ctx=Load())]), FunctionDef(name='set_seed', args=arguments(posonlyargs=[], args=[arg(arg='seed', annotation=Name(id='int', ctx=Load())), arg(arg='env', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load()), ctx=Load())), arg(arg='deterministic_torc', annotation=Name(id='b_ool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[Expr(value=Constant(value='     ͡   Δȍ  Ž ')), If(test=Compare(left=Name(id='env', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='action_space', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PYTHONHASHSEED'), ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='manual_seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='use_deterministic_algorithms', ctx=Load()), args=[Name(id='deterministic_torc', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='wandb_init', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='dict', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ')), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='init', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='project', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='project'), ctx=Load())), keyword(arg='group', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='group'), ctx=Load())), keyword(arg='name', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='name'), ctx=Load())), keyword(arg='id', value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wandb', ctx=Load()), attr='run', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='wrap_env', args=arguments(posonlyargs=[], args=[arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='state_mean', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='flo', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='state_std', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='flo', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='reward_scale', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.0), Constant(value=1.0), Constant(value=1.0)]), body=[Expr(value=Constant(value='  ')), FunctionDef(name='normalize_state', args=arguments(posonlyargs=[], args=[arg(arg='state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=BinOp(left=Name(id='state', ctx=Load()), op=Sub(), right=Name(id='state_mean', ctx=Load())), op=Div(), right=Name(id='state_std', ctx=Load())))], decorator_list=[]), FunctionDef(name='scale_reward', args=arguments(posonlyargs=[], args=[arg(arg='reward')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Name(id='reward_scale', ctx=Load()), op=Mult(), right=Name(id='reward', ctx=Load())))], decorator_list=[]), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformObservation', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='normalize_state', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='reward_scale', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1.0)]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformReward', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='scale_reward', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='env', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), FunctionDef(name='pad_along_axis', args=arguments(posonlyargs=[], args=[arg(arg='arr', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='pad_t', annotation=Name(id='int', ctx=Load())), arg(arg='axisG', annotation=Name(id='int', ctx=Load())), arg(arg='fill_value', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0), Constant(value=0.0)]), body=[Expr(value=Constant(value=' ŷ ͚ ̤  ľ  ÿ  δͲ˹ ɓϹ')), Assign(targets=[Name(id='pad_size', ctx=Store())], value=BinOp(left=Name(id='pad_t', ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='arr', ctx=Load()), attr='shape', ctx=Load()), slice=Name(id='axisG', ctx=Load()), ctx=Load()))), If(test=Compare(left=Name(id='pad_size', ctx=Load()), ops=[LtE()], comparators=[Constant(value=0)]), body=[Return(value=Name(id='arr', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='npad', ctx=Store())], value=BinOp(left=List(elts=[Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load())], ctx=Load()), op=Mult(), right=Attribute(value=Name(id='arr', ctx=Load()), attr='ndim', ctx=Load()))), Assign(targets=[Subscript(value=Name(id='npad', ctx=Load()), slice=Name(id='axisG', ctx=Load()), ctx=Store())], value=Tuple(elts=[Constant(value=0), Name(id='pad_size', ctx=Load())], ctx=Load())), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='pad', ctx=Load()), args=[Name(id='arr', ctx=Load())], keywords=[keyword(arg='pad_width', value=Name(id='npad', ctx=Load())), keyword(arg='mode', value=Constant(value='constant')), keyword(arg='constant_values', value=Name(id='fill_value', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='discounted_cumsum', args=arguments(posonlyargs=[], args=[arg(arg='x', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='gamma', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' \x95Ø  ')), Assign(targets=[Name(id='cumsum', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='cumsum', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Store())], value=Subscript(value=Name(id='x', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), For(target=Name(id='t', ctx=Store()), iter=Call(func=Name(id='reversed', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='x', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='cumsum', ctx=Load()), slice=Name(id='t', ctx=Load()), ctx=Store())], value=BinOp(left=Subscript(value=Name(id='x', ctx=Load()), slice=Name(id='t', ctx=Load()), ctx=Load()), op=Add(), right=BinOp(left=Name(id='gamma', ctx=Load()), op=Mult(), right=Subscript(value=Name(id='cumsum', ctx=Load()), slice=BinOp(left=Name(id='t', ctx=Load()), op=Add(), right=Constant(value=1)), ctx=Load()))))], orelse=[]), Return(value=Name(id='cumsum', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='load_d4rl_trajectories', args=arguments(posonlyargs=[], args=[arg(arg='env_name', annotation=Name(id='str', ctx=Load())), arg(arg='gamma', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1.0)]), body=[Expr(value=Constant(value=' ɽ ȖωήϏ  ǫ ˊ')), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='gym', ctx=Load()), attr='make', ctx=Load()), args=[Name(id='env_name', ctx=Load())], keywords=[]), attr='get_dataset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='traj', ctx=Store()), Name(id='traj_len', ctx=Store())], ctx=Store())], value=Tuple(elts=[List(elts=[], ctx=Load()), List(elts=[], ctx=Load())], ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='data_', ctx=Store()), Name(id='episode_step', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Name(id='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[]), Constant(value=0)], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Subscript(value=Attribute(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[keyword(arg='desc', value=Constant(value='Processing trajectories'))]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='data_', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='data_', ctx=Load()), slice=Constant(value='actions'), ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='actions'), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='data_', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())], keywords=[])), If(test=BoolOp(op=Or(), values=[Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='timeouts'), ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())]), body=[Assign(targets=[Name(id='episode_data', ctx=Store())], value=DictComp(key=Name(id='k', ctx=Load()), value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='v', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load()))]), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='data_', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assign(targets=[Subscript(value=Name(id='episode_data', ctx=Load()), slice=Constant(value='returns'), ctx=Store())], value=Call(func=Name(id='discounted_cumsum', ctx=Load()), args=[Subscript(value=Name(id='episode_data', ctx=Load()), slice=Constant(value='rewards'), ctx=Load())], keywords=[keyword(arg='gamma', value=Name(id='gamma', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='traj', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='episode_data', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='traj_len', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='episode_step', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='data_', ctx=Store()), Name(id='episode_step', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Name(id='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[]), Constant(value=0)], ctx=Load()))], orelse=[]), AugAssign(target=Name(id='episode_step', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[]), Assign(targets=[Name(id='info', ctx=Store())], value=Dict(keys=[Constant(value='obs_mean'), Constant(value='obs_std'), Constant(value='traj_lens')], values=[Call(func=Attribute(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='mean', ctx=Load()), args=[Constant(value=0)], keywords=[keyword(arg='keepdims', value=Constant(value=True))]), BinOp(left=Call(func=Attribute(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='std', ctx=Load()), args=[Constant(value=0)], keywords=[keyword(arg='keepdims', value=Constant(value=True))]), op=Add(), right=Constant(value=1e-06)), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='traj_len', ctx=Load())], keywords=[])])), Return(value=Tuple(elts=[Name(id='traj', ctx=Load()), Name(id='info', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Subscript(value=Name(id='List', ctx=Load()), slice=Subscript(value=Name(id='DefaultDict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load()), ctx=Load()), Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), ClassDef(name='SequenceDataset', bases=[Name(id='IterableDataset', ctx=Load())], keywords=[], body=[FunctionDef(name='__iter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='ͽ\x88\x87 Ĉ   ?  ô ˍ   ')), While(test=Constant(value=True), body=[Assign(targets=[Name(id='traj_idx', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='choice', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load())], keywords=[])], keywords=[keyword(arg='p', value=Attribute(value=Name(id='self', ctx=Load()), attr='sample_prob', ctx=Load()))])), Assign(targets=[Name(id='START_IDX', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), BinOp(left=Subscript(value=Attribute(value=Subscript(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), slice=Name(id='traj_idx', ctx=Load()), ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), op=Sub(), right=Constant(value=1))], keywords=[])), Expr(value=Yield(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='__prepare_sample', ctx=Load()), args=[Name(id='traj_idx', ctx=Load()), Name(id='START_IDX', ctx=Load())], keywords=[])))], orelse=[])], decorator_list=[]), FunctionDef(name='__prepare_sample', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='traj_idx'), arg(arg='START_IDX')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='7 ')), Assign(targets=[Name(id='traj', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Load()), slice=Name(id='traj_idx', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='states', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='traj', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), slice=Slice(lower=Name(id='START_IDX', ctx=Load()), upper=BinOp(left=Name(id='START_IDX', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='actions', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='traj', ctx=Load()), slice=Constant(value='actions'), ctx=Load()), slice=Slice(lower=Name(id='START_IDX', ctx=Load()), upper=BinOp(left=Name(id='START_IDX', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='returns', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='traj', ctx=Load()), slice=Constant(value='returns'), ctx=Load()), slice=Slice(lower=Name(id='START_IDX', ctx=Load()), upper=BinOp(left=Name(id='START_IDX', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='time_steps', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='arange', ctx=Load()), args=[Name(id='START_IDX', ctx=Load()), BinOp(left=Name(id='START_IDX', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='states', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='states', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='state_mean', ctx=Load())), op=Div(), right=Attribute(value=Name(id='self', ctx=Load()), attr='state_std', ctx=Load()))), Assign(targets=[Name(id='returns', ctx=Store())], value=BinOp(left=Name(id='returns', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='reward_scale', ctx=Load()))), Assign(targets=[Name(id='_mask', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='hstack', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='states', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='states', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()))], keywords=[])], ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='states', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), ops=[Lt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load())]), body=[Assign(targets=[Name(id='states', ctx=Store())], value=Call(func=Name(id='pad_along_axis', ctx=Load()), args=[Name(id='states', ctx=Load())], keywords=[keyword(arg='pad_to', value=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))])), Assign(targets=[Name(id='actions', ctx=Store())], value=Call(func=Name(id='pad_along_axis', ctx=Load()), args=[Name(id='actions', ctx=Load())], keywords=[keyword(arg='pad_to', value=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))])), Assign(targets=[Name(id='returns', ctx=Store())], value=Call(func=Name(id='pad_along_axis', ctx=Load()), args=[Name(id='returns', ctx=Load())], keywords=[keyword(arg='pad_to', value=Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Load()))]))], orelse=[]), Return(value=Tuple(elts=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load()), Name(id='returns', ctx=Load()), Name(id='time_steps', ctx=Load()), Name(id='_mask', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='env_name', annotation=Name(id='str', ctx=Load())), arg(arg='seq_len', annotation=Name(id='int', ctx=Load())), arg(arg='reward_scale', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10), Constant(value=1.0)]), body=[Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='dataset', ctx=Store()), Name(id='info', ctx=Store())], ctx=Store())], value=Call(func=Name(id='load_d4rl_trajectories', ctx=Load()), args=[Name(id='env_name', ctx=Load())], keywords=[keyword(arg='gamma', value=Constant(value=1.0))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='reward_scale', ctx=Store())], value=Name(id='reward_scale', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Store())], value=Name(id='seq_len', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state_mean', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='obs_mean'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state_std', ctx=Store())], value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='obs_std'), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='sample_prob', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='traj_lens'), ctx=Load()), op=Div(), right=Call(func=Attribute(value=Subscript(value=Name(id='info', ctx=Load()), slice=Constant(value='traj_lens'), ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[])))], decorator_list=[])], decorator_list=[]), ClassDef(name='Transfo', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='θ  Ű  ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='seq_len', annotation=Name(id='int', ctx=Load())), arg(arg='embedding_dim', annotation=Name(id='int', ctx=Load())), arg(arg='num_heads', annotation=Name(id='int', ctx=Load())), arg(arg='attenti_on_dropout', annotation=Name(id='flo', ctx=Load())), arg(arg='residual_dropout', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ȝ ͽ @ł  Ţ\u038d   ǆ ')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='norm1', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='LayerNorm', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='norm2', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='LayerNorm', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='drop', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Dropout', ctx=Load()), args=[Name(id='residual_dropout', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='attention', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='MultiheadAttention', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load()), Name(id='num_heads', ctx=Load()), Name(id='attenti_on_dropout', ctx=Load())], keywords=[keyword(arg='batch_first', value=Constant(value=True))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='mlp', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load()), BinOp(left=Constant(value=4), op=Mult(), right=Name(id='embedding_dim', ctx=Load()))], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='GELU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[BinOp(left=Constant(value=4), op=Mult(), right=Name(id='embedding_dim', ctx=Load())), Name(id='embedding_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Dropout', ctx=Load()), args=[Name(id='residual_dropout', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='register_buffer', ctx=Load()), args=[Constant(value='causal_mask'), UnaryOp(op=Invert(), operand=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tril', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones', ctx=Load()), args=[Name(id='seq_len', ctx=Load()), Name(id='seq_len', ctx=Load())], keywords=[])], keywords=[]), attr='to', ctx=Load()), args=[Name(id='b_ool', ctx=Load())], keywords=[]))], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Store())], value=Name(id='seq_len', ctx=Load()))], decorator_list=[]), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='x', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='padding_mask', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Expr(value=Constant(value='  ')), Assign(targets=[Name(id='causal_mask', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='causal_mask', ctx=Load()), slice=Tuple(elts=[Slice(upper=Subscript(value=Attribute(value=Name(id='x', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load())), Slice(upper=Subscript(value=Attribute(value=Name(id='x', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load()))], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='norm_x', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='norm1', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[])), Assign(targets=[Name(id='attention_out', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='attention', ctx=Load()), args=[], keywords=[keyword(arg='query', value=Name(id='norm_x', ctx=Load())), keyword(arg='key', value=Name(id='norm_x', ctx=Load())), keyword(arg='value', value=Name(id='norm_x', ctx=Load())), keyword(arg='attn_mask', value=Name(id='causal_mask', ctx=Load())), keyword(arg='key_padding_mask', value=Name(id='padding_mask', ctx=Load())), keyword(arg='need_weights', value=Constant(value=False))]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='x', ctx=Store())], value=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='drop', ctx=Load()), args=[Name(id='attention_out', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='x', ctx=Store())], value=BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='mlp', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='norm2', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[])], keywords=[]))), Return(value=Name(id='x', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], decorator_list=[]), ClassDef(name='DecisionTransformer', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[FunctionDef(name='_INIT_WEIGHTS', args=arguments(posonlyargs=[], args=[arg(arg='module', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='module', ctx=Load()), Tuple(elts=[Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), Attribute(value=Name(id='nn', ctx=Load()), attr='Embedding', ctx=Load())], ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='normal_', ctx=Load()), args=[Attribute(value=Name(id='module', ctx=Load()), attr='weight', ctx=Load())], keywords=[keyword(arg='mean', value=Constant(value=0.0)), keyword(arg='std', value=Constant(value=0.02))])), If(test=BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='module', ctx=Load()), Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='module', ctx=Load()), attr='bias', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)])]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='zeros_', ctx=Load()), args=[Attribute(value=Name(id='module', ctx=Load()), attr='bias', ctx=Load())], keywords=[]))], orelse=[])], orelse=[If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='module', ctx=Load()), Attribute(value=Name(id='nn', ctx=Load()), attr='LayerNorm', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='zeros_', ctx=Load()), args=[Attribute(value=Name(id='module', ctx=Load()), attr='bias', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='init', ctx=Load()), attr='ones_', ctx=Load()), args=[Attribute(value=Name(id='module', ctx=Load()), attr='weight', ctx=Load())], keywords=[]))], orelse=[])])], decorator_list=[Name(id='stat_icmethod', ctx=Load())]), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='states', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='actions', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='returns_to_go', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='time_steps', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), arg(arg='padding_mask', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Tuple(elts=[Name(id='batch_si', ctx=Store()), Name(id='seq_len', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Attribute(value=Name(id='states', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Attribute(value=Name(id='states', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load())], ctx=Load())), Assign(targets=[Name(id='time_emb', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='timestep_emb', ctx=Load()), args=[Name(id='time_steps', ctx=Load())], keywords=[])), Assign(targets=[Name(id='state_emb', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='state_emb', ctx=Load()), args=[Name(id='states', ctx=Load())], keywords=[]), op=Add(), right=Name(id='time_emb', ctx=Load()))), Assign(targets=[Name(id='act_emb', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='action_emb', ctx=Load()), args=[Name(id='actions', ctx=Load())], keywords=[]), op=Add(), right=Name(id='time_emb', ctx=Load()))), Assign(targets=[Name(id='RETURNS_EMB', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='return_emb', ctx=Load()), args=[Call(func=Attribute(value=Name(id='returns_to_go', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])], keywords=[]), op=Add(), right=Name(id='time_emb', ctx=Load()))), Assign(targets=[Name(id='sequence', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='stack', ctx=Load()), args=[List(elts=[Name(id='RETURNS_EMB', ctx=Load()), Name(id='state_emb', ctx=Load()), Name(id='act_emb', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1))]), attr='permute', ctx=Load()), args=[Constant(value=0), Constant(value=2), Constant(value=1), Constant(value=3)], keywords=[]), attr='reshape', ctx=Load()), args=[Name(id='batch_si', ctx=Load()), BinOp(left=Constant(value=3), op=Mult(), right=Name(id='seq_len', ctx=Load())), Attribute(value=Name(id='self', ctx=Load()), attr='embedding_dim', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='padding_mask', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='padding_mask', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='stack', ctx=Load()), args=[List(elts=[Name(id='padding_mask', ctx=Load()), Name(id='padding_mask', ctx=Load()), Name(id='padding_mask', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1))]), attr='permute', ctx=Load()), args=[Constant(value=0), Constant(value=2), Constant(value=1)], keywords=[]), attr='reshape', ctx=Load()), args=[Name(id='batch_si', ctx=Load()), BinOp(left=Constant(value=3), op=Mult(), right=Name(id='seq_len', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='outEUFz', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='emb_norm', ctx=Load()), args=[Name(id='sequence', ctx=Load())], keywords=[])), Assign(targets=[Name(id='outEUFz', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='emb_drop', ctx=Load()), args=[Name(id='outEUFz', ctx=Load())], keywords=[])), For(target=Name(id='block', ctx=Store()), iter=Attribute(value=Name(id='self', ctx=Load()), attr='blocks', ctx=Load()), body=[Assign(targets=[Name(id='outEUFz', ctx=Store())], value=Call(func=Name(id='block', ctx=Load()), args=[Name(id='outEUFz', ctx=Load())], keywords=[keyword(arg='padding_mask', value=Name(id='padding_mask', ctx=Load()))]))], orelse=[]), Assign(targets=[Name(id='outEUFz', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='out_norm', ctx=Load()), args=[Name(id='outEUFz', ctx=Load())], keywords=[])), Assign(targets=[Name(id='outEUFz', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='action_head', ctx=Load()), args=[Subscript(value=Name(id='outEUFz', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=Constant(value=1), step=Constant(value=3))], ctx=Load()), ctx=Load())], keywords=[]), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='max_action', ctx=Load()))), Return(value=Name(id='outEUFz', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='FloatTensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state_di_m', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='seq_len', annotation=Name(id='int', ctx=Load())), arg(arg='episode', annotation=Name(id='int', ctx=Load())), arg(arg='embedding_dim', annotation=Name(id='int', ctx=Load())), arg(arg='num_layers', annotation=Name(id='int', ctx=Load())), arg(arg='num_heads', annotation=Name(id='int', ctx=Load())), arg(arg='attenti_on_dropout', annotation=Name(id='flo', ctx=Load())), arg(arg='residual_dropout', annotation=Name(id='flo', ctx=Load())), arg(arg='embedding_dropout', annotation=Name(id='flo', ctx=Load())), arg(arg='max_action', annotation=Name(id='flo', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10), Constant(value=1000), Constant(value=128), Constant(value=4), Constant(value=8), Constant(value=0.0), Constant(value=0.0), Constant(value=0.0), Constant(value=1.0)]), body=[Expr(value=Constant(value=' Ύ  ǅ  ')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='emb_drop', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Dropout', ctx=Load()), args=[Name(id='embedding_dropout', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='emb_norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='LayerNorm', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='out_norm', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='LayerNorm', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='timestep_emb', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Embedding', ctx=Load()), args=[BinOp(left=Name(id='episode', ctx=Load()), op=Add(), right=Name(id='seq_len', ctx=Load())), Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state_emb', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='state_di_m', ctx=Load()), Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='action_emb', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='action_dim', ctx=Load()), Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='return_emb', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Constant(value=1), Name(id='embedding_dim', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='blocks', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ModuleList', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='Transfo', ctx=Load()), args=[], keywords=[keyword(arg='seq_len', value=BinOp(left=Constant(value=3), op=Mult(), right=Name(id='seq_len', ctx=Load()))), keyword(arg='embedding_dim', value=Name(id='embedding_dim', ctx=Load())), keyword(arg='num_heads', value=Name(id='num_heads', ctx=Load())), keyword(arg='attention_dropout', value=Name(id='attenti_on_dropout', ctx=Load())), keyword(arg='residual_dropout', value=Name(id='residual_dropout', ctx=Load()))]), generators=[comprehension(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='num_layers', ctx=Load())], keywords=[]), ifs=[], is_async=0)])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='action_head', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='embedding_dim', ctx=Load()), Name(id='action_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Tanh', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='seq_len', ctx=Store())], value=Name(id='seq_len', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='embedding_dim', ctx=Store())], value=Name(id='embedding_dim', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='state_dim', ctx=Store())], value=Name(id='state_di_m', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='action_dim', ctx=Store())], value=Name(id='action_dim', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='episode_len', ctx=Store())], value=Name(id='episode', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_action', ctx=Store())], value=Name(id='max_action', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='apply', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_init_weights', ctx=Load())], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='eval_rollout', args=arguments(posonlyargs=[], args=[arg(arg='model', annotation=Name(id='DecisionTransformer', ctx=Load())), arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='target_return', annotation=Name(id='flo', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='cpu')]), body=[Expr(value=Constant(value='  ţǬ ɖ   Ɖ  ')), Assign(targets=[Name(id='states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Constant(value=1), BinOp(left=Attribute(value=Name(id='model', ctx=Load()), attr='episode_len', ctx=Load()), op=Add(), right=Constant(value=1)), Attribute(value=Name(id='model', ctx=Load()), attr='state_dim', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Name(id='actions', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Constant(value=1), Attribute(value=Name(id='model', ctx=Load()), attr='episode_len', ctx=Load()), Attribute(value=Name(id='model', ctx=Load()), attr='action_dim', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Name(id='returns', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Constant(value=1), BinOp(left=Attribute(value=Name(id='model', ctx=Load()), attr='episode_len', ctx=Load()), op=Add(), right=Constant(value=1))], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Name(id='time_steps', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='arange', ctx=Load()), args=[Attribute(value=Name(id='model', ctx=Load()), attr='episode_len', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='long', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Name(id='time_steps', ctx=Store())], value=Call(func=Attribute(value=Name(id='time_steps', ctx=Load()), attr='view', ctx=Load()), args=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Subscript(value=Name(id='states', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='as_tensor', ctx=Load()), args=[Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Subscript(value=Name(id='returns', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='as_tensor', ctx=Load()), args=[Name(id='target_return', ctx=Load())], keywords=[keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='episode_return', ctx=Store()), Name(id='episode', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0.0), Constant(value=0.0)], ctx=Load())), For(target=Name(id='step', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='model', ctx=Load()), attr='episode_len', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='predicted_actions', ctx=Store())], value=Call(func=Name(id='model', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='states', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(upper=BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=UnaryOp(op=USub(), operand=Attribute(value=Name(id='model', ctx=Load()), attr='seq_len', ctx=Load())))], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='actions', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(upper=BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=UnaryOp(op=USub(), operand=Attribute(value=Name(id='model', ctx=Load()), attr='seq_len', ctx=Load())))], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='returns', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(upper=BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=UnaryOp(op=USub(), operand=Attribute(value=Name(id='model', ctx=Load()), attr='seq_len', ctx=Load())))], ctx=Load()), ctx=Load()), Subscript(value=Subscript(value=Name(id='time_steps', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(upper=BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=UnaryOp(op=USub(), operand=Attribute(value=Name(id='model', ctx=Load()), attr='seq_len', ctx=Load())))], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='predicted_action', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Name(id='predicted_actions', ctx=Load()), slice=Tuple(elts=[Constant(value=0), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load()), ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='next_state', ctx=Store()), Name(id='reward', ctx=Store()), Name(id='done', ctx=Store()), Name(id='info', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='step', ctx=Load()), args=[Name(id='predicted_action', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='actions', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='step', ctx=Load())], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='as_tensor', ctx=Load()), args=[Name(id='predicted_action', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='states', ctx=Load()), slice=Tuple(elts=[Slice(), BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='as_tensor', ctx=Load()), args=[Name(id='next_state', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='returns', ctx=Load()), slice=Tuple(elts=[Slice(), BinOp(left=Name(id='step', ctx=Load()), op=Add(), right=Constant(value=1))], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='as_tensor', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='returns', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='step', ctx=Load())], ctx=Load()), ctx=Load()), op=Sub(), right=Name(id='reward', ctx=Load()))], keywords=[])), AugAssign(target=Name(id='episode_return', ctx=Store()), op=Add(), value=Name(id='reward', ctx=Load())), AugAssign(target=Name(id='episode', ctx=Store()), op=Add(), value=Constant(value=1)), If(test=Name(id='done', ctx=Load()), body=[Break()], orelse=[])], orelse=[]), Return(value=Tuple(elts=[Name(id='episode_return', ctx=Load()), Name(id='episode', ctx=Load())], ctx=Load()))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Name(id='flo', ctx=Load()), Name(id='flo', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='train', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='TrainConfig', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ̌ ')), Expr(value=Call(func=Name(id='set_seed', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='train_seed', ctx=Load())], keywords=[keyword(arg='deterministic_torch', value=Attribute(value=Name(id='config', ctx=Load()), attr='deterministic_torch', ctx=Load()))])), Expr(value=Call(func=Name(id='wandb_init', ctx=Load()), args=[Call(func=Name(id='asdict', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Name(id='SequenceDataset', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[keyword(arg='seq_len', value=Attribute(value=Name(id='config', ctx=Load()), attr='seq_len', ctx=Load())), keyword(arg='reward_scale', value=Attribute(value=Name(id='config', ctx=Load()), attr='reward_scale', ctx=Load()))])), Assign(targets=[Name(id='trainloader', ctx=Store())], value=Call(func=Name(id='DataLoader', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[keyword(arg='batch_size', value=Attribute(value=Name(id='config', ctx=Load()), attr='batch_size', ctx=Load())), keyword(arg='pin_memory', value=Constant(value=True)), keyword(arg='num_workers', value=Attribute(value=Name(id='config', ctx=Load()), attr='num_workers', ctx=Load()))])), Assign(targets=[Name(id='eva_l_env', ctx=Store())], value=Call(func=Name(id='wrap_env', ctx=Load()), args=[], keywords=[keyword(arg='env', value=Call(func=Attribute(value=Name(id='gym', ctx=Load()), attr='make', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='env_name', ctx=Load())], keywords=[])), keyword(arg='state_mean', value=Attribute(value=Name(id='dataset', ctx=Load()), attr='state_mean', ctx=Load())), keyword(arg='state_std', value=Attribute(value=Name(id='dataset', ctx=Load()), attr='state_std', ctx=Load())), keyword(arg='reward_scale', value=Attribute(value=Name(id='config', ctx=Load()), attr='reward_scale', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='config', ctx=Load()), attr='state_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='eva_l_env', ctx=Load()), attr='observation_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Attribute(value=Name(id='config', ctx=Load()), attr='action_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='eva_l_env', ctx=Load()), attr='action_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='model', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='DecisionTransformer', ctx=Load()), args=[], keywords=[keyword(arg='state_dim', value=Attribute(value=Name(id='config', ctx=Load()), attr='state_dim', ctx=Load())), keyword(arg='action_dim', value=Attribute(value=Name(id='config', ctx=Load()), attr='action_dim', ctx=Load())), keyword(arg='embedding_dim', value=Attribute(value=Name(id='config', ctx=Load()), attr='embedding_dim', ctx=Load())), keyword(arg='seq_len', value=Attribute(value=Name(id='config', ctx=Load()), attr='seq_len', ctx=Load())), keyword(arg='episode_len', value=Attribute(value=Name(id='config', ctx=Load()), attr='episode_len', ctx=Load())), keyword(arg='num_layers', value=Attribute(value=Name(id='config', ctx=Load()), attr='num_layers', ctx=Load())), keyword(arg='num_heads', value=Attribute(value=Name(id='config', ctx=Load()), attr='num_heads', ctx=Load())), keyword(arg='attention_dropout', value=Attribute(value=Name(id='config', ctx=Load()), attr='attention_dropout', ctx=Load())), keyword(arg='residual_dropout', value=Attribute(value=Name(id='config', ctx=Load()), attr='residual_dropout', ctx=Load())), keyword(arg='embedding_dropout', value=Attribute(value=Name(id='config', ctx=Load()), attr='embedding_dropout', ctx=Load())), keyword(arg='max_action', value=Attribute(value=Name(id='config', ctx=Load()), attr='max_action', ctx=Load()))]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='optim', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='AdamW', ctx=Load()), args=[Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Attribute(value=Name(id='config', ctx=Load()), attr='learning_rate', ctx=Load())), keyword(arg='weight_decay', value=Attribute(value=Name(id='config', ctx=Load()), attr='weight_decay', ctx=Load())), keyword(arg='betas', value=Attribute(value=Name(id='config', ctx=Load()), attr='betas', ctx=Load()))])), Assign(targets=[Name(id='scheduler', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='lr_scheduler', ctx=Load()), attr='LambdaLR', ctx=Load()), args=[Name(id='optim', ctx=Load()), Lambda(args=arguments(posonlyargs=[], args=[arg(arg='steps')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Name(id='min', ctx=Load()), args=[BinOp(left=BinOp(left=Name(id='steps', ctx=Load()), op=Add(), right=Constant(value=1)), op=Div(), right=Attribute(value=Name(id='config', ctx=Load()), attr='warmup_steps', ctx=Load())), Constant(value=1)], keywords=[]))], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Checkpoints path: '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='config.yaml')], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='f', ctx=Load())], keywords=[]))])], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Total parameters: '), FormattedValue(value=Call(func=Name(id='sum', ctx=Load()), args=[GeneratorExp(elt=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='numel', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[]), conversion=-1)])], keywords=[])), Assign(targets=[Name(id='trainloader_iter', ctx=Store())], value=Call(func=Name(id='iter', ctx=Load()), args=[Name(id='trainloader', ctx=Load())], keywords=[])), For(target=Name(id='step', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='update_steps', ctx=Load())], keywords=[keyword(arg='desc', value=Constant(value='Training'))]), body=[Assign(targets=[Name(id='batch', ctx=Store())], value=Call(func=Name(id='next', ctx=Load()), args=[Name(id='trainloader_iter', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='states', ctx=Store()), Name(id='actions', ctx=Store()), Name(id='returns', ctx=Store()), Name(id='time_steps', ctx=Store()), Name(id='_mask', ctx=Store())], ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='b', ctx=Store()), iter=Name(id='batch', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='padding_mask', ctx=Store())], value=UnaryOp(op=Invert(), operand=Call(func=Attribute(value=Name(id='_mask', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='torch', ctx=Load()), attr='bool', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='predicted_actions', ctx=Store())], value=Call(func=Name(id='model', ctx=Load()), args=[], keywords=[keyword(arg='states', value=Name(id='states', ctx=Load())), keyword(arg='actions', value=Name(id='actions', ctx=Load())), keyword(arg='returns_to_go', value=Name(id='returns', ctx=Load())), keyword(arg='time_steps', value=Name(id='time_steps', ctx=Load())), keyword(arg='padding_mask', value=Name(id='padding_mask', ctx=Load()))])), Assign(targets=[Name(id='lossdjZ', ctx=Store())], value=Call(func=Attribute(value=Name(id='F', ctx=Load()), attr='mse_loss', ctx=Load()), args=[Name(id='predicted_actions', ctx=Load()), Call(func=Attribute(value=Name(id='actions', ctx=Load()), attr='detach', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='reduction', value=Constant(value='none'))])), Assign(targets=[Name(id='lossdjZ', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=Name(id='lossdjZ', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='_mask', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), attr='mean', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='optim', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='lossdjZ', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='clip_grad', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='utils', ctx=Load()), attr='clip_grad_norm_', ctx=Load()), args=[Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='config', ctx=Load()), attr='clip_grad', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='optim', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='scheduler', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[Constant(value='train_loss'), Constant(value='learning_rate')], values=[Call(func=Attribute(value=Name(id='lossdjZ', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[]), Subscript(value=Call(func=Attribute(value=Name(id='scheduler', ctx=Load()), attr='get_last_lr', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())])], keywords=[keyword(arg='step', value=Name(id='step', ctx=Load()))])), If(test=BoolOp(op=Or(), values=[Compare(left=BinOp(left=Name(id='step', ctx=Load()), op=Mod(), right=Attribute(value=Name(id='config', ctx=Load()), attr='eval_every', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0)]), Compare(left=Name(id='step', ctx=Load()), ops=[Eq()], comparators=[BinOp(left=Attribute(value=Name(id='config', ctx=Load()), attr='update_steps', ctx=Load()), op=Sub(), right=Constant(value=1))])]), body=[Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='eval', ctx=Load()), args=[], keywords=[])), For(target=Name(id='target_return', ctx=Store()), iter=Attribute(value=Name(id='config', ctx=Load()), attr='target_returns', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='eva_l_env', ctx=Load()), attr='seed', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='eval_seed', ctx=Load())], keywords=[])), Assign(targets=[Name(id='eval_returns', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='trange', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='eval_episodes', ctx=Load())], keywords=[keyword(arg='desc', value=Constant(value='Evaluation')), keyword(arg='leave', value=Constant(value=False))]), body=[Assign(targets=[Tuple(elts=[Name(id='eval_return', ctx=Store()), Name(id='eva', ctx=Store())], ctx=Store())], value=Call(func=Name(id='eval_rollout', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Name(id='model', ctx=Load())), keyword(arg='env', value=Name(id='eva_l_env', ctx=Load())), keyword(arg='target_return', value=BinOp(left=Name(id='target_return', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='config', ctx=Load()), attr='reward_scale', ctx=Load()))), keyword(arg='device', value=Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='eval_returns', ctx=Load()), attr='append', ctx=Load()), args=[BinOp(left=Name(id='eval_return', ctx=Load()), op=Div(), right=Attribute(value=Name(id='config', ctx=Load()), attr='reward_scale', ctx=Load()))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='normalized_scores', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='eva_l_env', ctx=Load()), attr='get_normalized_score', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='eval_returns', ctx=Load())], keywords=[])], keywords=[]), op=Mult(), right=Constant(value=100))), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[JoinedStr(values=[Constant(value='eval/'), FormattedValue(value=Name(id='target_return', ctx=Load()), conversion=-1), Constant(value='_return_mean')]), JoinedStr(values=[Constant(value='eval/'), FormattedValue(value=Name(id='target_return', ctx=Load()), conversion=-1), Constant(value='_return_std')]), JoinedStr(values=[Constant(value='eval/'), FormattedValue(value=Name(id='target_return', ctx=Load()), conversion=-1), Constant(value='_normalized_score_mean')]), JoinedStr(values=[Constant(value='eval/'), FormattedValue(value=Name(id='target_return', ctx=Load()), conversion=-1), Constant(value='_normalized_score_std')])], values=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='eval_returns', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='std', ctx=Load()), args=[Name(id='eval_returns', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='normalized_scores', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='std', ctx=Load()), args=[Name(id='normalized_scores', ctx=Load())], keywords=[])])], keywords=[keyword(arg='step', value=Name(id='step', ctx=Load()))]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='train', ctx=Load()), args=[], keywords=[]))], orelse=[])], orelse=[]), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='checkpoint', ctx=Store())], value=Dict(keys=[Constant(value='model_state'), Constant(value='state_mean'), Constant(value='state_std')], values=[Call(func=Attribute(value=Name(id='model', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='dataset', ctx=Load()), attr='state_mean', ctx=Load()), Attribute(value=Name(id='dataset', ctx=Load()), attr='state_std', ctx=Load())])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='checkpoint', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='dt_checkpoint.pt')], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='wrap', ctx=Load()), args=[], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='train', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])