Module(body=[Import(names=[alias(name='argparse')]), Import(names=[alias(name='tempfile')]), ImportFrom(module='collections', names=[alias(name='defaultdict')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='tqdm', names=[alias(name='tqdm')], level=0), ImportFrom(module='probabilistic_embeddings.runner', names=[alias(name='Runner')], level=0), ImportFrom(module='catalyst.utils.torch', names=[alias(name='any2device')], level=0), ImportFrom(module='probabilistic_embeddings.config', names=[alias(name='read_config'), alias(name='update_config')], level=0), ImportFrom(module='catalyst.utils.misc', names=[alias(name='maybe_recursive_call')], level=0), ClassDef(name='NoLogRunner', bases=[Name(id='Runner', ctx=Load())], keywords=[], body=[FunctionDef(name='get_loggers', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ȟ   Ȼ    ʉ    ϑ ')), Return(value=Dict(keys=[], values=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='parse_arguments', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='pars_er', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[Constant(value='Predict embeddings, logits or dump helper tensors. Run without `outputs` to list valid output keys.')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='data')], keywords=[keyword(arg='help', value=Constant(value='Path to dataset root'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset')], keywords=[keyword(arg='help', value=Constant(value='Name of the dataset. If not provided, list available datasets.'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--config')], keywords=[keyword(arg='help', value=Constant(value='Path to training config'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--checkpoint')], keywords=[keyword(arg='help', value=Constant(value='Path to initial checkpoint'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--outputs')], keywords=[keyword(arg='help', value=Constant(value='A list of tensor_key:filename with output files. If not provided, list valid keys.')), keyword(arg='nargs', value=Constant(value='+'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--augment-train')], keywords=[keyword(arg='help', value=Constant(value='Augment training set')), keyword(arg='action', value=Constant(value='store_true'))])), Expr(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num-batches')], keywords=[keyword(arg='help', value=Constant(value='Limit the number of batches to evaluate')), keyword(arg='type', value=Name(id='int', ctx=Load()))])), Return(value=Call(func=Attribute(value=Name(id='pars_er', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='init_runner', args=arguments(posonlyargs=[], args=[arg(arg='root'), arg(arg='args')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='is_train', ctx=Store())], value=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train')])), Assign(targets=[Name(id='config', ctx=Store())], value=IfExp(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='read_config', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='config', ctx=Load())], keywords=[]), orelse=Dict(keys=[], values=[]))), Assign(targets=[Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='stage_resume'), ctx=Store())], value=Constant(value=None)), Assign(targets=[Name(id='patch', ctx=Store())], value=Dict(keys=[Constant(value='dataset_params')], values=[Dict(keys=[Constant(value='samples_per_class'), Constant(value='shuffle_train')], values=[Constant(value=None), Constant(value=False)])])), Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Name(id='update_config', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='patch', ctx=Load())], keywords=[])), Assign(targets=[Name(id='runner', ctx=Store())], value=Call(func=Name(id='NoLogRunner', ctx=Load()), args=[], keywords=[keyword(arg='root', value=Name(id='root', ctx=Load())), keyword(arg='data_root', value=Attribute(value=Name(id='args', ctx=Load()), attr='data', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='runner', ctx=Load()), attr='_stage', ctx=Store())], value=IfExp(test=Name(id='is_train', ctx=Load()), body=Attribute(value=Name(id='runner', ctx=Load()), attr='STAGE_TRAIN', ctx=Load()), orelse=Attribute(value=Name(id='runner', ctx=Load()), attr='STAGE_TEST', ctx=Load()))), Assign(targets=[Attribute(value=Name(id='runner', ctx=Load()), attr='stage_key', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='stages', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='_run_event', ctx=Load()), args=[Constant(value='on_experiment_start')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='_run_event', ctx=Load()), args=[Constant(value='on_stage_start')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='_run_event', ctx=Load()), args=[Constant(value='on_epoch_start')], keywords=[])), Assign(targets=[Attribute(value=Name(id='runner', ctx=Load()), attr='loader_key', ctx=Store())], value=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load())), Assign(targets=[Name(id='loaderseC', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='datasets', ctx=Load()), attr='get_loaders', ctx=Load()), args=[], keywords=[keyword(arg='train', value=Name(id='is_train', ctx=Load())), keyword(arg='augment_train', value=Attribute(value=Name(id='args', ctx=Load()), attr='augment_train', ctx=Load()))])), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), ops=[NotIn()], comparators=[Name(id='loaderseC', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='loaderseC', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='datasets', ctx=Load()), attr='get_loaders', ctx=Load()), args=[], keywords=[keyword(arg='train', value=UnaryOp(op=Invert(), operand=Name(id='is_train', ctx=Load())))])], keywords=[])), Raise(exc=Call(func=Name(id='valueerror', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Available datasets are: {}.'), attr='format', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), Call(func=Name(id='list', ctx=Load()), args=[Name(id='loaderseC', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='runner', ctx=Load()), attr='loader', ctx=Store())], value=Subscript(value=Name(id='loaderseC', ctx=Load()), slice=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='_run_event', ctx=Load()), args=[Constant(value='on_loader_start')], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='checkpoint', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='load', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Load())], keywords=[keyword(arg='map_location', value=Constant(value='cpu'))]), slice=Constant(value='model_model_state_dict'), ctx=Load())), Expr(value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), slice=Constant(value='model'), ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Name(id='checkpoint', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='engine', ctx=Load()), attr='sync_device', ctx=Load()), args=[], keywords=[keyword(arg='tensor_or_module', value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()))])), Expr(value=Call(func=Name(id='maybe_recursive_call', ctx=Load()), args=[Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), Constant(value='train')], keywords=[keyword(arg='mode', value=Constant(value=False))])), Return(value=Name(id='runner', ctx=Load()))], decorator_list=[]), FunctionDef(name='use_grad', args=arguments(posonlyargs=[], args=[arg(arg='mode')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Name(id='mode', ctx=Load()), body=[Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='enable_grad', ctx=Load()), args=[], keywords=[]))], orelse=[Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))])], decorator_list=[]), FunctionDef(name='model_hash', args=arguments(posonlyargs=[], args=[arg(arg='runner')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='hash', ctx=Store())], value=Constant(value=0)), For(target=Name(id='p', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), slice=Constant(value='model'), ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), body=[AugAssign(target=Name(id='hash', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='p', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='hash', ctx=Load()))], decorator_list=[]), FunctionDef(name='main', args=arguments(posonlyargs=[], args=[arg(arg='args')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='is_train', ctx=Store())], value=Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), ops=[Eq()], comparators=[Constant(value='train')])), Assign(targets=[Name(id='output_files', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Name(id='output', ctx=Store()), iter=BoolOp(op=Or(), values=[Attribute(value=Name(id='args', ctx=Load()), attr='outputs', ctx=Load()), List(elts=[], ctx=Load())]), body=[Assign(targets=[Tuple(elts=[Name(id='ke', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='output', ctx=Load()), attr='split', ctx=Load()), args=[Constant(value=':')], keywords=[])), If(test=Compare(left=Name(id='ke', ctx=Load()), ops=[In()], comparators=[Name(id='output_files', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='valueerror', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Multiple files for {}'), attr='format', ctx=Load()), args=[Name(id='ke', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Name(id='output_files', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Store())], value=Name(id='filename', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='need_gradients', ctx=Store())], value=Compare(left=Constant(value='gradnorms'), ops=[In()], comparators=[Name(id='output_files', ctx=Load())])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='runner', ctx=Store())], value=Call(func=Name(id='init_runner', ctx=Load()), args=[Name(id='root', ctx=Load()), Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Name(id='hash_before', ctx=Store())], value=Call(func=Name(id='model_hash', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='callbacks', ctx=Load()), attr='pop', ctx=Load()), args=[Constant(value='optimizer'), Constant(value=None)], keywords=[])), Assign(targets=[Name(id='ou', ctx=Store())], value=Call(func=Name(id='defaultdict', ctx=Load()), args=[Name(id='list', ctx=Load())], keywords=[])), Assign(targets=[Name(id='key_suffix', ctx=Store())], value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='get_loader_suffix', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='use_grad', ctx=Load()), args=[Name(id='need_gradients', ctx=Load())], keywords=[]))], body=[For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='batch', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='tqdm', ctx=Load()), args=[Call(func=Name(id='enumerate', ctx=Load()), args=[Attribute(value=Name(id='runner', ctx=Load()), attr='loader', ctx=Load())], keywords=[])], keywords=[]), body=[If(test=BoolOp(op=And(), values=[Compare(left=Attribute(value=Name(id='args', ctx=Load()), attr='num_batches', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), Compare(left=Name(id='i', ctx=Load()), ops=[GtE()], comparators=[Attribute(value=Name(id='args', ctx=Load()), attr='num_batches', ctx=Load())])]), body=[Break()], orelse=[]), Assign(targets=[Attribute(value=Name(id='runner', ctx=Load()), attr='batch', ctx=Store())], value=Name(id='batch', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='runner', ctx=Load()), attr='_run_batch', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='re_sults', ctx=Store())], value=Attribute(value=Name(id='runner', ctx=Load()), attr='batch_metrics', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='re_sults', ctx=Load()), attr='update', ctx=Load()), args=[Attribute(value=Name(id='runner', ctx=Load()), attr='batch', ctx=Load())], keywords=[])), Assign(targets=[Name(id='distribution', ctx=Store())], value=Attribute(value=Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), slice=Constant(value='model'), ctx=Load()), attr='distribution', ctx=Load())), Assign(targets=[Name(id='batch_size', ctx=Store())], value=Call(func=Name(id='len', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='batch', ctx=Load()), slice=BinOp(left=Constant(value='labels'), op=Add(), right=Name(id='key_suffix', ctx=Load())), ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='distribution', ctx=Load()), attr='has_confidences', ctx=Load()), body=[For(target=Name(id='suffix', ctx=Store()), iter=List(elts=[Constant(value=''), Constant(value='1'), Constant(value='2')], ctx=Load()), body=[If(test=Compare(left=BinOp(left=BinOp(left=Constant(value='embeddings'), op=Add(), right=Name(id='suffix', ctx=Load())), op=Add(), right=Name(id='key_suffix', ctx=Load())), ops=[In()], comparators=[Name(id='re_sults', ctx=Load())]), body=[Assign(targets=[Subscript(value=Name(id='re_sults', ctx=Load()), slice=BinOp(left=BinOp(left=Constant(value='confidences'), op=Add(), right=Name(id='suffix', ctx=Load())), op=Add(), right=Name(id='key_suffix', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='confidences', ctx=Load()), args=[Subscript(value=Name(id='re_sults', ctx=Load()), slice=BinOp(left=BinOp(left=Constant(value='embeddings'), op=Add(), right=Name(id='suffix', ctx=Load())), op=Add(), right=Name(id='key_suffix', ctx=Load())), ctx=Load())], keywords=[]))], orelse=[])], orelse=[])], orelse=[]), If(test=UnaryOp(op=Not(), operand=Name(id='output_files', ctx=Load())), body=[Assign(targets=[Name(id='VALID_KEYS', ctx=Store())], value=ListComp(elt=Name(id='ke', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='ke', ctx=Store()), Name(id='value', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='re_sults', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[BoolOp(op=And(), values=[Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='value', ctx=Load()), Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())], keywords=[]), Compare(left=Attribute(value=Name(id='value', ctx=Load()), attr='ndim', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='value', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='batch_size', ctx=Load())])])], is_async=0)])), Expr(value=Call(func=Attribute(value=Name(id='VALID_KEYS', ctx=Load()), attr='append', ctx=Load()), args=[Constant(value='gradnorms')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Valid keys: {}'), attr='format', ctx=Load()), args=[Name(id='VALID_KEYS', ctx=Load())], keywords=[])], keywords=[])), Return()], orelse=[]), For(target=Name(id='ke', ctx=Store()), iter=Name(id='output_files', ctx=Load()), body=[If(test=Compare(left=Name(id='ke', ctx=Load()), ops=[Eq()], comparators=[Constant(value='gradnorms')]), body=[Assign(targets=[Name(id='loss', ctx=Store())], value=Subscript(value=Name(id='re_sults', ctx=Load()), slice=BinOp(left=Constant(value='loss'), op=Add(), right=Name(id='key_suffix', ctx=Load())), ctx=Load())), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='engine', ctx=Load()), attr='backward_loss', ctx=Load()), args=[Name(id='loss', ctx=Load()), Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), Attribute(value=Name(id='runner', ctx=Load()), attr='optimizer', ctx=Load())], keywords=[])), Assign(targets=[Name(id='gradient_norm', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='utils', ctx=Load()), attr='clip_grad_norm_', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), slice=Constant(value='model'), ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), Constant(value=1000000.0)], keywords=[])), Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='ou', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Name(id='batch_size', ctx=Load())], ctx=Load()), Call(func=Attribute(value=Name(id='gradient_norm', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='runner', ctx=Load()), attr='engine', ctx=Load()), attr='zero_grad', ctx=Load()), args=[Name(id='loss', ctx=Load()), Subscript(value=Attribute(value=Name(id='runner', ctx=Load()), attr='model', ctx=Load()), slice=Constant(value='model'), ctx=Load()), Attribute(value=Name(id='runner', ctx=Load()), attr='optimizer', ctx=Load())], keywords=[]))], orelse=[If(test=Compare(left=Name(id='ke', ctx=Load()), ops=[In()], comparators=[Name(id='re_sults', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='ou', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Name(id='re_sults', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Load()), attr='detach', ctx=Load()), args=[], keywords=[]), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[If(test=Compare(left=BinOp(left=Name(id='ke', ctx=Load()), op=Add(), right=Name(id='key_suffix', ctx=Load())), ops=[In()], comparators=[Name(id='re_sults', ctx=Load())]), body=[Expr(value=Call(func=Attribute(value=Subscript(value=Name(id='ou', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Subscript(value=Name(id='re_sults', ctx=Load()), slice=BinOp(left=Name(id='ke', ctx=Load()), op=Add(), right=Name(id='key_suffix', ctx=Load())), ctx=Load()), attr='detach', ctx=Load()), args=[], keywords=[]), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[]))], orelse=[Raise(exc=Call(func=Name(id='KeyError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Unknown key: {}'), attr='format', ctx=Load()), args=[Name(id='ke', ctx=Load())], keywords=[])], keywords=[]))])])])], orelse=[])], orelse=[])]), Assign(targets=[Name(id='ou', ctx=Store())], value=DictComp(key=Name(id='ke', ctx=Load()), value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='concatenate', ctx=Load()), args=[Name(id='values', ctx=Load()), Constant(value=0)], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='ke', ctx=Store()), Name(id='values', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='ou', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])), Assert(test=Compare(left=Call(func=Name(id='ab', ctx=Load()), args=[BinOp(left=Call(func=Name(id='model_hash', ctx=Load()), args=[Name(id='runner', ctx=Load())], keywords=[]), op=Sub(), right=Name(id='hash_before', ctx=Load()))], keywords=[]), ops=[Lt()], comparators=[Constant(value=1e-06)]), msg=Constant(value='Model changed'))]), For(target=Tuple(elts=[Name(id='ke', ctx=Store()), Name(id='filename', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='output_files', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='value', ctx=Store())], value=Subscript(value=Name(id='ou', ctx=Load()), slice=Name(id='ke', ctx=Load()), ctx=Load())), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Dump {} with shape {} to {}'), attr='format', ctx=Load()), args=[Name(id='ke', ctx=Load()), Attribute(value=Name(id='value', ctx=Load()), attr='shape', ctx=Load()), Name(id='filename', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='filename', ctx=Load()), Name(id='value', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='parse_arguments', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='main', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])