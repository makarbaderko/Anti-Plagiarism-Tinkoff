Module(body=[Import(names=[alias(name='argparse')]), Import(names=[alias(name='io')]), Import(names=[alias(name='os')]), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), Import(names=[alias(name='mxnet', asname='mx')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='tqdm', names=[alias(name='tqdm')], level=0), ImportFrom(module='PIL', names=[alias(name='Image')], level=0), ImportFrom(module='probabilistic_embeddings.io', names=[alias(name='write_yaml')], level=0), ImportFrom(module='probabilistic_embeddings.dataset', names=[alias(name='DatasetCollection')], level=0), ImportFrom(module='probabilistic_embeddings.dataset.common', names=[alias(name='DatasetWrapper')], level=0), FunctionDef(name='parse_arguments', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parser', ctx=Store())], value=Call(func=Attribute(value=Name(id='argparse', ctx=Load()), attr='ArgumentParser', ctx=Load()), args=[Constant(value='Convert dataset to mxnet format')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='src')], keywords=[keyword(arg='help', value=Constant(value='Source dataset root'))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='dst')], keywords=[keyword(arg='help', value=Constant(value='Target dataset root'))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--dataset')], keywords=[keyword(arg='help', value=Constant(value='Type of the dataset (like in training config)')), keyword(arg='required', value=Constant(value=True))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--batch-size')], keywords=[keyword(arg='help', value=Constant(value='Batch size')), keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=16))])), Expr(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='add_argument', ctx=Load()), args=[Constant(value='--num-workers')], keywords=[keyword(arg='help', value=Constant(value='Number of loader workers')), keyword(arg='type', value=Name(id='int', ctx=Load())), keyword(arg='default', value=Constant(value=4))])), Return(value=Call(func=Attribute(value=Name(id='parser', ctx=Load()), attr='parse_args', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), ClassDef(name='PackedDataset', bases=[Name(id='DatasetWrapper', ctx=Load())], keywords=[], body=[FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assert(test=Attribute(value=Name(id='self', ctx=Load()), attr='classification', ctx=Load())), Assign(targets=[Tuple(elts=[Name(id='image', ctx=Store()), Name(id='labelfDuTQ', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__getitem__', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Name(id='header', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='IRHeader', ctx=Load()), args=[Constant(value=0), Name(id='labelfDuTQ', ctx=Load()), Name(id='index', ctx=Load()), Constant(value=0)], keywords=[])), Assign(targets=[Name(id='b', ctx=Store())], value=Call(func=Attribute(value=Name(id='io', ctx=Load()), attr='BytesIO', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='Image', ctx=Load()), attr='fromarray', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='image', ctx=Load()), attr='save', ctx=Load()), args=[Name(id='b', ctx=Load()), Constant(value='jpeg')], keywords=[])), Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Attribute(value=Name(id='b', ctx=Load()), attr='getvalue', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='pack', ctx=Load()), args=[Name(id='header', ctx=Load()), Name(id='image', ctx=Load())], keywords=[])), Return(value=Name(id='record', ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='serialize_dataset', args=arguments(posonlyargs=[], args=[arg(arg='loader'), arg(arg='idx_pat_h'), arg(arg='data_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='w', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='MXIndexedRecordIO', ctx=Load()), args=[Call(func=Name(id='str', ctx=Load()), args=[Name(id='idx_pat_h', ctx=Load())], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Name(id='data_path', ctx=Load())], keywords=[]), Constant(value='w')], keywords=[])), Assign(targets=[Name(id='i', ctx=Store())], value=Constant(value=0)), For(target=Name(id='batch', ctx=Store()), iter=Call(func=Name(id='tqdm', ctx=Load()), args=[Name(id='loader', ctx=Load())], keywords=[]), body=[For(target=Name(id='record', ctx=Store()), iter=Name(id='batch', ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='w', ctx=Load()), attr='write_idx', ctx=Load()), args=[Name(id='i', ctx=Load()), Name(id='record', ctx=Load())], keywords=[])), AugAssign(target=Name(id='i', ctx=Store()), op=Add(), value=Constant(value=1))], orelse=[])], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='w', ctx=Load()), attr='close', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='dump_meta', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='m')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='    đ   Ǟ     ˯ ɥq   Ƈ ')), Assign(targets=[Name(id='meta', ctx=Store())], value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='classification'), Attribute(value=Name(id='dataset', ctx=Load()), attr='classification', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='num_classes'), Attribute(value=Name(id='dataset', ctx=Load()), attr='num_classes', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='num_samples'), Call(func=Name(id='len', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])], ctx=Load())], ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_yaml', ctx=Load()), args=[Name(id='meta', ctx=Load()), Call(func=Name(id='str', ctx=Load()), args=[Name(id='m', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='dump_labels', args=arguments(posonlyargs=[], args=[arg(arg='dataset'), arg(arg='labels_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  ˰ ǆΡ')), Expr(value=Call(func=Name(id='write_yaml', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Attribute(value=Name(id='dataset', ctx=Load()), attr='labels', ctx=Load())], keywords=[]), attr='tolist', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='str', ctx=Load()), args=[Name(id='labels_path', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='ma', args=arguments(posonlyargs=[], args=[arg(arg='args')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='config', ctx=Store())], value=Dict(keys=[Constant(value='name'), Constant(value='validation_fold'), Constant(value='add_verification_testsets'), Constant(value='add_lossy_testsets'), Constant(value='train_repeat')], values=[Attribute(value=Name(id='args', ctx=Load()), attr='dataset', ctx=Load()), Constant(value=None), Constant(value=False), Constant(value=False), Constant(value=1)])), Assign(targets=[Name(id='c_ollection', ctx=Store())], value=Call(func=Name(id='DatasetCollection', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='src', ctx=Load())], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load()))])), Assign(targets=[Name(id='datasets', ctx=Store())], value=Call(func=Attribute(value=Name(id='c_ollection', ctx=Load()), attr='get_datasets', ctx=Load()), args=[], keywords=[keyword(arg='train', value=Constant(value=True)), keyword(arg='transform', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='datasets', ctx=Load()), attr='update', ctx=Load()), args=[Call(func=Attribute(value=Name(id='c_ollection', ctx=Load()), attr='get_datasets', ctx=Load()), args=[], keywords=[keyword(arg='train', value=Constant(value=False)), keyword(arg='transform', value=Constant(value=False))])], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Datasets:'), Call(func=Name(id='list', ctx=Load()), args=[Name(id='datasets', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='src', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='src', ctx=Load())], keywords=[])), Assign(targets=[Name(id='dst', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='dst', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='dst', ctx=Load()), attr='mkdir', ctx=Load()), args=[], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), For(target=Tuple(elts=[Name(id='name', ctx=Store()), Name(id='dataset', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='datasets', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), body=[If(test=UnaryOp(op=Not(), operand=Attribute(value=Name(id='dataset', ctx=Load()), attr='classification', ctx=Load())), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Skip verification dataset'), Name(id='name', ctx=Load())], keywords=[])), Continue()], orelse=[]), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='Serialize'), Name(id='name', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='dump_meta', ctx=Load()), args=[Name(id='dataset', ctx=Load()), BinOp(left=Name(id='dst', ctx=Load()), op=Div(), right=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value='.yaml')))], keywords=[])), Expr(value=Call(func=Name(id='dump_labels', ctx=Load()), args=[Name(id='dataset', ctx=Load()), BinOp(left=Name(id='dst', ctx=Load()), op=Div(), right=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value='.labels')))], keywords=[])), Assign(targets=[Name(id='packed_dataset', ctx=Store())], value=Call(func=Name(id='PackedDataset', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])), Assign(targets=[Name(id='loader', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='utils', ctx=Load()), attr='data', ctx=Load()), attr='DataLoader', ctx=Load()), args=[Name(id='packed_dataset', ctx=Load())], keywords=[keyword(arg='batch_size', value=Attribute(value=Name(id='args', ctx=Load()), attr='batch_size', ctx=Load())), keyword(arg='num_workers', value=Attribute(value=Name(id='args', ctx=Load()), attr='num_workers', ctx=Load())), keyword(arg='collate_fn', value=Constant(value=None))])), Expr(value=Call(func=Name(id='serialize_dataset', ctx=Load()), args=[Name(id='loader', ctx=Load()), BinOp(left=Name(id='dst', ctx=Load()), op=Div(), right=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value='.idx'))), BinOp(left=Name(id='dst', ctx=Load()), op=Div(), right=BinOp(left=Name(id='name', ctx=Load()), op=Add(), right=Constant(value='.rec')))], keywords=[]))], orelse=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='parse_arguments', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='ma', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])