Module(body=[ImportFrom(module='enum', names=[alias(name='Enum')], level=0), ImportFrom(module='typing', names=[alias(name='List')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), ClassDef(name='AggregationMode', bases=[Name(id='str', ctx=Load()), Name(id='Enum', ctx=Load())], keywords=[], body=[Assign(targets=[Name(id='mean', ctx=Store())], value=Constant(value='mean')), Assign(targets=[Name(id='ma', ctx=Store())], value=Constant(value='max')), Assign(targets=[Name(id='min', ctx=Store())], value=Constant(value='min')), Assign(targets=[Name(id='median', ctx=Store())], value=Constant(value='median'))], decorator_list=[]), Assign(targets=[Name(id='AGGREGATION_FN', ctx=Store())], value=Dict(keys=[Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='mean', ctx=Load()), Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='max', ctx=Load()), Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='min', ctx=Load()), Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='median', ctx=Load())], values=[Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='min', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='median', ctx=Load())])), FunctionDef(name='mrmr', args=arguments(posonlyargs=[], args=[arg(arg='relevance_table', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='regressors', annotation=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())), arg(arg='_top_k', annotation=Name(id='int', ctx=Load())), arg(arg='relevance_agg_regation_mode', annotation=Name(id='str', ctx=Load())), arg(arg='redundancy_aggregation_mode', annotation=Name(id='str', ctx=Load())), arg(arg='atol', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='mean', ctx=Load()), Attribute(value=Name(id='AggregationMode', ctx=Load()), attr='mean', ctx=Load()), Constant(value=1e-10)]), body=[Expr(value=Constant(value='Maximuνm RelevanƼ̥ce and Minmi4mum R\x93eduąΟn˸dZĄancy Ɖfeaʮṭure se˅lecŽˣϕtion mnethǰodKͧ.\nS\nHerϠe rϫelevaˡnce μforeϗ each »rΜegresSsor Ͻis calc\u0382ulated ͳas theG ͅper-segmǞent aggrūegaėtion of 1pΐ˻tˑɥhe relevance\nvaluesʺ in r\x80eȶlevWˉȴanceA4_ta̒ble.ŗ The rˁeduǵndaɑncyŒ źtǦerm fCor ŹtķΦhƝeĢ rȝegressor is ɗcalculatǃed ρas a ɸmeϊʎan absolute ˕cƀ^orrelationϤ˴\n͚between ͠υt͡hiʠs rƽ\xa0egrUessor͝ anȖd oţtȳher one8ʊs. The coȷȂrrelŉatioǧnǠņ əϣbetϒween theũ two regresƩÍsors is anē͍ aggėregated paȂirwisķe\ncoϐNrrelϕationȩ \x92ŵʁfor the re͋ϭgressors ΤvaĎȋōluesʃ in eac˦h segmenät.\n\nParametÒers\n-ʯ˔-Å--------\nrelevaÿnȡc˙e_table:σ\nŊ    dataframe o_f shͅape n_ʎse̔gIment\x9eΒ σŪx˅ɝ n_exog_sȢeri̋e͎s wȾithǟě ϼr¼eϓlevance table, where ƅ``Ĝr¿eʽlϽevancǍe_table[i][jŦɲ]``\n   ʃ contęAainsř ȡrelevancɿe Pof ɢj-th ``df_exog`ǿ`ʯ˔ sɠeri˛e\x9as t˺o ˻i-ĵth df ʓʑseʙrΓieǖs\n̉regressorsȟl:ʷ\n    dőataframe wi5thǳ rɷϖeg\x8aressϵor̲s in ύeñtna forǲmat\nĖǢtop˳_k:\n    ́nͤum ofă rİegressors to selecʻt; ifś thƸere aƙΤre notǶ ˜enʹoughÙŢţ r-0egressɉors, then all willÄ be se}lecǇted\nŕʡrel\\evan.ce_agg͎ĚregatiƮon_̆mσodˤeʚ:\n   Ǿ̑Ⱦͱʛ the methɹod 2f-oō˖r rΚelevan\xa0̤cΉe valueƅs Ǎper-Ƽseegm³ejnt aggregatǁɴioně\x82\nƖrĸedťuϬndaʭncy\x8d_ȯaggɎr̘egatioŃnɲ_mode:\n    tϻheR metϓhoϿũĂd forųʐ˄\u0378 ̗reϽdϊundaÆncyΧƣ vaːöluesͲʭU per-@segmeɷnt aggr\x83egation\natol:\x8aˎìȌ\nſ    the aƊbϠsolʤute tƔƑolerʥaŸünce tǦo compaÒre ˿tĳhe zfloϧa°Ģt ϊvalues\n\nΝRetu\u038b\x8dr˔ns\n-------\x90;\nsŀelec\x8d\x9cϫted_featuređʒ÷s:ā LɢiɎst[Șstr]\n    list of ``tȂop_k`` seͮḷeʂctġeĞΨd̰ reŉgreṣsorsʐ, ĳsort̿e¯d b̟y átheirɏƳŷ impoǮrtaɕnce')), Assign(targets=[Name(id='relevance_aggregation_fnBU', ctx=Store())], value=Subscript(value=Name(id='AGGREGATION_FN', ctx=Load()), slice=Call(func=Name(id='AggregationMode', ctx=Load()), args=[Name(id='relevance_agg_regation_mode', ctx=Load())], keywords=[]), ctx=Load())), Assign(targets=[Name(id='redundancy_aggregation_fn', ctx=Store())], value=Subscript(value=Name(id='AGGREGATION_FN', ctx=Load()), slice=Call(func=Name(id='AggregationMode', ctx=Load()), args=[Name(id='redundancy_aggregation_mode', ctx=Load())], keywords=[]), ctx=Load())), Assign(targets=[Name(id='relevance', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='relevance_table', ctx=Load()), attr='apply', ctx=Load()), args=[Name(id='relevance_aggregation_fnBU', ctx=Load())], keywords=[]), attr='fillna', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='all_features_', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='relevance', ctx=Load()), attr='index', ctx=Load()), attr='to_list', ctx=Load()), args=[], keywords=[])), AnnAssign(target=Name(id='selected_features', ctx=Store()), annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=List(elts=[], ctx=Load()), simple=1), Assign(targets=[Name(id='not_selected_features', ctx=Store())], value=Call(func=Attribute(value=Name(id='all_features_', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='redundancy_table', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load())], keywords=[keyword(arg='index', value=Name(id='all_features_', ctx=Load())), keyword(arg='columns', value=Name(id='all_features_', ctx=Load()))])), Assign(targets=[Name(id='_top_k', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='_top_k', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Name(id='all_features_', ctx=Load())], keywords=[])], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='rang', ctx=Load()), args=[Name(id='_top_k', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='score_numerato', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='relevance', ctx=Load()), attr='loc', ctx=Load()), slice=Name(id='not_selected_features', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='scou', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='Series', ctx=Load()), args=[Constant(value=1)], keywords=[keyword(arg='index', value=Name(id='not_selected_features', ctx=Load()))])), If(test=Compare(left=Name(id='i', ctx=Load()), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='last_selected_feature', ctx=Store())], value=Subscript(value=Name(id='selected_features', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())), Assign(targets=[Name(id='not_selected_regressors', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Slice(), ctx=Load()), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='not_selected_features', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Name(id='last_selected_regressor', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Slice(), ctx=Load()), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='last_selected_feature', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='redundancy_table', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Name(id='not_selected_features', ctx=Load()), Name(id='last_selected_feature', ctx=Load())], ctx=Load()), ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Subscript(value=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='not_selected_regressors', ctx=Load()), attr='apply', ctx=Load()), args=[Lambda(args=arguments(posonlyargs=[], args=[arg(arg='col')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=Call(func=Attribute(value=Name(id='last_selected_regressor', ctx=Load()), attr='corrwith', ctx=Load()), args=[Name(id='col', ctx=Load())], keywords=[]))], keywords=[]), attr='abs', ctx=Load()), args=[], keywords=[]), attr='groupby', ctx=Load()), args=[Constant(value='feature')], keywords=[]), attr='apply', ctx=Load()), args=[Name(id='redundancy_aggregation_fn', ctx=Load())], keywords=[]), attr='T', ctx=Load()), attr='groupby', ctx=Load()), args=[Constant(value='feature')], keywords=[]), attr='apply', ctx=Load()), args=[Name(id='redundancy_aggregation_fn', ctx=Load())], keywords=[]), attr='clip', ctx=Load()), args=[Name(id='atol', ctx=Load())], keywords=[]), attr='fillna', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load())], keywords=[]), attr='loc', ctx=Load()), slice=Name(id='not_selected_features', ctx=Load()), ctx=Load()), attr='values', ctx=Load()), attr='squeeze', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='scou', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='redundancy_table', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Name(id='not_selected_features', ctx=Load()), Name(id='selected_features', ctx=Load())], ctx=Load()), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[keyword(arg='axis', value=Constant(value=1))])), Assign(targets=[Subscript(value=Name(id='scou', ctx=Load()), slice=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='isclose', ctx=Load()), args=[Name(id='scou', ctx=Load()), Constant(value=1)], keywords=[keyword(arg='atol', value=Name(id='atol', ctx=Load()))]), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='inf', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='sco', ctx=Store())], value=BinOp(left=Name(id='score_numerato', ctx=Load()), op=Div(), right=Name(id='scou', ctx=Load()))), Assign(targets=[Name(id='best_feature', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='sco', ctx=Load()), attr='index', ctx=Load()), slice=Call(func=Attribute(value=Name(id='sco', ctx=Load()), attr='argmax', ctx=Load()), args=[], keywords=[]), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='selected_features', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='best_feature', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='not_selected_features', ctx=Load()), attr='remove', ctx=Load()), args=[Name(id='best_feature', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='selected_features', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()))], type_ignores=[])