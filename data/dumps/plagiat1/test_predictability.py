Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='sklearn.neighbors', names=[alias(name='KNeighborsClassifier')], level=0), ImportFrom(module='tsfresh.feature_extraction.settings', names=[alias(name='MinimalFCParameters')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_ar_df')], level=0), ImportFrom(module='etna.experimental.classification.feature_extraction.tsfresh', names=[alias(name='TSFreshFeatureExtractor')], level=0), ImportFrom(module='etna.experimental.classification.predictability', names=[alias(name='PredictabilityAnalyzer')], level=0), FunctionDef(name='many_time_series_ts', args=arguments(posonlyargs=[], args=[arg(arg='MANY_TIME_SERIES')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='x', ctx=Store()), Name(id='y', ctx=Store())], ctx=Store())], value=Name(id='MANY_TIME_SERIES', ctx=Load())), Assign(targets=[Name(id='dfs', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='ts_y', ctx=Store())], value=Dict(keys=[], values=[])), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='series', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Name(id='x', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Constant(value=10)), keyword(arg='n_segments', value=Constant(value=1)), keyword(arg='start_time', value=Constant(value='2000-01-01'))])), Assign(targets=[Name(id='df', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='df', ctx=Load()), attr='iloc', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Call(func=Name(id='len', ctx=Load()), args=[Name(id='series', ctx=Load())], keywords=[]))), ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='target'), ctx=Store())], value=Name(id='series', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=JoinedStr(values=[Constant(value='segment_'), FormattedValue(value=Name(id='i', ctx=Load()), conversion=-1)])), Assign(targets=[Subscript(value=Name(id='ts_y', ctx=Load()), slice=JoinedStr(values=[Constant(value='segment_'), FormattedValue(value=Name(id='i', ctx=Load()), conversion=-1)]), ctx=Store())], value=Subscript(value=Name(id='y', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='dfs', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='dfs', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df', ctx=Load())), keyword(arg='freq', value=Constant(value='D'))])), Return(value=Tuple(elts=[Name(id='ts', ctx=Load()), Name(id='ts_y', ctx=Load())], ctx=Load()))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())]), FunctionDef(name='test_get_series_from_dataset', args=arguments(posonlyargs=[], args=[arg(arg='MANY_TIME_SERIES'), arg(arg='many_time_series_ts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='ts', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Name(id='many_time_series_ts', ctx=Load())), Assign(targets=[Name(id='x', ctx=Store())], value=Call(func=Attribute(value=Name(id='PredictabilityAnalyzer', ctx=Load()), attr='get_series_from_dataset', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='x__expected', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Name(id='MANY_TIME_SERIES', ctx=Load())), For(target=Tuple(elts=[Name(id='row', ctx=Store()), Name(id='row_expected', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='z', ctx=Load()), args=[Name(id='x', ctx=Load()), Name(id='x__expected', ctx=Load())], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_array_equal', ctx=Load()), args=[Name(id='row', ctx=Load()), Name(id='row_expected', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_analyze', args=arguments(posonlyargs=[], args=[arg(arg='MANY_TIME_SERIES'), arg(arg='many_time_series_ts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ό 4  θ')), Assign(targets=[Tuple(elts=[Name(id='x', ctx=Store()), Name(id='y', ctx=Store())], ctx=Store())], value=Name(id='MANY_TIME_SERIES', ctx=Load())), Assign(targets=[Name(id='a', ctx=Store())], value=Call(func=Name(id='PredictabilityAnalyzer', ctx=Load()), args=[], keywords=[keyword(arg='feature_extractor', value=Call(func=Name(id='TSFreshFeatureExtractor', ctx=Load()), args=[], keywords=[keyword(arg='default_fc_parameters', value=Call(func=Name(id='MinimalFCParameters', ctx=Load()), args=[], keywords=[]))])), keyword(arg='classifier', value=Call(func=Name(id='KNeighborsClassifier', ctx=Load()), args=[], keywords=[keyword(arg='n_neighbors', value=Constant(value=1))]))])), Expr(value=Call(func=Attribute(value=Name(id='a', ctx=Load()), attr='fit', ctx=Load()), args=[], keywords=[keyword(arg='x', value=Name(id='x', ctx=Load())), keyword(arg='y', value=Name(id='y', ctx=Load()))])), Assign(targets=[Tuple(elts=[Name(id='ts', ctx=Store()), Name(id='ts_y', ctx=Store())], ctx=Store())], value=Name(id='many_time_series_ts', ctx=Load())), Assign(targets=[Name(id='result', ctx=Store())], value=Call(func=Attribute(value=Name(id='a', ctx=Load()), attr='analyze_predictability', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load()))])), Assert(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='result', ctx=Load()), Name(id='DICT', ctx=Load())], keywords=[])), Assert(test=Compare(left=Call(func=Name(id='sorted', ctx=Load()), args=[Call(func=Attribute(value=Name(id='result', ctx=Load()), attr='keys', ctx=Load()), args=[], keywords=[])], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='sorted', ctx=Load()), args=[Attribute(value=Name(id='ts', ctx=Load()), attr='segments', ctx=Load())], keywords=[])])), For(target=Name(id='segment', ctx=Store()), iter=Attribute(value=Name(id='ts', ctx=Load()), attr='segments', ctx=Load()), body=[Assert(test=Compare(left=Subscript(value=Name(id='result', ctx=Load()), slice=Name(id='segment', ctx=Load()), ctx=Load()), ops=[Eq()], comparators=[Subscript(value=Name(id='ts_y', ctx=Load()), slice=Name(id='segment', ctx=Load()), ctx=Load())]))], orelse=[])], decorator_list=[])], type_ignores=[])