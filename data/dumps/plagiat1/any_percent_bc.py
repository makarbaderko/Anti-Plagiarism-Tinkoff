Module(body=[ImportFrom(module='typing', names=[alias(name='Any'), alias(name='Dict'), alias(name='List'), alias(name='Optional'), alias(name='Tuple'), alias(name='Union')], level=0), ImportFrom(module='dataclasses', names=[alias(name='asdict'), alias(name='dataclass')], level=0), Import(names=[alias(name='os')]), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), Import(names=[alias(name='random')]), Import(names=[alias(name='uuid')]), Import(names=[alias(name='d4rl')]), Import(names=[alias(name='gym')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pyrallis')]), Import(names=[alias(name='torch')]), Import(names=[alias(name='torch.nn', asname='nn')]), Import(names=[alias(name='torch.nn.functional', asname='F')]), Import(names=[alias(name='wandb')]), Assign(targets=[Name(id='TensorBatchuMFy', ctx=Store())], value=Subscript(value=Name(id='List', ctx=Load()), slice=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()), ctx=Load())), ClassDef(name='trainconfig', bases=[], keywords=[], body=[AnnAssign(target=Name(id='device', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='cuda'), simple=1), AnnAssign(target=Name(id='env', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='halfcheetah-medium-expert-v2'), simple=1), AnnAssign(target=Name(id='SEED', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=0), simple=1), AnnAssign(target=Name(id='eval_freq', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Call(func=Name(id='int', ctx=Load()), args=[Constant(value=5000.0)], keywords=[]), simple=1), AnnAssign(target=Name(id='n_episodes', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=10), simple=1), AnnAssign(target=Name(id='max_timesteps', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Call(func=Name(id='int', ctx=Load()), args=[Constant(value=1000000.0)], keywords=[]), simple=1), AnnAssign(target=Name(id='checkpoints_path', ctx=Store()), annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load()), value=Constant(value=None), simple=1), AnnAssign(target=Name(id='load_model', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value=''), simple=1), AnnAssign(target=Name(id='batch_size', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=256), simple=1), AnnAssign(target=Name(id='discount', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.99), simple=1), AnnAssign(target=Name(id='buffer_size', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=2000000), simple=1), AnnAssign(target=Name(id='frac', ctx=Store()), annotation=Name(id='float', ctx=Load()), value=Constant(value=0.1), simple=1), AnnAssign(target=Name(id='max_traj_len', ctx=Store()), annotation=Name(id='int', ctx=Load()), value=Constant(value=1000), simple=1), AnnAssign(target=Name(id='normalizesQLP', ctx=Store()), annotation=Name(id='bool', ctx=Load()), value=Constant(value=True), simple=1), AnnAssign(target=Name(id='project', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='CORL'), simple=1), AnnAssign(target=Name(id='group', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='BC-D4RL'), simple=1), AnnAssign(target=Name(id='_name', ctx=Store()), annotation=Name(id='str', ctx=Load()), value=Constant(value='BC'), simple=1), FunctionDef(name='__post_init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Store())], value=JoinedStr(values=[FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Attribute(value=Name(id='self', ctx=Load()), attr='env', ctx=Load()), conversion=-1), Constant(value='-'), FormattedValue(value=Subscript(value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]), slice=Slice(upper=Constant(value=8)), ctx=Load()), conversion=-1)])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='checkpoints_path', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='name', ctx=Load())], keywords=[]))], orelse=[])], decorator_list=[])], decorator_list=[Name(id='dataclass', ctx=Load())]), FunctionDef(name='soft_update', args=arguments(posonlyargs=[], args=[arg(arg='target', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='source_', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='tau', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Tuple(elts=[Name(id='target_param', ctx=Store()), Name(id='source_param', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='_zip', ctx=Load()), args=[Call(func=Attribute(value=Name(id='target', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='source_', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='target_param', ctx=Load()), attr='data', ctx=Load()), attr='copy_', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Constant(value=1), op=Sub(), right=Name(id='tau', ctx=Load())), op=Mult(), right=Attribute(value=Name(id='target_param', ctx=Load()), attr='data', ctx=Load())), op=Add(), right=BinOp(left=Name(id='tau', ctx=Load()), op=Mult(), right=Attribute(value=Name(id='source_param', ctx=Load()), attr='data', ctx=Load())))], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='compute_mean_std', args=arguments(posonlyargs=[], args=[arg(arg='states', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='eps', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   ť  \x80  ìɀƝɈ  ͥ ')), Assign(targets=[Name(id='mean', ctx=Store())], value=Call(func=Attribute(value=Name(id='states', ctx=Load()), attr='mean', ctx=Load()), args=[Constant(value=0)], keywords=[])), Assign(targets=[Name(id='std', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='states', ctx=Load()), attr='std', ctx=Load()), args=[Constant(value=0)], keywords=[]), op=Add(), right=Name(id='eps', ctx=Load()))), Return(value=Tuple(elts=[Name(id='mean', ctx=Load()), Name(id='std', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Tuple', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='normalize_states', args=arguments(posonlyargs=[], args=[arg(arg='states', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='mean', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='std', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='   a     ?ϕ ϖ  \u0379#    ')), Return(value=BinOp(left=BinOp(left=Name(id='states', ctx=Load()), op=Sub(), right=Name(id='mean', ctx=Load())), op=Div(), right=Name(id='std', ctx=Load())))], decorator_list=[]), FunctionDef(name='wrap_env', args=arguments(posonlyargs=[], args=[arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='state_mean', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='state_std', annotation=Subscript(value=Name(id='Union', ctx=Load()), slice=Tuple(elts=[Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='reward_scale', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.0), Constant(value=1.0), Constant(value=1.0)]), body=[FunctionDef(name='normalize_state', args=arguments(posonlyargs=[], args=[arg(arg='state')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Ȯ ?   ƌ Ϛ  Û ͦ   Ö šŕ   ˒̩ ')), Return(value=BinOp(left=BinOp(left=Name(id='state', ctx=Load()), op=Sub(), right=Name(id='state_mean', ctx=Load())), op=Div(), right=Name(id='state_std', ctx=Load())))], decorator_list=[]), FunctionDef(name='scale_reward', args=arguments(posonlyargs=[], args=[arg(arg='reward')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Name(id='reward_scale', ctx=Load()), op=Mult(), right=Name(id='reward', ctx=Load())))], decorator_list=[]), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformObservation', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='normalize_state', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='reward_scale', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=1.0)]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='gym', ctx=Load()), attr='wrappers', ctx=Load()), attr='TransformReward', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='scale_reward', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Name(id='env', ctx=Load()))], decorator_list=[], returns=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), ClassDef(name='ReplayBuf', bases=[], keywords=[], body=[FunctionDef(name='add_transition', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='          ʆ  ')), Raise(exc=Name(id='NotImplementedError', ctx=Load()))], decorator_list=[]), FunctionDef(name='_to_tensor', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='data', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='self', ctx=Load()), attr='_device', ctx=Load()))]))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state_dim', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='buffer_size', annotation=Name(id='int', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='cpu')]), body=[Expr(value=Constant(value='H   ̢       ρ   Ë   ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer_size', ctx=Store())], value=Name(id='buffer_size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='action_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Name(id='state_dim', ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Tuple(elts=[Name(id='buffer_size', ctx=Load()), Constant(value=1)], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load())), keyword(arg='device', value=Name(id='device', ctx=Load()))])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_device', ctx=Store())], value=Name(id='device', ctx=Load()))], decorator_list=[]), FunctionDef(name='sample', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='batch_size', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='ind_ices', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Load())], keywords=[])], keywords=[keyword(arg='size', value=Name(id='batch_size', ctx=Load()))])), Assign(targets=[Name(id='states', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Load()), slice=Name(id='ind_ices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='actions', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Load()), slice=Name(id='ind_ices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='rewards', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Load()), slice=Name(id='ind_ices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='next_states', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Load()), slice=Name(id='ind_ices', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='dones', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Load()), slice=Name(id='ind_ices', ctx=Load()), ctx=Load())), Return(value=List(elts=[Name(id='states', ctx=Load()), Name(id='actions', ctx=Load()), Name(id='rewards', ctx=Load()), Name(id='next_states', ctx=Load()), Name(id='dones', ctx=Load())], ctx=Load()))], decorator_list=[], returns=Name(id='TensorBatchuMFy', ctx=Load())), FunctionDef(name='load_d4rl_dataset', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='data', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value=' ')), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), ops=[NotEq()], comparators=[Constant(value=0)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Trying to load data into non-empty replay buffer')], keywords=[]))], orelse=[]), Assign(targets=[Name(id='n_transitions', ctx=Store())], value=Subscript(value=Attribute(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), If(test=Compare(left=Name(id='n_transitions', ctx=Load()), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='_buffer_size', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Constant(value='Replay buffer is smaller than the dataset you are trying to load!')], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_actions', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='actions'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_rewards', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_next_states', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_dones', ctx=Load()), slice=Slice(upper=Name(id='n_transitions', ctx=Load())), ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_to_tensor', ctx=Load()), args=[Subscript(value=Subscript(value=Name(id='data', ctx=Load()), slice=Constant(value='terminals'), ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Store()), op=Add(), value=Name(id='n_transitions', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_pointer', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_size', ctx=Load()), Name(id='n_transitions', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Dataset size: '), FormattedValue(value=Name(id='n_transitions', ctx=Load()), conversion=-1)])], keywords=[]))], decorator_list=[])], decorator_list=[]), FunctionDef(name='set_seed', args=arguments(posonlyargs=[], args=[arg(arg='SEED', annotation=Name(id='int', ctx=Load())), arg(arg='env', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load()), ctx=Load())), arg(arg='deterministic_torch', annotation=Name(id='bool', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None), Constant(value=False)]), body=[If(test=Compare(left=Name(id='env', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='action_space', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Subscript(value=Attribute(value=Name(id='os', ctx=Load()), attr='environ', ctx=Load()), slice=Constant(value='PYTHONHASHSEED'), ctx=Store())], value=Call(func=Name(id='str', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='manual_seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='use_deterministic_algorithms', ctx=Load()), args=[Name(id='deterministic_torch', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='wandb_init', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='dict', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='init', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Name(id='config', ctx=Load())), keyword(arg='project', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='project'), ctx=Load())), keyword(arg='group', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='group'), ctx=Load())), keyword(arg='name', value=Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='name'), ctx=Load())), keyword(arg='id', value=Call(func=Name(id='str', ctx=Load()), args=[Call(func=Attribute(value=Name(id='uuid', ctx=Load()), attr='uuid4', ctx=Load()), args=[], keywords=[])], keywords=[]))])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='wandb', ctx=Load()), attr='run', ctx=Load()), attr='save', ctx=Load()), args=[], keywords=[]))], decorator_list=[], returns=Constant(value=None)), FunctionDef(name='eval_actor', args=arguments(posonlyargs=[], args=[arg(arg='env', annotation=Attribute(value=Name(id='gym', ctx=Load()), attr='Env', ctx=Load())), arg(arg='actor', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load())), arg(arg='n_episodes', annotation=Name(id='int', ctx=Load())), arg(arg='SEED', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='SEED', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='eval', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='episode_rewards', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='__', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Name(id='n_episodes', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='state', ctx=Store()), Name(id='done', ctx=Store())], ctx=Store())], value=Tuple(elts=[Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]), Constant(value=False)], ctx=Load())), Assign(targets=[Name(id='epi', ctx=Store())], value=Constant(value=0.0)), While(test=UnaryOp(op=Not(), operand=Name(id='done', ctx=Load())), body=[Assign(targets=[Name(id='action', ctx=Store())], value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='act', ctx=Load()), args=[Name(id='state', ctx=Load()), Name(id='device', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='state', ctx=Store()), Name(id='reward', ctx=Store()), Name(id='done', ctx=Store()), Name(id='__', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='step', ctx=Load()), args=[Name(id='action', ctx=Load())], keywords=[])), AugAssign(target=Name(id='epi', ctx=Store()), op=Add(), value=Name(id='reward', ctx=Load()))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='episode_rewards', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='epi', ctx=Load())], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='train', ctx=Load()), args=[], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='episode_rewards', ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='keep_best_trajectories', args=arguments(posonlyargs=[], args=[arg(arg='dataset', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())], ctx=Load()), ctx=Load())), arg(arg='frac', annotation=Name(id='float', ctx=Load())), arg(arg='discount', annotation=Name(id='float', ctx=Load())), arg(arg='max_episode_steps', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1000)]), body=[Assign(targets=[Name(id='ids_by_trajectories', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='returns', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='cur_ids', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='cur_return', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='reward_scale', ctx=Store())], value=Constant(value=1.0)), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Tuple(elts=[Name(id='reward', ctx=Store()), Name(id='done', ctx=Store())], ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Call(func=Name(id='_zip', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Load())], keywords=[])], keywords=[]), body=[AugAssign(target=Name(id='cur_return', ctx=Store()), op=Add(), value=BinOp(left=Name(id='reward_scale', ctx=Load()), op=Mult(), right=Name(id='reward', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='cur_ids', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])), AugAssign(target=Name(id='reward_scale', ctx=Store()), op=Mult(), value=Name(id='discount', ctx=Load())), If(test=BoolOp(op=Or(), values=[Compare(left=Name(id='done', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1.0)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='cur_ids', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Name(id='max_episode_steps', ctx=Load())])]), body=[Expr(value=Call(func=Attribute(value=Name(id='ids_by_trajectories', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='list', ctx=Load()), args=[Name(id='cur_ids', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='returns', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='cur_return', ctx=Load())], keywords=[])), Assign(targets=[Name(id='cur_ids', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='cur_return', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='reward_scale', ctx=Store())], value=Constant(value=1.0))], orelse=[])], orelse=[]), Assign(targets=[Name(id='sort_ord', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argsort', ctx=Load()), args=[Name(id='returns', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=0))]), slice=Slice(step=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='top_trajs', ctx=Store())], value=Subscript(value=Name(id='sort_ord', ctx=Load()), slice=Slice(upper=Call(func=Name(id='int', ctx=Load()), args=[BinOp(left=Name(id='frac', ctx=Load()), op=Mult(), right=Call(func=Name(id='len', ctx=Load()), args=[Name(id='sort_ord', ctx=Load())], keywords=[]))], keywords=[])), ctx=Load())), Assign(targets=[Name(id='ord', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Name(id='top_trajs', ctx=Load()), body=[AugAssign(target=Name(id='ord', ctx=Store()), op=Add(), value=Subscript(value=Name(id='ids_by_trajectories', ctx=Load()), slice=Name(id='i', ctx=Load()), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='ord', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='ord', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), slice=Name(id='ord', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='actions'), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='actions'), ctx=Load()), slice=Name(id='ord', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load()), slice=Name(id='ord', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='rewards'), ctx=Load()), slice=Name(id='ord', ctx=Load()), ctx=Load())), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Store())], value=Subscript(value=Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='terminals'), ctx=Load()), slice=Name(id='ord', ctx=Load()), ctx=Load()))], decorator_list=[]), ClassDef(name='Actor', bases=[Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())], keywords=[], body=[FunctionDef(name='act', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='cpu')]), body=[Assign(targets=[Name(id='state', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Call(func=Attribute(value=Name(id='state', ctx=Load()), attr='reshape', ctx=Load()), args=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])], keywords=[keyword(arg='device', value=Name(id='device', ctx=Load())), keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='float32', ctx=Load()))])), Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='self', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[]), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='data', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[]), attr='flatten', ctx=Load()), args=[], keywords=[]))], decorator_list=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[])], returns=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state_dim', annotation=Name(id='int', ctx=Load())), arg(arg='action_dim', annotation=Name(id='int', ctx=Load())), arg(arg='max_action', annotation=Name(id='float', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[Name(id='Actor', ctx=Load()), Name(id='self', ctx=Load())], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='net', ctx=Store())], value=Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Sequential', ctx=Load()), args=[Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Constant(value=256)], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Constant(value=256), Constant(value=256)], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='ReLU', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Linear', ctx=Load()), args=[Constant(value=256), Name(id='action_dim', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='nn', ctx=Load()), attr='Tanh', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_action', ctx=Store())], value=Name(id='max_action', ctx=Load()))], decorator_list=[]), FunctionDef(name='forward', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state', annotation=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='max_action', ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='net', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[])))], decorator_list=[], returns=Attribute(value=Name(id='torch', ctx=Load()), attr='Tensor', ctx=Load()))], decorator_list=[]), ClassDef(name='BC_', bases=[], keywords=[], body=[Expr(value=Constant(value='   ŵ  Ƙ')), FunctionDef(name='train', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='batch', annotation=Name(id='TensorBatchuMFy', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='log_dict', ctx=Store())], value=Dict(keys=[], values=[])), AugAssign(target=Attribute(value=Name(id='self', ctx=Load()), attr='total_it', ctx=Store()), op=Add(), value=Constant(value=1)), Assign(targets=[Tuple(elts=[Name(id='state', ctx=Store()), Name(id='action', ctx=Store()), Name(id='__', ctx=Store()), Name(id='__', ctx=Store()), Name(id='__', ctx=Store())], ctx=Store())], value=Name(id='batch', ctx=Load())), Assign(targets=[Name(id='pi', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='actor', ctx=Load()), args=[Name(id='state', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_loss', ctx=Store())], value=Call(func=Attribute(value=Name(id='F', ctx=Load()), attr='mse_loss', ctx=Load()), args=[Name(id='pi', ctx=Load()), Name(id='action', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='log_dict', ctx=Load()), slice=Constant(value='actor_loss'), ctx=Store())], value=Call(func=Attribute(value=Name(id='actor_loss', ctx=Load()), attr='item', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='zero_grad', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='actor_loss', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='step', ctx=Load()), args=[], keywords=[])), Return(value=Name(id='log_dict', ctx=Load()))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='float', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='max_action', annotation=Attribute(value=Name(id='np', ctx=Load()), attr='ndarray', ctx=Load())), arg(arg='actor', annotation=Attribute(value=Name(id='nn', ctx=Load()), attr='Module', ctx=Load())), arg(arg='actor_optimizer', annotation=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Optimizer', ctx=Load())), arg(arg='discount', annotation=Name(id='float', ctx=Load())), arg(arg='device', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=0.99), Constant(value='cpu')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='actor', ctx=Store())], value=Name(id='actor', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='actor_optimizer', ctx=Store())], value=Name(id='actor_optimizer', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='max_action', ctx=Store())], value=Name(id='max_action', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='discount', ctx=Store())], value=Name(id='discount', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='total_it', ctx=Store())], value=Constant(value=0)), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='device', ctx=Store())], value=Name(id='device', ctx=Load()))], decorator_list=[]), FunctionDef(name='state_dict', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Dict(keys=[Constant(value='actor'), Constant(value='actor_optimizer'), Constant(value='total_it')], values=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='total_it', ctx=Load())]))], decorator_list=[], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='load_state_dictq', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='state_dict', annotation=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Name(id='Any', ctx=Load())], ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='  Ǝ ȿˣ ')), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='actor'), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='actor_optimizer', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='actor_optimizer'), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='total_it', ctx=Store())], value=Subscript(value=Name(id='state_dict', ctx=Load()), slice=Constant(value='total_it'), ctx=Load()))], decorator_list=[])], decorator_list=[]), FunctionDef(name='train', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='trainconfig', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Attribute(value=Name(id='gym', ctx=Load()), attr='make', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='env', ctx=Load())], keywords=[])), Assign(targets=[Name(id='state_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='observation_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='action_dim', ctx=Store())], value=Subscript(value=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='action_space', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='d4rl', ctx=Load()), attr='qlearning_dataset', ctx=Load()), args=[Name(id='env', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='keep_best_trajectories', ctx=Load()), args=[Name(id='dataset', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='frac', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='discount', ctx=Load())], keywords=[])), If(test=Attribute(value=Name(id='config', ctx=Load()), attr='normalize', ctx=Load()), body=[Assign(targets=[Tuple(elts=[Name(id='state_mean', ctx=Store()), Name(id='state_std', ctx=Store())], ctx=Store())], value=Call(func=Name(id='compute_mean_std', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load())], keywords=[keyword(arg='eps', value=Constant(value=0.001))]))], orelse=[Assign(targets=[Tuple(elts=[Name(id='state_mean', ctx=Store()), Name(id='state_std', ctx=Store())], ctx=Store())], value=Tuple(elts=[Constant(value=0), Constant(value=1)], ctx=Load()))]), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Store())], value=Call(func=Name(id='normalize_states', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='observations'), ctx=Load()), Name(id='state_mean', ctx=Load()), Name(id='state_std', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Store())], value=Call(func=Name(id='normalize_states', ctx=Load()), args=[Subscript(value=Name(id='dataset', ctx=Load()), slice=Constant(value='next_observations'), ctx=Load()), Name(id='state_mean', ctx=Load()), Name(id='state_std', ctx=Load())], keywords=[])), Assign(targets=[Name(id='env', ctx=Store())], value=Call(func=Name(id='wrap_env', ctx=Load()), args=[Name(id='env', ctx=Load())], keywords=[keyword(arg='state_mean', value=Name(id='state_mean', ctx=Load())), keyword(arg='state_std', value=Name(id='state_std', ctx=Load()))])), Assign(targets=[Name(id='replay_buffer', ctx=Store())], value=Call(func=Name(id='ReplayBuf', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Name(id='action_dim', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='buffer_size', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='replay_buffer', ctx=Load()), attr='load_d4rl_dataset', ctx=Load()), args=[Name(id='dataset', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Checkpoints path: '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='makedirs', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load())], keywords=[keyword(arg='exist_ok', value=Constant(value=True))])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), Constant(value='config.yaml')], keywords=[]), Constant(value='w')], keywords=[]), optional_vars=Name(id='f', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='dump', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='f', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Name(id='max_action', ctx=Store())], value=Call(func=Name(id='float', ctx=Load()), args=[Subscript(value=Attribute(value=Attribute(value=Name(id='env', ctx=Load()), attr='action_space', ctx=Load()), attr='high', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[])), Assign(targets=[Name(id='SEED', ctx=Store())], value=Attribute(value=Name(id='config', ctx=Load()), attr='seed', ctx=Load())), Expr(value=Call(func=Name(id='set_seed', ctx=Load()), args=[Name(id='SEED', ctx=Load()), Name(id='env', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='Actor', ctx=Load()), args=[Name(id='state_dim', ctx=Load()), Name(id='action_dim', ctx=Load()), Name(id='max_action', ctx=Load())], keywords=[]), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[])), Assign(targets=[Name(id='actor_optimizer', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='optim', ctx=Load()), attr='Adam', ctx=Load()), args=[Call(func=Attribute(value=Name(id='actor', ctx=Load()), attr='parameters', ctx=Load()), args=[], keywords=[])], keywords=[keyword(arg='lr', value=Constant(value=0.0003))])), Assign(targets=[Name(id='kwargs', ctx=Store())], value=Dict(keys=[Constant(value='max_action'), Constant(value='actor'), Constant(value='actor_optimizer'), Constant(value='discount'), Constant(value='device')], values=[Name(id='max_action', ctx=Load()), Name(id='actor', ctx=Load()), Name(id='actor_optimizer', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='discount', ctx=Load()), Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='---------------------------------------')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Training BC, Env: '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='env', ctx=Load()), conversion=-1), Constant(value=', Seed: '), FormattedValue(value=Name(id='SEED', ctx=Load()), conversion=-1)])], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='---------------------------------------')], keywords=[])), Assign(targets=[Name(id='trainer', ctx=Store())], value=Call(func=Name(id='BC_', ctx=Load()), args=[], keywords=[keyword(value=Name(id='kwargs', ctx=Load()))])), If(test=Compare(left=Attribute(value=Name(id='config', ctx=Load()), attr='load_model', ctx=Load()), ops=[NotEq()], comparators=[Constant(value='')]), body=[Assign(targets=[Name(id='policy_file', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='load_model', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='trainer', ctx=Load()), attr='load_state_dict', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='policy_file', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='actor', ctx=Store())], value=Attribute(value=Name(id='trainer', ctx=Load()), attr='actor', ctx=Load()))], orelse=[]), Expr(value=Call(func=Name(id='wandb_init', ctx=Load()), args=[Call(func=Name(id='asdict', ctx=Load()), args=[Name(id='config', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='evaluations', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='t', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='max_timesteps', ctx=Load())], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='batch', ctx=Store())], value=Call(func=Attribute(value=Name(id='replay_buffer', ctx=Load()), attr='sample', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='batch_size', ctx=Load())], keywords=[])), Assign(targets=[Name(id='batch', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='bEbK', ctx=Load()), attr='to', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='bEbK', ctx=Store()), iter=Name(id='batch', ctx=Load()), ifs=[], is_async=0)])), Assign(targets=[Name(id='log_dict', ctx=Store())], value=Call(func=Attribute(value=Name(id='trainer', ctx=Load()), attr='train', ctx=Load()), args=[Name(id='batch', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Name(id='log_dict', ctx=Load())], keywords=[keyword(arg='step', value=Attribute(value=Name(id='trainer', ctx=Load()), attr='total_it', ctx=Load()))])), If(test=Compare(left=BinOp(left=BinOp(left=Name(id='t', ctx=Load()), op=Add(), right=Constant(value=1)), op=Mod(), right=Attribute(value=Name(id='config', ctx=Load()), attr='eval_freq', ctx=Load())), ops=[Eq()], comparators=[Constant(value=0)]), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Time steps: '), FormattedValue(value=BinOp(left=Name(id='t', ctx=Load()), op=Add(), right=Constant(value=1)), conversion=-1)])], keywords=[])), Assign(targets=[Name(id='eval_scores', ctx=Store())], value=Call(func=Name(id='eval_actor', ctx=Load()), args=[Name(id='env', ctx=Load()), Name(id='actor', ctx=Load())], keywords=[keyword(arg='device', value=Attribute(value=Name(id='config', ctx=Load()), attr='device', ctx=Load())), keyword(arg='n_episodes', value=Attribute(value=Name(id='config', ctx=Load()), attr='n_episodes', ctx=Load())), keyword(arg='seed', value=Attribute(value=Name(id='config', ctx=Load()), attr='seed', ctx=Load()))])), Assign(targets=[Name(id='eval_score', ctx=Store())], value=Call(func=Attribute(value=Name(id='eval_scores', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='normalized_eval_score', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='env', ctx=Load()), attr='get_normalized_score', ctx=Load()), args=[Name(id='eval_score', ctx=Load())], keywords=[]), op=Mult(), right=Constant(value=100.0))), Expr(value=Call(func=Attribute(value=Name(id='evaluations', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='normalized_eval_score', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='---------------------------------------')], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[JoinedStr(values=[Constant(value='Evaluation over '), FormattedValue(value=Attribute(value=Name(id='config', ctx=Load()), attr='n_episodes', ctx=Load()), conversion=-1), Constant(value=' episodes: '), FormattedValue(value=Name(id='eval_score', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='.3f')])), Constant(value=' , D4RL score: '), FormattedValue(value=Name(id='normalized_eval_score', ctx=Load()), conversion=-1, format_spec=JoinedStr(values=[Constant(value='.3f')]))])], keywords=[])), Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Constant(value='---------------------------------------')], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='save', ctx=Load()), args=[Call(func=Attribute(value=Name(id='trainer', ctx=Load()), attr='state_dict', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='config', ctx=Load()), attr='checkpoints_path', ctx=Load()), JoinedStr(values=[Constant(value='checkpoint_'), FormattedValue(value=Name(id='t', ctx=Load()), conversion=-1), Constant(value='.pt')])], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='wandb', ctx=Load()), attr='log', ctx=Load()), args=[Dict(keys=[Constant(value='d4rl_normalized_score')], values=[Name(id='normalized_eval_score', ctx=Load())])], keywords=[keyword(arg='step', value=Attribute(value=Name(id='trainer', ctx=Load()), attr='total_it', ctx=Load()))]))], orelse=[])], orelse=[])], decorator_list=[Call(func=Attribute(value=Name(id='pyrallis', ctx=Load()), attr='wrap', ctx=Load()), args=[], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='train', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])