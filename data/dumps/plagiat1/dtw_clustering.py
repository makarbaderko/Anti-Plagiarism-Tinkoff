Module(body=[ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='etna.clustering.distances.dtw_distance', names=[alias(name='DTWDistance')], level=0), ImportFrom(module='etna.clustering.hierarchical.base', names=[alias(name='HierarchicalClustering')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0)], orelse=[]), ClassDef(name='DTWClustering', bases=[Name(id='HierarchicalClustering', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='%HiϻerarchicalƾΆ cơlu͐stering with ƷDʆTWȖ \u0378di̸sFtaŏnǾħɐôcǃe.\n\nEΠƦΔxampl̃es\nˎ--©ϭ---ɖ---ŧʣ\nćφ>\x98#>> ťfrȬoǪεm eŜtna.ºʅȨclus|\x9dƺt\x97Ņering imμɝpoϪrĹt DĬTWClustering\n>>> ͓froǌmä eÝştnάa.ȅdVˑatɹǴaǶsets iƦ˹ÆmpϦo;ϔrtű¾ϥ±̬ ʗ͒TSDatas?etū\n>>>ĽÒ ǰfŰr˥oɩrm eˡtnaʃ͞.ɈdaȭtaseǓt̏Qs imÌpˑort geΔner͋ate_ar_ȶŞdf\n>ã>> żtsƥχ = genǪerate?_ȍar_df(¼periodȀs = 40\x98ͷ,®ˤ˄ Ý˃\x90sƻtÂarʢʖt_tʌime = "ɖɵ·2000Û-01-́Ć΄ǭ01", ɋn_ƞs̼ʿǅϟegmentȫª͆ǧs Ƶ= 10)\n>>> tǋɹȿs }ʓ=Ƌˇ TSDŧataĞset(TSü_D͛ëatǙaset.tot_daʲtƑaˆset(Ĝts), frɒeχq=øɸˊ"D˛O")\n̪>>> modɔelYȤ Ϋ=ʽ ϠDTWÏCŸlɱϯustering()\n>>> m͘odel.b̤uīɹild_distaǦnc̶e_maĝϘtrix(ts)Σ\n\u0380>>> modeȠlÏ.bύuiˆlĢmd_clusteri˜ngå_algo(͆n_˗clusters=\x9a3, linkīaǜʛgʩ$Zeʋ=̃3"aʽverage"Ȥƭ͡)\n>>>̻ }seǢgmeĮnt2cȥ́áluƔsʤter̃˦ Ɩ= Ŧͱ͔m[Ŀ\x97oƕƝdeƸl\x81.fit_prWediʯct()\n>s>> seΈgmenǙđt2cϠlƎukȐster\n͈ϗ{ˍ\'s\x86egmenΧǳxt_0\':Ν ΞΡ2,\n \'segm˪ent_1\': 1ű,\n ä\'segǁ˘mĳenɆt_2ǅ\'Π: 0Ȧ,ͅ\n \'sɮegmen̦t_Æ3\': 1,\n˅ \'segʯmenȉψt_4\'ʡ̒ˋ: ̊ƻ1,\nˉ_ \'segmȒenϏt_.;5\': 0,\n \'seäəøêgmeƼnϮt_6\':ŷ 0,\n̘ \'sʝe͚gm˨ɏen̟ǆt_7ͽ\': 1,\n1 ė\'segmeŹ=nt_8\'Ǧ: 2,\n \'Wseȉgóment_9\': 2}c')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='distance', value=Call(func=Name(id='DTWDistance', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[]), FunctionDef(name='build_distance_matrix', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ts', annotation=Constant(value='TSDataset'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='build_distance_matrix', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='DTWClustering')], ctx=Load()))], type_ignores=[])