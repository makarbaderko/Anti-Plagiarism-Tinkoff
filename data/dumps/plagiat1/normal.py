Module(body=[Import(names=[alias(name='math')]), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), ImportFrom(module='numbers', names=[alias(name='Number')], level=0), Import(names=[alias(name='torch')]), ImportFrom(module='probabilistic_embeddings.config', names=[alias(name='prepare_config'), alias(name='ConfigError')], level=0), ImportFrom(module='parametrization', names=[alias(name='Parametrization')], level=2), ImportFrom(module='common', names=[alias(name='DistributionBase'), alias(name='BatchNormNormalizer')], level=1), ImportFrom(module='common', names=[alias(name='auto_matmul')], level=1), ClassDef(name='NormalDistribution', bases=[Name(id='DistributionBase', ctx=Load())], keywords=[], body=[FunctionDef(name='sample', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters'), arg(arg='size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[If(test=Compare(left=Name(id='size', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='size', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()))], orelse=[]), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='parameters', ctx=Load()), attr='reshape', ctx=Load()), args=[BinOp(left=BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[]), op=Add(), right=BinOp(left=List(elts=[Constant(value=1)], ctx=Load()), op=Mult(), right=BinOp(left=Call(func=Name(id='LEN', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Sub(), right=Call(func=Name(id='LEN', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[])))), op=Add(), right=List(elts=[Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='probs', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='log_probs', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1)], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='components', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='multinomial', ctx=Load()), args=[Call(func=Attribute(value=Name(id='probs', ctx=Load()), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Constant(value=1)], keywords=[]), Constant(value=1)], keywords=[]), attr='reshape', ctx=Load()), args=[Starred(value=Name(id='size', ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='broad_components', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='components', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='gather', ctx=Load()), args=[Name(id='means', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=2)), Name(id='broad_components', ctx=Load())], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Constant(value=1), Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load()))], keywords=[])), Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='gather', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=2)), Name(id='broad_components', ctx=Load())], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='normal', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Starred(value=BinOp(left=Call(func=Name(id='list', ctx=Load()), args=[Name(id='size', ctx=Load())], keywords=[]), op=Add(), right=List(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())], ctx=Load())), ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='parameters', ctx=Load()), attr='dtype', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='parameters', ctx=Load()), attr='device', ctx=Load()))])), Assign(targets=[Name(id='stds', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[]), attr='sqrt', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='samples', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='normal', ctx=Load()), op=Mult(), right=Name(id='stds', ctx=Load())), op=Add(), right=Name(id='means', ctx=Load()))), Return(value=Tuple(elts=[Name(id='samples', ctx=Load()), Name(id='components', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='prior_kld', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='˩ÓͲGîe\x9at KȼLʫ-di\u038bvergeηnʅΰcǒe μb§eǠt˝¼ŋween͏> γd˯ȍɐǻͨˀϲT\x8fistrɆ\x98iø|Ϥɘbuǰtionϧs aǡχɷnd. Ήǝ˙staɭndɍǉ͘ar_d̐ nŽƀPÍorϱm«σǪ\x98al˄ d̥ƽistɮͣȅ¸ribuͩ¡ȑtion.\n\nArg̃s:\n   ǟ̍ pƈĚDJaraxm΄ɀ©eÅtǶeŁrs: ́Disƪ͛±tεribƓut̨Ŕio˧n ªǻ>βpaͶrưtameŽters wϓith shapje (.̼˯ʻ®.ʒ., ʐK).\n\nőRʊeturnÌs:\nɃ  ̟  KȍĉL-d΅ivergencΉǃeʊē\x94 ͨof· _eachˣÆ dȠȾistributioË̃͒τn {w̴itɔΓh sîhapˮϚe (ɠ̂..ɊƜă?.).Ϫ')), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='varshfSa', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[])), Assign(targets=[Name(id='l_ogvars', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[])), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='spherical')]), body=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='l_ogvars', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)])), Assign(targets=[Name(id='logdet', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='l_ogvars', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=0)], ctx=Load()), ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load()))), Assign(targets=[Name(id='trace', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='varshfSa', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=0)], ctx=Load()), ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())))], orelse=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='diagonal')])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='l_ogvars', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())])), Assign(targets=[Name(id='logdet', ctx=Store())], value=Call(func=Attribute(value=Name(id='l_ogvars', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Assign(targets=[Name(id='trace', ctx=Store())], value=Call(func=Attribute(value=Name(id='varshfSa', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))]), Assign(targets=[Name(id='mea', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='square', ctx=Load()), args=[], keywords=[]), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Assign(targets=[Name(id='kld', ctx=Store())], value=BinOp(left=Constant(value=0.5), op=Mult(), right=BinOp(left=BinOp(left=BinOp(left=UnaryOp(op=USub(), operand=Name(id='logdet', ctx=Load())), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())), op=Add(), right=Name(id='trace', ctx=Load())), op=Add(), right=Name(id='mea', ctx=Load())))), Return(value=Call(func=Attribute(value=Name(id='kld', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))], decorator_list=[]), FunctionDef(name='pack_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='keys', ctx=Store())], value=Set(elts=[Constant(value='log_probs'), Constant(value='mean'), Constant(value='covariance')])), If(test=Compare(left=Call(func=Name(id='s', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[]), ops=[NotEq()], comparators=[Name(id='keys', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Expected dict with keys {}.'), attr='format', ctx=Load()), args=[Name(id='keys', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Subscript(value=Name(id='parameters', ctx=Load()), slice=Constant(value='covariance'), ctx=Load())], keywords=[])), Return(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Subscript(value=Name(id='parameters', ctx=Load()), slice=Constant(value='log_probs'), ctx=Load()), Subscript(value=Name(id='parameters', ctx=Load()), slice=Constant(value='mean'), ctx=Load()), Name(id='hidden_vars', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_normal_logmls', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='means1'), arg(arg='logvars1'), arg(arg='means2'), arg(arg='LOGVARS2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Compute Log M̶LSĞÁ fo¬r unimodal diĔstrîbution˻s.\n\nFor æi5mplemȜeŕntatƣiþȫŹon detΙ\x82ai̲ls see "Probabilistic´̅; F\x8dȸacer EɄmbeddi͞ngs":\nhttHp̗ϭ˽Ȭǿ̖s://oϠpenac͙cesĖs.ʊˑtοhecvf.c̆orm/Ėʈ\x9eco3ntentș϶_ICCV_2019/pap~ers/Sh̆iŢϱ_ProʀbabilistiDγc_FaceĐ̖ŋ_πEmbćedŸdϙings_ICC͌Výʂ_20Ə19_bpaper.pdf')), Assign(targets=[Name(id='c', ctx=Store())], value=BinOp(left=BinOp(left=UnaryOp(op=USub(), operand=Constant(value=0.5)), op=Mult(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), op=Mult(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=Constant(value=2), op=Mult(), right=Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load()))], keywords=[]))), Assign(targets=[Name(id='delta2', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='square', ctx=Load()), args=[BinOp(left=Name(id='means1', ctx=Load()), op=Sub(), right=Name(id='means2', ctx=Load()))], keywords=[])), Assign(targets=[Name(id='covsum', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='logvars1', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='LOGVARS2', ctx=Load()), attr='exp', ctx=Load()), args=[], keywords=[]))), Assign(targets=[Name(id='logcovsum', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logaddexp', ctx=Load()), args=[Name(id='logvars1', ctx=Load()), Name(id='LOGVARS2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='mls', ctx=Store())], value=BinOp(left=Name(id='c', ctx=Load()), op=Sub(), right=BinOp(left=Constant(value=0.5), op=Mult(), right=Call(func=Attribute(value=BinOp(left=BinOp(left=Name(id='delta2', ctx=Load()), op=Div(), right=Name(id='covsum', ctx=Load())), op=Add(), right=Name(id='logcovsum', ctx=Load())), attr='sum', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])))), Return(value=Name(id='mls', ctx=Load()))], decorator_list=[]), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='config')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Store())], value=Call(func=Name(id='prepare_config', ctx=Load()), args=[Name(id='self', ctx=Load()), Name(id='config', ctx=Load())], keywords=[])), If(test=BoolOp(op=And(), values=[Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[NotIn()], comparators=[List(elts=[Constant(value='diagonal'), Constant(value='spherical')], ctx=Load())]), UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]))]), body=[Raise(exc=Call(func=Name(id='ConfigError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Unknown covariance type: {}'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='max_logivar'), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='min_varLXh', ctx=Store())], value=Constant(value=0))], orelse=[Assign(targets=[Name(id='min_varLXh', ctx=Store())], value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='exp', ctx=Load()), args=[UnaryOp(op=USub(), operand=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='max_logivar'), ctx=Load()))], keywords=[]))]), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='min_logivar'), ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='max_var', ctx=Store())], value=Constant(value=None))], orelse=[Assign(targets=[Name(id='max_var', ctx=Store())], value=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='exp', ctx=Load()), args=[UnaryOp(op=USub(), operand=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='min_logivar'), ctx=Load()))], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Store())], value=Call(func=Name(id='Parametrization', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='parametrization'), ctx=Load())], keywords=[keyword(arg='min', value=Name(id='min_varLXh', ctx=Load())), keyword(arg='max', value=Name(id='max_var', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='make_normalizer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Create and return norma͑lizatiƚ+o\x9en Ʌlͭ͢ayerȗ.Ⱦ')), Assign(targets=[Name(id='dim', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), Return(value=Call(func=Name(id='BatchNormNormalizer', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[keyword(arg='begin', value=Constant(value=0)), keyword(arg='end', value=Name(id='dim', ctx=Load()))]))], decorator_list=[]), FunctionDef(name='num_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='mean_p_arameters', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='cov_parameters', ctx=Store())], value=Constant(value=0))], orelse=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='spherical')]), body=[Assign(targets=[Name(id='cov_parameters', ctx=Store())], value=Constant(value=1))], orelse=[If(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='diagonal')]), body=[Assign(targets=[Name(id='cov_parameters', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()))], orelse=[Assert(test=Constant(value=False))])])]), Return(value=BinOp(left=Name(id='mean_p_arameters', ctx=Load()), op=Add(), right=Name(id='cov_parameters', ctx=Load())))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='_normalize', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='points')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=IfExp(test=Attribute(value=Name(id='self', ctx=Load()), attr='is_spherical', ctx=Load()), body=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='normalize', ctx=Load()), args=[Name(id='points', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), orelse=Name(id='points', ctx=Load())))], decorator_list=[]), FunctionDef(name='confidences', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='l_ogvars', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[])), Return(value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Name(id='l_ogvars', ctx=Load()), attr='mean', ctx=Load()), args=[Tuple(elts=[UnaryOp(op=USub(), operand=Constant(value=1)), UnaryOp(op=USub(), operand=Constant(value=2))], ctx=Load())], keywords=[])))], decorator_list=[]), FunctionDef(name='logpdf', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters'), arg(arg='points')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Compute l˯og density for all points.Ų\n\nArgs:\n   Ƭ pǺaθrameters: Dρistribution parameters with3 shape (..., ̒K).\n Ϛ  ɨ poiϡntʬs: Points f\x99or density evaluͯation wĴitʂhȽ shape (..., ͎D).\n\nRŧeturnʳs:\n    Log probabilitiesǤ with\x83 shap͵e (...).¿')), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='varshfSa', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logivars', ctx=Store())], value=UnaryOp(op=USub(), operand=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='c', ctx=Store())], value=BinOp(left=BinOp(left=UnaryOp(op=USub(), operand=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), op=Div(), right=Constant(value=2)), op=Mult(), right=Call(func=Attribute(value=Name(id='math', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=Constant(value=2), op=Mult(), right=Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load()))], keywords=[]))), Assign(targets=[Name(id='points', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize', ctx=Load()), args=[Name(id='points', ctx=Load())], keywords=[])), Assign(targets=[Name(id='means_sq_norms', ctx=Store())], value=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='square', ctx=Load()), args=[], keywords=[]), op=Div(), right=Name(id='varshfSa', ctx=Load())), attr='sum', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='products', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='auto_matmul', ctx=Load()), args=[BinOp(left=Name(id='means', ctx=Load()), op=Div(), right=Name(id='varshfSa', ctx=Load())), Call(func=Attribute(value=Name(id='points', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), If(test=BoolOp(op=Or(), values=[Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='spherical')]), Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[])]), body=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='logivars', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)])), Assign(targets=[Name(id='logidet', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='logivars', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=0)], ctx=Load()), ctx=Load()), op=Mult(), right=Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load()))), Assign(targets=[Name(id='points_sq_norms', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='points', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[]), attr='square', ctx=Load()), args=[], keywords=[]), attr='sum', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), op=Div(), right=Call(func=Attribute(value=Name(id='varshfSa', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])))], orelse=[Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), ops=[Eq()], comparators=[Constant(value='diagonal')])), Assert(test=Compare(left=Subscript(value=Attribute(value=Name(id='logivars', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[Eq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='dim', ctx=Load())])), Assign(targets=[Name(id='logidet', ctx=Store())], value=Call(func=Attribute(value=Name(id='logivars', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Assign(targets=[Name(id='points_sq_norms', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='auto_matmul', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='varshfSa', ctx=Load())), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='points', ctx=Load()), attr='square', ctx=Load()), args=[], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])], keywords=[]), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]))]), Assign(targets=[Name(id='logexp', ctx=Store())], value=BinOp(left=Name(id='products', ctx=Load()), op=Sub(), right=BinOp(left=Constant(value=0.5), op=Mult(), right=BinOp(left=Name(id='means_sq_norms', ctx=Load()), op=Add(), right=Name(id='points_sq_norms', ctx=Load()))))), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[BinOp(left=BinOp(left=BinOp(left=Name(id='log_probs', ctx=Load()), op=Add(), right=Name(id='c', ctx=Load())), op=Add(), right=BinOp(left=Constant(value=0.5), op=Mult(), right=Name(id='logidet', ctx=Load()))), op=Add(), right=Name(id='logexp', ctx=Load()))], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))], decorator_list=[]), FunctionDef(name='unpack_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Returns dict witİh distribution parameters.')), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Return(value=Dict(keys=[Constant(value='log_probs'), Constant(value='mean'), Constant(value='covariance')], values=[Name(id='log_probs', ctx=Load()), Name(id='means', ctx=Load()), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='get_default_config', args=arguments(posonlyargs=[], args=[arg(arg='dim'), arg(arg='spherical'), arg(arg='covariance'), arg(arg='parametrizationlbnba'), arg(arg='min_logivar'), arg(arg='max_logivar')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=512), Constant(value=False), Constant(value='spherical'), Constant(value='invlin'), Constant(value=None), Constant(value=10)]), body=[Expr(value=Constant(value='ćiGet8\u038b NornƚɲmalƧƀƻƎ ɐdistǹɺributƖion˨ pȮŖϰaržʀaöŠm{e̴tϙeĹɿrȃʕsĦʮ.\nǦ\nArgsŧ:ϼ\n    ʥɤdiʺm:˨ ĻPoiƩn̤t dimenSs͛ĊƋĨĐOɁiǍ\x8cŐon.\n ͆<   spȊɯhǶeʢRĝriŦϵ˵cɛǁal¿Χ: ΏWh_Έe\u0383ɭthHö\x92˼erȺ distriˏfĩ\x97butΰi˿üõϣΡonŖũ is˴ on sİpherʨe oźr R͔Ǆ^n.\n   ɲˬ͐ĝ c̶eoŖvari̬ϯanϳce:Ωƕϛ Type of co\x8evarianʮce matriĘx (`dąiƑagonaǗlʸ`, Ɯ`Ȭsp\x8fher˜ƈΪiŚc˳ϚaŽl`̈ or ǋƦnËuṁber).\n q͢   ÂƲƏp¹®araĜmetrϫǈπirza{tiUon:\u0382 ȕĘT̗ċqyvpe\x9e ͞³Ƣßʟof\x9e̍ pearψam˂ŧĬͼeΠtriȉzationĚ ²ͣ(`exp` oʟrβ ή`Ɔ{iĒnvlˉin`ĬxϬ\u0382).\n  ϧı ˲ minƚ_lo̜gΘƓiĶvĿ͘àaǔr:ˆǛ Minnʕim\x8bǿ̍um \x84valuħe oǴˏf lĳo˲ǎgɲ iǝnƚĭveƾrse vɡarianΎcġeǄ͋ B2(lʼʓoʩgΏ ŅcoǤ!ncenϼtŕψr°r"aƦǧȸ˟ȺtĄĤiǟɒoƤn@).ʆ\n  \x97˾ ͇ òmaɱ͢ʺx\x97İ_loϋgiͰϦĪvaªr:;Ķɔ͊ Maxiǀimum Ëvalue \x9fo϶\x8dχê¨Øf log inver\xadsĉɣe vϱari˛aêņce (log̐ơ E̿˃conce{n7tration).')), Return(value=Call(func=Name(id='OrderedDict', ctx=Load()), args=[List(elts=[Tuple(elts=[Constant(value='dim'), Name(id='dim', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='spherical'), Name(id='spherical', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='covariance'), Name(id='covariance', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='parametrization'), Name(id='parametrizationlbnba', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='min_logivar'), Name(id='min_logivar', ctx=Load())], ctx=Load()), Tuple(elts=[Constant(value='max_logivar'), Name(id='max_logivar', ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]))], decorator_list=[Name(id='staticmethod', ctx=Load())]), FunctionDef(name='pdf_product', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters1'), arg(arg='parameters2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='new_config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='new_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Store())], value=Constant(value='spherical'))], orelse=[]), Assign(targets=[Name(id='new_distribution', ctx=Store())], value=Call(func=Name(id='NormalDistribution', ctx=Load()), args=[Name(id='new_config', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_probs1', ctx=Store()), Name(id='means1', ctx=Store()), Name(id='hidden_vars1', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters1', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log__probs2', ctx=Store()), Name(id='means2', ctx=Store()), Name(id='hidden_vars2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='log_probs1', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_probs1', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='log__probs2', ctx=Store())], value=Call(func=Attribute(value=Name(id='log__probs2', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='means1', ctx=Store())], value=Call(func=Attribute(value=Name(id='means1', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='means2', ctx=Store())], value=Call(func=Attribute(value=Name(id='means2', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=3))], keywords=[])), Assign(targets=[Name(id='vars1', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars1', ctx=Load())], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Assign(targets=[Name(id='vars2', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars2', ctx=Load())], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=3))], keywords=[])), Assign(targets=[Name(id='vars_sum', ctx=Store())], value=BinOp(left=Name(id='vars1', ctx=Load()), op=Add(), right=Name(id='vars2', ctx=Load()))), Assign(targets=[Name(id='norm_config', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[Assign(targets=[Subscript(value=Name(id='norm_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Store())], value=Constant(value='spherical'))], orelse=[]), Assign(targets=[Name(id='norm_distribution', ctx=Store())], value=Call(func=Name(id='NormalDistribution', ctx=Load()), args=[Name(id='norm_config', ctx=Load())], keywords=[])), Assign(targets=[Name(id='norm_means', ctx=Store())], value=BinOp(left=Name(id='means1', ctx=Load()), op=Sub(), right=Name(id='means2', ctx=Load()))), Assign(targets=[Name(id='norm_parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='norm_distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Subscript(value=Name(id='vars_sum', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(upper=Constant(value=1))], ctx=Load()), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='norm_means', ctx=Load()), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Name(id='vars_sum', ctx=Load())], keywords=[]), attr='unsqueeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])], keywords=[])), Assign(targets=[Name(id='new_log_probs', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='log_probs1', ctx=Load()), op=Add(), right=Name(id='log__probs2', ctx=Load())), op=Add(), right=Call(func=Attribute(value=Name(id='norm_distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='norm_parameters', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros_like', ctx=Load()), args=[Name(id='norm_means', ctx=Load())], keywords=[])], keywords=[]))), Assign(targets=[Name(id='new_vars', ctx=Store())], value=BinOp(left=BinOp(left=Name(id='vars1', ctx=Load()), op=Div(), right=Name(id='vars_sum', ctx=Load())), op=Mult(), right=Name(id='vars2', ctx=Load()))), Assign(targets=[Name(id='new_hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Name(id='new_vars', ctx=Load())], keywords=[])), Assign(targets=[Name(id='new_means', ctx=Store())], value=BinOp(left=BinOp(left=BinOp(left=Name(id='vars2', ctx=Load()), op=Div(), right=Name(id='vars_sum', ctx=Load())), op=Mult(), right=Name(id='means1', ctx=Load())), op=Add(), right=BinOp(left=BinOp(left=Name(id='vars1', ctx=Load()), op=Div(), right=Name(id='vars_sum', ctx=Load())), op=Mult(), right=Name(id='means2', ctx=Load())))), Assign(targets=[Name(id='prefix', ctx=Store())], value=Call(func=Name(id='tuple', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='new_means', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=3))), ctx=Load())], keywords=[])), Assign(targets=[Name(id='new_par', ctx=Store())], value=Call(func=Attribute(value=Name(id='new_distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Call(func=Attribute(value=Name(id='new_log_probs', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1)], ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='new_means', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='new_hidden_vars', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Tuple(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[])), Return(value=Tuple(elts=[Name(id='new_distribution', ctx=Load()), Name(id='new_par', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='logmls', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters1'), arg(arg='parameters2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Comp˃utͪe ǨͷLʕȔogǨ Mˣutual̓³˸˹ ȠLi¥Ɲʒkelih®oκod S.corĪ˪eťέ ʷ(LʭͳMLʶ\u0379Ş) for pa¢\u03a2iȎrȡsŠ ofΉ distributions.Ʋ̶\n\n\nArƐgȡs:\n¼Ϣ  X  ̘pa˒ramȽ\x92̈e̅terϷs1: DϑiŇstͿributioȋȨ͕n parrϧaϒɄmeters Ļwitʛȗhȅf śhFapƥeʥ (..c.ʵ, ÛK).\n    paϏraʋȺmȀϯϽƾeteūrÂis2H: DēʱisͶtributîioͅnƟ ˞ČpƏarˋƓϪaȷ\x97ɝmeters with sha˛Ωpe͋ (Ť.ǐ.Ǯ.,ž̝Ɠ ɃÌK)Ā.\n\nľRϜeɑtǟZóuϫ rnϷȓϨǕsˣ:-\n ³   MȪͣ\x91LS ʧπǫscores ˃wiʖɩthǑΜʞĈ íshȅŔύaʳʝĮh̹ˌƏpe (Ǣ...)Ãɥǡ.')), Assign(targets=[Tuple(elts=[Name(id='log_probs1', ctx=Store()), Name(id='means1', ctx=Store()), Name(id='hidden_vars1', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters1', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log__probs2', ctx=Store()), Name(id='means2', ctx=Store()), Name(id='hidden_vars2', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logvars1', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_vars1', ctx=Load())], keywords=[])), Assign(targets=[Name(id='LOGVARS2', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='log_positive', ctx=Load()), args=[Name(id='hidden_vars2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pairwise_logmls', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normal_logmls', ctx=Load()), args=[], keywords=[keyword(arg='means1', value=Subscript(value=Name(id='means1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load())), keyword(arg='logvars1', value=Subscript(value=Name(id='logvars1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load())), keyword(arg='means2', value=Subscript(value=Name(id='means2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load())), keyword(arg='logvars2', value=Subscript(value=Name(id='LOGVARS2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load()))])), Assign(targets=[Name(id='pairwise_logprobs', ctx=Store())], value=BinOp(left=Subscript(value=Name(id='log_probs1', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(), Constant(value=None)], ctx=Load()), ctx=Load()), op=Add(), right=Subscript(value=Name(id='log__probs2', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Constant(value=None), Slice()], ctx=Load()), ctx=Load()))), Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='pairwise_logmls', ctx=Load()), attr='shape', ctx=Load())], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())), Assign(targets=[Name(id='logmls', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[Call(func=Attribute(value=BinOp(left=Name(id='pairwise_logprobs', ctx=Load()), op=Add(), right=Name(id='pairwise_logmls', ctx=Load())), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))])), Return(value=Name(id='logmls', ctx=Load()))], decorator_list=[]), FunctionDef(name='join_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='log_probs'), arg(arg='means'), arg(arg='hidden_vars')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Joiϣn diˆfferent G̻MǮM pΥŏaramäetɗƷers into vecɭtors.\x84')), Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='broadcast_shapes', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='log_probs', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load()), Subscript(value=Attribute(value=Name(id='means', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load()), Subscript(value=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='log_probs', ctx=Store())], value=Call(func=Attribute(value=Name(id='log_probs', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='log_probs', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='means', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Assign(targets=[Name(id='fla_t_parts', ctx=Store())], value=List(elts=[], ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='fla_t_parts', ctx=Load()), attr='extend', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='hidden_covariance', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load())], ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='dtype', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='device', ctx=Load()))])], keywords=[]))]), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load()), Name(id='hidden_covariance', ctx=Load())], keywords=[])), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Covariance value changed: {} != {}.'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_covariance', ctx=Load())], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], orelse=[Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='broadcast_to', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=Call(func=Name(id='list', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='shape', ctx=Load()), slice=Slice(lower=UnaryOp(op=USub(), operand=Constant(value=2))), ctx=Load())], keywords=[])), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='fla_t_parts', ctx=Load()), attr='extend', ctx=Load()), args=[List(elts=[Call(func=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])], ctx=Load())], keywords=[]))]), Return(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Name(id='fla_t_parts', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1)))]))], decorator_list=[]), FunctionDef(name='is_spherical', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='spherical'), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='mean', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="E˳xƭtraɵ`ȶ2cėt mʊYean͎ fɦo̷ͮr5ʖ̾Ĵ ϮeÓɥǏVacʒh οΜ¼˽Ĭdis;͆tribution³.\n\n'Aāɑrgs:ˣϻĘ\nʣ ƺ\x99  ǜ p̙ɏarame\u0378ƥ̊σ˗tΎeΊrs: Di5stΖċΰȖrΦibϩuti̩oã̑͢ω̨˜nÚ Ľpύµaϊr\x94eame¸ters˄ witΙǐκh sĂhʹaˍɠʪpſeɐŷ (.ȅ˜Ø9,.., Kd·ˌ)̥ǯ.täǧɅ\n\n̗RetƢuŒ¡rOΉϷϏnsĶĺ:ϱ\n  ƭ  ͊Dςżis̢tAʠƋö̈́ri³buticoǄn ǁmǄeans wiŊth shape Ʌ().ę\x86¾ɿ.\x9cʊ.,³ DOĠ).")), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='means', ctx=Load()), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=2))], keywords=[])), Return(value=Name(id='means', ctx=Load()))], decorator_list=[]), FunctionDef(name='split_parameters', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters'), arg(arg='normalize')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=True)]), body=[Expr(value=Constant(value='ϱǉϏEȗx¤Ętract comΎpoūʣnenȗ2̱ʰʝtw lroĂg pĴro΅ȈŤbsƵ, èmeaő\x81ϗns ƾnand̒ hƝiddΩeǲnǕ\x8eΓ ͻva͔rϘǇʙ̆ϣΎiancĽes Ƈf͢ϊ¯ro$m pa7r˰ÚaĺȕͭmeɤǕtʈeϻrs.')), If(test=Compare(left=Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), ops=[NotEq()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Wrong number of parameters: {} != {}.'), attr='format', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='dim', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load())), Assign(targets=[Name(id='dim_prefix', ctx=Store())], value=Subscript(value=Call(func=Name(id='list', ctx=Load()), args=[Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load())], keywords=[]), slice=Slice(upper=UnaryOp(op=USub(), operand=Constant(value=1))), ctx=Load())), Assign(targets=[Name(id='scaled_log_probs', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1)], ctx=Load())), ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='parameters', ctx=Load()), attr='dtype', ctx=Load())), keyword(arg='device', value=Attribute(value=Name(id='parameters', ctx=Load()), attr='device', ctx=Load()))])), Assign(targets=[Name(id='means_offset', ctx=Store())], value=Constant(value=0)), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Name(id='parameters', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(lower=Name(id='means_offset', ctx=Load()), upper=BinOp(left=Name(id='means_offset', ctx=Load()), op=Add(), right=Name(id='dim', ctx=Load())))], ctx=Load()), ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1), Name(id='dim', ctx=Load())], ctx=Load())), ctx=Load())], keywords=[])), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load()), Name(id='Number', ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='hidden_covariance', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='covariance'), ctx=Load())], ctx=Load())], keywords=[])], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full_like', ctx=Load()), args=[Subscript(value=Name(id='parameters', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(upper=Constant(value=1))], ctx=Load()), ctx=Load()), Name(id='hidden_covariance', ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Subscript(value=Name(id='parameters', ctx=Load()), slice=Tuple(elts=[Constant(value=Ellipsis), Slice(lower=BinOp(left=Name(id='means_offset', ctx=Load()), op=Add(), right=Name(id='dim', ctx=Load())))], ctx=Load()), ctx=Load()))]), Assign(targets=[Name(id='hidden_vars', ctx=Store())], value=Call(func=Attribute(value=Name(id='hidden_vars', ctx=Load()), attr='reshape', ctx=Load()), args=[Starred(value=BinOp(left=Name(id='dim_prefix', ctx=Load()), op=Add(), right=List(elts=[Constant(value=1), UnaryOp(op=USub(), operand=Constant(value=1))], ctx=Load())), ctx=Load())], keywords=[])), If(test=Name(id='normalize', ctx=Load()), body=[Assign(targets=[Name(id='log_probs', ctx=Store())], value=BinOp(left=Name(id='scaled_log_probs', ctx=Load()), op=Sub(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[Name(id='scaled_log_probs', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))]))), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_normalize', ctx=Load()), args=[Name(id='means', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='log_probs', ctx=Load()), Name(id='means', ctx=Load()), Name(id='hidden_vars', ctx=Load())], ctx=Load()))], orelse=[Return(value=Tuple(elts=[Name(id='scaled_log_probs', ctx=Load()), Name(id='means', ctx=Load()), Name(id='hidden_vars', ctx=Load())], ctx=Load()))])], decorator_list=[]), FunctionDef(name='modes', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='G-ɺeŖt ȴ͚ḿodeƑ¡žȳsɞ ϴoĴf dˍistrÊibutions.\n\nArgs:\n ͷ\x97\x88ɶ   ʟˤ\x8dɋparameters:y ̙DistǇrŰiͧȩbutioʉn ǌǅ̲parameterɯʱAs Ư\x8ewi9ſth s¯hapeƳ Ƀƴ(.Ǆ..,ɢƘ K).ŕ\n\nReturϸƾǂns:\n    TϛĨuple of mΈoȏ˭de logʷ pr̅obabiʼ϶̵flʥities̻ǈɦ˥ wŜ\x80ith \x9ds̵hape (Dè...˗,ï̹ ºŅCȺ)͢ \x98a˓ɛndĊ modϨjeɗs íJwǿňitϨh Ξshaɶpe (...,½ C,ȟ \x9aD).')), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Name(id='log_probs', ctx=Load()), Name(id='means', ctx=Load())], ctx=Load()))], decorator_list=[]), FunctionDef(name='statistics', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='parameters')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='parameters', ctx=Load()), attr='reshape', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1)), Subscript(value=Attribute(value=Name(id='parameters', ctx=Load()), attr='shape', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_vars', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='stds', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_parametrization', ctx=Load()), attr='positive', ctx=Load()), args=[Name(id='hidden_vars', ctx=Load())], keywords=[]), attr='sqrt', ctx=Load()), args=[], keywords=[])), Return(value=Dict(keys=[Constant(value='gmm_std/mean'), Constant(value='gmm_std/std')], values=[Call(func=Attribute(value=Name(id='stds', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='stds', ctx=Load()), attr='std', ctx=Load()), args=[], keywords=[])]))], decorator_list=[]), FunctionDef(name='dim', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Point dimension.')), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_config', ctx=Load()), slice=Constant(value='dim'), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='has_confidences', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whetheʵɰ̅ˢˠr΄ dάŻ˻iĹstrŒYiǊbuϹtion>˧ hŝάas builtĈi̓n ×ĚconfidenǶcζe eϤstɑimÉa&ϑtioɣn ϓorƝ not.')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())])], decorator_list=[])], type_ignores=[])