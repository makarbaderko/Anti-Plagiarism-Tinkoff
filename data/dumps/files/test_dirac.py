Module(body=[Import(names=[alias(name='itertools')]), Import(names=[alias(name='math')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='probabilistic_embeddings.layers.distribution', names=[alias(name='DiracDistribution')], level=0), ClassDef(name='TestDiracDistribution', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_sampling', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test MLS is equal to estimation by sampling.')), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='DiracDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Constant(value=2)]))])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='sample', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='sample', ctx=Load()), args=[Name(id='parameters', ctx=Load()), List(elts=[Constant(value=50), Constant(value=10)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='delta', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=BinOp(left=Name(id='sample', ctx=Load()), op=Sub(), right=Name(id='means', ctx=Load())), attr='abs', ctx=Load()), args=[], keywords=[]), attr='max', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Name(id='delta', ctx=Load()), Constant(value=0)], keywords=[]))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])