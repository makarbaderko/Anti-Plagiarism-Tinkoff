Module(body=[ImportFrom(module='abc', names=[alias(name='ABC'), alias(name='abstractmethod')], level=0), Import(names=[alias(name='faiss')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ClassDef(name='NumpyIndexL2', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dim'), arg(arg='batch_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=16)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Store())], value=Name(id='batch_size', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='items')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='concatenate', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), Name(id='items', ctx=Load())], ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Store())], value=Name(id='items', ctx=Load()))], decorator_list=[]), FunctionDef(name='search', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='queries'), arg(arg='k')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='k', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Expected k > 0, got {}.'), attr='format', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='Empty index')], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='zeros', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='queries', ctx=Load())], keywords=[])], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='np', ctx=Load()), attr='int64', ctx=Load()))])), Assign(targets=[Name(id='distances', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[BinOp(left=Name(id='queries', ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Constant(value=0), ctx=Load()))], keywords=[keyword(arg='axis', value=Constant(value=1))]))], orelse=[Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='k', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='indices', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='distances', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='queries', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='batch', ctx=Store())], value=Subscript(value=Name(id='queries', ctx=Load()), slice=Slice(lower=Name(id='i', ctx=Load()), upper=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='scores', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='batch', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load()))], keywords=[keyword(arg='axis', value=Constant(value=2))])), If(test=Compare(left=Name(id='k', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Expr(value=Call(func=Attribute(value=Name(id='indices', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argmin', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1))]), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Expr(value=Call(func=Attribute(value=Name(id='indices', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='argpartition', ctx=Load()), args=[Name(id='scores', ctx=Load()), Tuple(elts=[Constant(value=1), BinOp(left=Name(id='k', ctx=Load()), op=Sub(), right=Constant(value=1))], ctx=Load())], keywords=[keyword(arg='axis', value=Constant(value=1))]), slice=Tuple(elts=[Slice(), Slice(upper=Name(id='k', ctx=Load()))], ctx=Load()), ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='distances', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='take_along_axis', ctx=Load()), args=[Name(id='scores', ctx=Load()), Subscript(value=Name(id='indices', ctx=Load()), slice=UnaryOp(op=USub(), operand=Constant(value=1)), ctx=Load()), Constant(value=1)], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='concatenate', ctx=Load()), args=[Name(id='indices', ctx=Load()), Constant(value=0)], keywords=[])), Assign(targets=[Name(id='distances', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='concatenate', ctx=Load()), args=[Name(id='distances', ctx=Load()), Constant(value=0)], keywords=[]))]), Return(value=Tuple(elts=[Name(id='distances', ctx=Load()), Name(id='indices', ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='TorchIndexL2', bases=[], keywords=[], body=[FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dim'), arg(arg='batch_size')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=16)]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Store())], value=Name(id='batch_size', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='reset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Store())], value=Constant(value=None))], decorator_list=[]), FunctionDef(name='add', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='items')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_from_numpy', ctx=Load()), args=[Name(id='items', ctx=Load())], keywords=[])), If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Name(id='items', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), Name(id='items', ctx=Load())], ctx=Load()), Constant(value=0)], keywords=[]))], orelse=[]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Store())], value=Name(id='items', ctx=Load()))], decorator_list=[]), FunctionDef(name='search', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='queries'), arg(arg='k')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='queries', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_from_numpy', ctx=Load()), args=[Name(id='queries', ctx=Load())], keywords=[])), If(test=Compare(left=Name(id='k', ctx=Load()), ops=[Lt()], comparators=[Constant(value=1)]), body=[Raise(exc=Call(func=Name(id='ValueError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='Expected k > 0, got {}.'), attr='format', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), If(test=BoolOp(op=Or(), values=[Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=0)])]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value='Empty index')], keywords=[]))], orelse=[]), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='queries', ctx=Load())], keywords=[])], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='torch', ctx=Load()), attr='long', ctx=Load()))])), Assign(targets=[Name(id='distances', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[BinOp(left=Name(id='queries', ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Constant(value=0), ctx=Load()))], keywords=[keyword(arg='dim', value=Constant(value=1))]))], orelse=[Assign(targets=[Name(id='k', ctx=Store())], value=Call(func=Name(id='min', ctx=Load()), args=[Name(id='k', ctx=Load()), Call(func=Name(id='len', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='indices', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='distances', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=0), Call(func=Name(id='len', ctx=Load()), args=[Name(id='queries', ctx=Load())], keywords=[]), Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='batch', ctx=Store())], value=Subscript(value=Name(id='queries', ctx=Load()), slice=Slice(lower=Name(id='i', ctx=Load()), upper=BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_batch_size', ctx=Load()))), ctx=Load())), Assign(targets=[Name(id='scores', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[BinOp(left=Subscript(value=Name(id='batch', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None), Slice()], ctx=Load()), ctx=Load()), op=Sub(), right=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_items', ctx=Load()), slice=Tuple(elts=[Constant(value=None), Slice(), Slice()], ctx=Load()), ctx=Load()))], keywords=[keyword(arg='dim', value=Constant(value=2))])), If(test=Compare(left=Name(id='k', ctx=Load()), ops=[Eq()], comparators=[Constant(value=1)]), body=[Assign(targets=[Tuple(elts=[Name(id='batch_scores', ctx=Store()), Name(id='batch_indices', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='min', ctx=Load()), args=[Name(id='scores', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='indices', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='batch_indices', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='distances', ctx=Load()), attr='append', ctx=Load()), args=[Subscript(value=Name(id='batch_scores', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=None)], ctx=Load()), ctx=Load())], keywords=[]))], orelse=[Assign(targets=[Tuple(elts=[Name(id='batch_scores', ctx=Store()), Name(id='batch_indices', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='topk', ctx=Load()), args=[Name(id='scores', ctx=Load()), Name(id='k', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1)), keyword(arg='largest', value=Constant(value=False))])), Expr(value=Call(func=Attribute(value=Name(id='indices', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='batch_indices', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='distances', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='batch_scores', ctx=Load())], keywords=[]))])], orelse=[]), Assign(targets=[Name(id='indices', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Name(id='indices', ctx=Load()), Constant(value=0)], keywords=[])), Assign(targets=[Name(id='distances', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='cat', ctx=Load()), args=[Name(id='distances', ctx=Load()), Constant(value=0)], keywords=[]))]), Return(value=Tuple(elts=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distances', ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Call(func=Attribute(value=Name(id='indices', ctx=Load()), attr='cpu', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='_from_numpy', args=arguments(posonlyargs=[], args=[arg(arg='array')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='tensor', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='from_numpy', ctx=Load()), args=[Name(id='array', ctx=Load())], keywords=[])), If(test=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='cuda', ctx=Load()), attr='is_available', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='tensor', ctx=Store())], value=Call(func=Attribute(value=Name(id='tensor', ctx=Load()), attr='cuda', ctx=Load()), args=[], keywords=[]))], orelse=[]), Return(value=Name(id='tensor', ctx=Load()))], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[]), ClassDef(name='KNNIndex', bases=[], keywords=[], body=[Assign(targets=[Name(id='BACKENDS', ctx=Store())], value=Dict(keys=[Constant(value='faiss'), Constant(value='numpy'), Constant(value='torch')], values=[Attribute(value=Name(id='faiss', ctx=Load()), attr='IndexFlatL2', ctx=Load()), Name(id='NumpyIndexL2', ctx=Load()), Name(id='TorchIndexL2', ctx=Load())])), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='dim'), arg(arg='backend')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='torch')]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_index', ctx=Store())], value=Call(func=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='BACKENDS', ctx=Load()), slice=Name(id='backend', ctx=Load()), ctx=Load()), args=[Name(id='dim', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__enter__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Attribute(value=Name(id='self', ctx=Load()), attr='_index', ctx=Load()), ops=[Is()], comparators=[Constant(value=None)]), body=[Raise(exc=Call(func=Name(id='RuntimeError', ctx=Load()), args=[Constant(value="Can't create context multiple times.")], keywords=[]))], orelse=[]), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_index', ctx=Load()))], decorator_list=[]), FunctionDef(name='__exit__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='exc_type'), arg(arg='exc_value'), arg(arg='traceback')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_index', ctx=Load()), attr='reset', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_index', ctx=Store())], value=Constant(value=None))], decorator_list=[])], decorator_list=[])], type_ignores=[])