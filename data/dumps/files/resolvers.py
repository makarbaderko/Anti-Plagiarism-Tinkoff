Module(body=[ImportFrom(module='typing', names=[alias(name='List')], level=0), FunctionDef(name='shift', args=arguments(posonlyargs=[], args=[arg(arg='steps_number', annotation=Name(id='int', ctx=Load())), arg(arg='values', annotation=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Shift values for steps_number steps.')), Return(value=ListComp(elt=BinOp(left=Name(id='v', ctx=Load()), op=Add(), right=Name(id='steps_number', ctx=Load())), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Name(id='values', ctx=Load()), ifs=[], is_async=0)]))], decorator_list=[], returns=Subscript(value=Name(id='List', ctx=Load()), slice=Name(id='int', ctx=Load()), ctx=Load())), FunctionDef(name='mult', args=arguments(posonlyargs=[], args=[arg(arg='first', annotation=Name(id='int', ctx=Load())), arg(arg='second', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Multiply arguments.')), Return(value=BinOp(left=Name(id='first', ctx=Load()), op=Mult(), right=Name(id='second', ctx=Load())))], decorator_list=[], returns=Name(id='int', ctx=Load()))], type_ignores=[])