Module(body=[Import(names=[alias(name='os')]), Import(names=[alias(name='pickle')]), ImportFrom(module='collections', names=[alias(name='defaultdict')], level=0), Import(names=[alias(name='jpeg4py')]), Import(names=[alias(name='mxnet', asname='mx')]), Import(names=[alias(name='numpy', asname='np')]), ImportFrom(module='PIL', names=[alias(name='Image')], level=0), ImportFrom(module='io', names=[alias(name='read_yaml'), alias(name='write_yaml')], level=2), ImportFrom(module='common', names=[alias(name='Dataset')], level=1), Assign(targets=[Name(id='CASIA_TESTS', ctx=Store())], value=List(elts=[Constant(value='lfw'), Constant(value='cfp_fp'), Constant(value='cfp_ff'), Constant(value='calfw'), Constant(value='cplfw'), Constant(value='agedb_30')], ctx=Load())), Assign(targets=[Name(id='MS1MV2_TESTS', ctx=Store())], value=List(elts=[Constant(value='lfw'), Constant(value='cfp_fp'), Constant(value='cfp_ff'), Constant(value='calfw'), Constant(value='cplfw'), Constant(value='agedb_30'), Constant(value='vgg2_fp')], ctx=Load())), Assign(targets=[Name(id='MS1MV3_TESTS', ctx=Store())], value=List(elts=[Constant(value='lfw'), Constant(value='cfp_fp'), Constant(value='cfp_ff'), Constant(value='calfw'), Constant(value='cplfw'), Constant(value='agedb_30'), Constant(value='vgg2_fp')], ctx=Load())), FunctionDef(name='imdecode', args=arguments(posonlyargs=[], args=[arg(arg='packed_image')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Return(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='jpeg4py', ctx=Load()), attr='JPEG', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='frombuffer', ctx=Load()), args=[Name(id='packed_image', ctx=Load())], keywords=[keyword(arg='dtype', value=Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load()))])], keywords=[]), attr='decode', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), ClassDef(name='MXNetTrainset', bases=[Name(id='Dataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='PyTorch interface to MXNet serialized training dataset.\n\n    Args:\n        root: Path to the dataset root with images and annotations.\n    ')), Assign(targets=[Name(id='INDEX_FILENAME', ctx=Store())], value=Constant(value='train.idx')), Assign(targets=[Name(id='DATA_FILENAME', ctx=Store())], value=Constant(value='train.rec')), Assign(targets=[Name(id='META_FILENAME', ctx=Store())], value=Constant(value='property')), Assign(targets=[Name(id='LABELS_FILENAME', ctx=Store())], value=Constant(value='labels.yaml')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='root')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Store())], value=Name(id='root', ctx=Load())), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='META_FILENAME', ctx=Load())], keywords=[])], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_num_classes', ctx=Store())], value=Call(func=Name(id='int', ctx=Load()), args=[Subscript(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='fp', ctx=Load()), attr='read', ctx=Load()), args=[], keywords=[]), attr='strip', ctx=Load()), args=[], keywords=[]), attr='split', ctx=Load()), args=[Constant(value=',')], keywords=[]), slice=Constant(value=0), ctx=Load())], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reader', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='MXIndexedRecordIO', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='INDEX_FILENAME', ctx=Load())], keywords=[]), Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='DATA_FILENAME', ctx=Load())], keywords=[]), Constant(value='r')], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_header_end', ctx=Store())], value=Constant(value=1)), Assign(targets=[Tuple(elts=[Attribute(value=Name(id='self', ctx=Load()), attr='_images_end', ctx=Store()), Attribute(value=Name(id='self', ctx=Load()), attr='_pairs_end', ctx=Store())], ctx=Store())], value=Call(func=Name(id='map', ctx=Load()), args=[Name(id='int', ctx=Load()), Subscript(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_record', ctx=Load()), args=[Constant(value=0)], keywords=[]), slice=Constant(value=1), ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_num_images', ctx=Store())], value=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='_images_end', ctx=Load()), op=Sub(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_header_end', ctx=Load()))), Try(body=[Assign(targets=[Name(id='labels_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='LABELS_FILENAME', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Call(func=Name(id='read_yaml', ctx=Load()), args=[Name(id='labels_path', ctx=Load())], keywords=[])], keywords=[]))], handlers=[ExceptHandler(type=Name(id='FileNotFoundError', ctx=Load()), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_labels', ctx=Load()), args=[], keywords=[]))])], orelse=[], finalbody=[])], decorator_list=[]), FunctionDef(name='classification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is classification or matching.')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='openset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is for open-set or closed-set classification.')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='labels', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get dataset labels array.\n\n        Labels are integers in the range [0, N-1].\n        ')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get element of the dataset.\n\n        Returns:\n            Tuple (image, label).\n\n        ')), Assign(targets=[Tuple(elts=[Name(id='image', ctx=Store()), Name(id='label', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_get_record', ctx=Load()), args=[BinOp(left=Name(id='index', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_header_end', ctx=Load()))], keywords=[])), Return(value=Tuple(elts=[Name(id='image', ctx=Load()), Call(func=Name(id='int', ctx=Load()), args=[Name(id='label', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='dump_labels_cache', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Dump labels to dataset folder.')), Assign(targets=[Name(id='labels_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_root', ctx=Load()), Attribute(value=Name(id='self', ctx=Load()), attr='LABELS_FILENAME', ctx=Load())], keywords=[])), Expr(value=Call(func=Name(id='write_yaml', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()), attr='tolist', ctx=Load()), args=[], keywords=[]), Name(id='labels_path', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_labels', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='labels', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='_num_images', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_reader', ctx=Load()), attr='read_idx', ctx=Load()), args=[BinOp(left=Name(id='i', ctx=Load()), op=Add(), right=Attribute(value=Name(id='self', ctx=Load()), attr='_header_end', ctx=Load()))], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='header', ctx=Store()), Name(id='image', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='unpack', ctx=Load()), args=[Name(id='record', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='labels', ctx=Load()), attr='append', ctx=Load()), args=[Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='header', ctx=Load()), attr='label', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='asarray', ctx=Load()), args=[Name(id='labels', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='_get_record', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='i')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_reader', ctx=Load()), attr='read_idx', ctx=Load()), args=[Name(id='i', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='header', ctx=Store()), Name(id='image', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='unpack', ctx=Load()), args=[Name(id='record', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Name(id='len', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]), ops=[Gt()], comparators=[Constant(value=0)]), body=[Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='imdecode', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Tuple(elts=[Name(id='image', ctx=Load()), Attribute(value=Name(id='header', ctx=Load()), attr='label', ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='MXNetValset', bases=[Name(id='Dataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='PyTorch interface to MXNet pairs validation dataset.\n\n    Args:\n        filename: Path to the binary.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='filename')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='filename', ctx=Load()), Constant(value='rb')], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Assign(targets=[Tuple(elts=[Name(id='images', ctx=Store()), Name(id='labels', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pickle', ctx=Load()), attr='load', ctx=Load()), args=[Name(id='fp', ctx=Load())], keywords=[keyword(arg='encoding', value=Constant(value='bytes'))])), Assign(targets=[Name(id='image_shape', ctx=Store())], value=Attribute(value=Call(func=Name(id='imdecode', ctx=Load()), args=[Subscript(value=Name(id='images', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), attr='shape', ctx=Load())), Assign(targets=[Name(id='images', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='stack', ctx=Load()), args=[ListComp(elt=Call(func=Name(id='imdecode', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]), generators=[comprehension(target=Name(id='image', ctx=Store()), iter=Name(id='images', ctx=Load()), ifs=[], is_async=0)])], keywords=[]), attr='reshape', ctx=Load()), args=[Tuple(elts=[Call(func=Name(id='len', ctx=Load()), args=[Name(id='labels', ctx=Load())], keywords=[]), Constant(value=2), Starred(value=Name(id='image_shape', ctx=Load()), ctx=Load())], ctx=Load())], keywords=[]))]), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_images', ctx=Store())], value=Name(id='images', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Store())], value=Name(id='labels', ctx=Load()))], decorator_list=[]), FunctionDef(name='classification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is classification or matching.')), Return(value=Constant(value=False))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='openset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is for open-set or closed-set classification.')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='labels', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get dataset labels array.\n\n        Labels are integers in the range [0, N-1].\n        ')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get element of the dataset.\n\n        Returns:\n            Tuple ((image1, image2), label).\n\n        ')), Assign(targets=[Tuple(elts=[Name(id='image1', ctx=Store()), Name(id='image2', ctx=Store())], ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_images', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='label', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()), slice=Name(id='index', ctx=Load()), ctx=Load())), Return(value=Tuple(elts=[Tuple(elts=[Name(id='image1', ctx=Load()), Name(id='image2', ctx=Load())], ctx=Load()), Name(id='label', ctx=Load())], ctx=Load()))], decorator_list=[])], decorator_list=[]), ClassDef(name='SerializedDataset', bases=[Name(id='Dataset', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='MXNet-serialized dataset.')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index_path')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='prefix', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='index_path', ctx=Load())], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Store())], value=Call(func=Name(id='read_yaml', ctx=Load()), args=[BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Constant(value='.yaml'))], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Store())], value=Call(func=Name(id='read_yaml', ctx=Load()), args=[BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Constant(value='.labels'))], keywords=[])), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='_reader', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='MXIndexedRecordIO', ctx=Load()), args=[BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Constant(value='.idx')), BinOp(left=Name(id='prefix', ctx=Load()), op=Add(), right=Constant(value='.rec')), Constant(value='r')], keywords=[]))], decorator_list=[]), FunctionDef(name='classification', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is classification or verification.')), Return(value=Subscript(value=Attribute(value=Name(id='self', ctx=Load()), attr='_meta', ctx=Load()), slice=Constant(value='classification'), ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='openset', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Whether dataset is for open-set or closed-set classification.')), Return(value=Constant(value=True))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='labels', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Get dataset labels array.\n\n        Labels are integers in the range [0, N-1].\n\n        ')), Return(value=Attribute(value=Name(id='self', ctx=Load()), attr='_labels', ctx=Load()))], decorator_list=[Name(id='property', ctx=Load())]), FunctionDef(name='__getitem__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='index')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='record', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='_reader', ctx=Load()), attr='read_idx', ctx=Load()), args=[Name(id='index', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='header', ctx=Store()), Name(id='image', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='mx', ctx=Load()), attr='recordio', ctx=Load()), attr='unpack', ctx=Load()), args=[Name(id='record', ctx=Load())], keywords=[])), Assign(targets=[Name(id='image', ctx=Store())], value=Call(func=Name(id='imdecode', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[])), Return(value=Tuple(elts=[Call(func=Attribute(value=Name(id='Image', ctx=Load()), attr='fromarray', ctx=Load()), args=[Name(id='image', ctx=Load())], keywords=[]), Call(func=Name(id='int', ctx=Load()), args=[Attribute(value=Name(id='header', ctx=Load()), attr='label', ctx=Load())], keywords=[])], ctx=Load()))], decorator_list=[]), FunctionDef(name='from_folder', args=arguments(posonlyargs=[], args=[arg(arg='root')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='datasets', ctx=Store())], value=Call(func=Name(id='defaultdict', ctx=Load()), args=[Name(id='dict', ctx=Load())], keywords=[])), For(target=Name(id='filename', ctx=Store()), iter=Call(func=Attribute(value=Name(id='os', ctx=Load()), attr='listdir', ctx=Load()), args=[Name(id='root', ctx=Load())], keywords=[]), body=[Assign(targets=[Tuple(elts=[Name(id='base', ctx=Store()), Name(id='ext', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='splitext', ctx=Load()), args=[Name(id='filename', ctx=Load())], keywords=[])), If(test=Compare(left=Call(func=Attribute(value=Name(id='ext', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ops=[In()], comparators=[Set(elts=[Constant(value='.idx'), Constant(value='.labels'), Constant(value='.yaml'), Constant(value='.rec')])]), body=[Assign(targets=[Subscript(value=Subscript(value=Name(id='datasets', ctx=Load()), slice=Name(id='base', ctx=Load()), ctx=Load()), slice=Call(func=Attribute(value=Name(id='ext', ctx=Load()), attr='lower', ctx=Load()), args=[], keywords=[]), ctx=Store())], value=Name(id='filename', ctx=Load()))], orelse=[])], orelse=[]), Assign(targets=[Name(id='datasets', ctx=Store())], value=DictComp(key=Name(id='k', ctx=Load()), value=Name(id='v', ctx=Load()), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='datasets', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[Compare(left=Constant(value='.rec'), ops=[In()], comparators=[Name(id='v', ctx=Load())])], is_async=0)])), If(test=Compare(left=Constant(value='train'), ops=[NotIn()], comparators=[Name(id='datasets', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='FileNotFoundError', ctx=Load()), args=[Call(func=Attribute(value=Constant(value="Can't find trainset in {}."), attr='format', ctx=Load()), args=[Name(id='root', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Return(value=DictComp(key=Name(id='k', ctx=Load()), value=Call(func=Name(id='SerializedDataset', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Subscript(value=Name(id='v', ctx=Load()), slice=Constant(value='.idx'), ctx=Load())], keywords=[])], keywords=[]), generators=[comprehension(target=Tuple(elts=[Name(id='k', ctx=Store()), Name(id='v', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='datasets', ctx=Load()), attr='items', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)]))], decorator_list=[Name(id='staticmethod', ctx=Load())])], decorator_list=[])], type_ignores=[])