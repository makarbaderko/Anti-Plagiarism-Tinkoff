Module(body=[Import(names=[alias(name='itertools')]), Import(names=[alias(name='math')]), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), Import(names=[alias(name='random')]), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='scipy.special')]), Import(names=[alias(name='torch')]), ImportFrom(module='numbers', names=[alias(name='Number')], level=0), ImportFrom(module='probabilistic_embeddings.layers.distribution.vmf', names=[alias(name='VMFDistribution'), alias(name='logiv')], level=0), ClassDef(name='TestVMFDistribution', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_logiv', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test Logarithm of modified Bessel Function of the first kind.')), Assign(targets=[Name(id='logiv', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='VMFDistribution', ctx=Load()), attr='LOGIV', ctx=Load()), slice=Constant(value='default'), ctx=Load())), For(target=Name(id='order', ctx=Store()), iter=List(elts=[Constant(value=0), Constant(value=0.2), Constant(value=0.5), Constant(value=0.8), Constant(value=1), Constant(value=1.2), Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load()), Constant(value=2), Constant(value=2.5), Constant(value=10)], ctx=Load()), body=[Assign(targets=[Name(id='xs', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=0.001), Constant(value=3), Constant(value=100)], keywords=[])), Assign(targets=[Name(id='ys_gt', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ys', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='logiv', ctx=Load()), args=[Name(id='order', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='xs', ctx=Load())], keywords=[])], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='ys', ctx=Load()), Name(id='ys_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=1e-06)), keyword(arg='rtol', value=Constant(value=0))])], keywords=[])), Assign(targets=[Name(id='delta', ctx=Store())], value=Constant(value=1e-10)), Assign(targets=[Name(id='d_gt', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), BinOp(left=Name(id='xs', ctx=Load()), op=Add(), right=Name(id='delta', ctx=Load()))], keywords=[])], keywords=[]), op=Sub(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs', ctx=Load())], keywords=[])], keywords=[])), op=Div(), right=Name(id='delta', ctx=Load()))), Assign(targets=[Name(id='xs_tensor', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='from_numpy', ctx=Load()), args=[Name(id='xs', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='xs_tensor', ctx=Load()), attr='requires_grad', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='ys_tensor', ctx=Store())], value=Call(func=Name(id='logiv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs_tensor', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='ys_tensor', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[keyword(arg='gradient', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones_like', ctx=Load()), args=[Name(id='ys_tensor', ctx=Load())], keywords=[]))])), Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='xs_tensor', ctx=Load()), attr='grad', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='d_gt', ctx=Load()), Name(id='d', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=0.0001))])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_logiv_scl', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='logiv', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='VMFDistribution', ctx=Load()), attr='LOGIV', ctx=Load()), slice=Constant(value='scl'), ctx=Load())), For(target=Name(id='order', ctx=Store()), iter=List(elts=[Constant(value=1), Constant(value=1.2), Attribute(value=Name(id='math', ctx=Load()), attr='pi', ctx=Load()), Constant(value=2), Constant(value=2.5), Constant(value=10)], ctx=Load()), body=[Assign(targets=[Name(id='xs', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='linspace', ctx=Load()), args=[Constant(value=0.001), Constant(value=3), Constant(value=100)], keywords=[])), Assign(targets=[Name(id='ys_gt', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ys', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Name(id='logiv', ctx=Load()), args=[Name(id='order', ctx=Load()), Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[Name(id='xs', ctx=Load())], keywords=[])], keywords=[keyword(arg='eps', value=Constant(value=0))]), attr='exp', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='ys', ctx=Load()), Name(id='ys_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=0.0001)), keyword(arg='rtol', value=Constant(value=0))])), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='SCL logiv mismatch {} for order {}.'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='abs', ctx=Load()), args=[BinOp(left=Name(id='ys', ctx=Load()), op=Sub(), right=Name(id='ys_gt', ctx=Load()))], keywords=[])], keywords=[]), Name(id='order', ctx=Load())], keywords=[])], keywords=[]))], orelse=[]), Assign(targets=[Name(id='delta', ctx=Store())], value=Constant(value=1e-10)), Assign(targets=[Name(id='d_gt', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), BinOp(left=Name(id='xs', ctx=Load()), op=Add(), right=Name(id='delta', ctx=Load()))], keywords=[])], keywords=[]), op=Sub(), right=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='iv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs', ctx=Load())], keywords=[])], keywords=[])), op=Div(), right=Name(id='delta', ctx=Load()))), Assign(targets=[Name(id='xs_tensor', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='from_numpy', ctx=Load()), args=[Name(id='xs', ctx=Load())], keywords=[])), Assign(targets=[Attribute(value=Name(id='xs_tensor', ctx=Load()), attr='requires_grad', ctx=Store())], value=Constant(value=True)), Assign(targets=[Name(id='ys_tensor', ctx=Store())], value=Call(func=Name(id='logiv', ctx=Load()), args=[Name(id='order', ctx=Load()), Name(id='xs_tensor', ctx=Load())], keywords=[keyword(arg='eps', value=Constant(value=0))])), Expr(value=Call(func=Attribute(value=Name(id='ys_tensor', ctx=Load()), attr='backward', ctx=Load()), args=[], keywords=[keyword(arg='gradient', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones_like', ctx=Load()), args=[Name(id='ys_tensor', ctx=Load())], keywords=[]))])), Assign(targets=[Name(id='d', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='xs_tensor', ctx=Load()), attr='grad', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])), If(test=UnaryOp(op=Not(), operand=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='d', ctx=Load()), Name(id='d_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=0.0001))])), body=[Expr(value=Call(func=Name(id='print', ctx=Load()), args=[Call(func=Attribute(value=Constant(value='SCL logiv derivative mismatch {} for order {}'), attr='format', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='max', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='abs', ctx=Load()), args=[BinOp(left=Name(id='d', ctx=Load()), op=Sub(), right=Name(id='d_gt', ctx=Load()))], keywords=[])], keywords=[]), Name(id='order', ctx=Load())], keywords=[])], keywords=[]))], orelse=[])], orelse=[])], decorator_list=[]), FunctionDef(name='test_split_join', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test split is inverse of join.')), Assign(targets=[Name(id='dims', ctx=Store())], value=List(elts=[Constant(value=2), Constant(value=3), Constant(value=5), Constant(value=1024), Constant(value=4086)], ctx=Load())), For(target=Tuple(elts=[Name(id='dim', ctx=Store()), Name(id='k', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='product', ctx=Load()), args=[Name(id='dims', ctx=Load()), List(elts=[Constant(value='separate'), Constant(value='norm'), Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim'), Constant(value='k')], values=[Name(id='dim', ctx=Load()), Name(id='k', ctx=Load())]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=2), Attribute(value=Name(id='distribution', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='normalized', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Starred(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[]), ctx=Load())], keywords=[])), Assign(targets=[Name(id='splitted', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='normalized', ctx=Load())], keywords=[])), Assign(targets=[Name(id='joined', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[Starred(value=Name(id='splitted', ctx=Load()), ctx=Load())], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Name(id='joined', ctx=Load()), attr='detach', ctx=Load()), args=[], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='normalized', ctx=Load()), attr='numpy', ctx=Load()), args=[], keywords=[])], keywords=[])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_mean', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test distribution mean.')), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Constant(value=5)]))])), Assign(targets=[Name(id='directions', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=3), Constant(value=1), Constant(value=5)], keywords=[])), Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Constant(value=0.5), op=Add(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[Constant(value=3), Constant(value=1), Constant(value=1)], keywords=[]))), Assign(targets=[Name(id='norms_gt', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Call(func=Name(id='logiv', ctx=Load()), args=[Constant(value=2.5), Name(id='k', ctx=Load())], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[]), op=Div(), right=Call(func=Attribute(value=Call(func=Name(id='logiv', ctx=Load()), args=[Constant(value=1.5), Name(id='k', ctx=Load())], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[])), attr='squeeze', ctx=Load()), args=[UnaryOp(op=USub(), operand=Constant(value=1))], keywords=[]), attr='mean', ctx=Load()), args=[Constant(value=1)], keywords=[])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones', ctx=Load()), args=[Tuple(elts=[Constant(value=3), Constant(value=1)], ctx=Load())], keywords=[])), keyword(arg='means', value=Name(id='directions', ctx=Load())), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Name(id='k', ctx=Load()))], keywords=[]))])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='mean', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='normalized_directions', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='normalize', ctx=Load()), args=[Call(func=Attribute(value=Name(id='directions', ctx=Load()), attr='squeeze', ctx=Load()), args=[Constant(value=1)], keywords=[])], keywords=[keyword(arg='dim', value=Constant(value=1))])), Assign(targets=[Name(id='normalized_means', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='nn', ctx=Load()), attr='functional', ctx=Load()), attr='normalize', ctx=Load()), args=[Name(id='means', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1))])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='normalized_directions', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='normalized_means', ctx=Load())], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='means', ctx=Load())], keywords=[keyword(arg='dim', value=Constant(value=1))]), attr='allclose', ctx=Load()), args=[Name(id='norms_gt', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_normalizer', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test batch norm.')), Assign(targets=[Name(id='batch_size', ctx=Store())], value=Constant(value=5)), Assign(targets=[Name(id='dims', ctx=Store())], value=List(elts=[Constant(value=2), Constant(value=3), Constant(value=5), Constant(value=1024), Constant(value=4086)], ctx=Load())), For(target=Tuple(elts=[Name(id='dim', ctx=Store()), Name(id='k', ctx=Store())], ctx=Store()), iter=Call(func=Attribute(value=Name(id='itertools', ctx=Load()), attr='product', ctx=Load()), args=[Name(id='dims', ctx=Load()), List(elts=[Constant(value='separate'), Constant(value='norm'), Constant(value=1), Constant(value=2)], ctx=Load())], keywords=[]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim'), Constant(value='k')], values=[Name(id='dim', ctx=Load()), Name(id='k', ctx=Load())]))])), Assign(targets=[Name(id='normalizer', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='make_normalizer', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='log_probs_gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Name(id='batch_size', ctx=Load()), Constant(value=1)], keywords=[])), Assign(targets=[Name(id='means_gt', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Name(id='batch_size', ctx=Load()), Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='hidden_ik_gt', ctx=Store())], value=IfExp(test=UnaryOp(op=Not(), operand=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='k', ctx=Load()), Name(id='Number', ctx=Load())], keywords=[])), body=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Name(id='batch_size', ctx=Load()), Constant(value=1), Constant(value=1)], keywords=[]), orelse=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Name(id='batch_size', ctx=Load()), Constant(value=1), Constant(value=1)], ctx=Load()), BinOp(left=Constant(value=1), op=Div(), right=Call(func=Name(id='float', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]))], keywords=[])], keywords=[]))), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Name(id='log_probs_gt', ctx=Load())), keyword(arg='means', value=Name(id='means_gt', ctx=Load())), keyword(arg='hidden_ik', value=Name(id='hidden_ik_gt', ctx=Load()))])), Assign(targets=[Name(id='normalized', ctx=Store())], value=IfExp(test=Compare(left=Name(id='normalizer', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=Call(func=Name(id='normalizer', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[]), orelse=Name(id='parameters', ctx=Load()))), Assign(targets=[Tuple(elts=[Name(id='log_probs', ctx=Store()), Name(id='means', ctx=Store()), Name(id='hidden_ik', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='split_parameters', ctx=Load()), args=[Name(id='normalized', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='log_probs', ctx=Load()), BinOp(left=Name(id='log_probs_gt', ctx=Load()), op=Sub(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='logsumexp', ctx=Load()), args=[Name(id='log_probs_gt', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))]))], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='means', ctx=Load())], keywords=[keyword(arg='axis', value=UnaryOp(op=USub(), operand=Constant(value=1)))]), Constant(value=1)], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='hidden_ik', ctx=Load()), Name(id='hidden_ik_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=1e-05))])], keywords=[]))])], orelse=[])], decorator_list=[]), FunctionDef(name='test_prior_kld', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test KL-divergence with uniform in simple cases.')), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim'), Constant(value='max_logk')], values=[Constant(value=2), Constant(value=None)]))])), Assign(targets=[Name(id='ik', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=2), Constant(value=1), Constant(value=1)], keywords=[]), op=Mult(), right=Constant(value=1000000.0))), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[Constant(value=1.0)], ctx=Load()), List(elts=[Constant(value=1.0)], ctx=Load())], ctx=Load())], keywords=[]), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[List(elts=[Constant(value=0.0), Constant(value=1)], ctx=Load())], ctx=Load()), List(elts=[List(elts=[Constant(value=1.0), Constant(value=0.0)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Name(id='ik', ctx=Load())], keywords=[]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='kld', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='prior_kld', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='kld', ctx=Load()), Constant(value=0)], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[])), Assign(targets=[Name(id='k', ctx=Store())], value=Constant(value=1000000.0)), Assign(targets=[Name(id='ik', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='ones', ctx=Load()), args=[Constant(value=2), Constant(value=1), Constant(value=1)], keywords=[]), op=Div(), right=Name(id='k', ctx=Load()))), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[Constant(value=1.0)], ctx=Load()), List(elts=[Constant(value=1.0)], ctx=Load())], ctx=Load())], keywords=[]), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[List(elts=[Constant(value=0.0), Constant(value=1)], ctx=Load())], ctx=Load()), List(elts=[List(elts=[Constant(value=1.0), Constant(value=0.0)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Name(id='ik', ctx=Load())], keywords=[]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='kld', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='prior_kld', ctx=Load()), args=[Name(id='parameters', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='kld_gt', ctx=Store())], value=BinOp(left=BinOp(left=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='_vmf_logc', ctx=Load()), args=[Name(id='k', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='_log_unit_area', ctx=Load()), args=[], keywords=[])), op=Add(), right=Name(id='k', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='kld', ctx=Load()), Name(id='kld_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[]))], decorator_list=[]), FunctionDef(name='test_logpdf_extremal_k', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test PDF for small and large k values.\n\n        Double precision is used.\n        ')), Assign(targets=[Name(id='dims', ctx=Store())], value=List(elts=[Constant(value=2), Constant(value=3), Constant(value=5), Constant(value=1024), Constant(value=4086)], ctx=Load())), Assign(targets=[Name(id='k', ctx=Store())], value=Constant(value=100000000.0)), For(target=Name(id='dim', ctx=Store()), iter=Name(id='dims', ctx=Load()), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim'), Constant(value='max_logk')], values=[Name(id='dim', ctx=Load()), Constant(value=1000)]))])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=2), Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[Constant(value=2), Constant(value=1)], keywords=[]), op=Add(), right=Constant(value=0.1)), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Name(id='means', ctx=Load())), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=2), Constant(value=1), Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], keywords=[]))])), Assign(targets=[Name(id='points', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='stack', ctx=Load()), args=[List(elts=[BinOp(left=Subscript(value=Name(id='means', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[])), BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Name(id='dim', ctx=Load())], keywords=[]), op=Sub(), right=BinOp(left=Constant(value=0.5), op=Mult(), right=Subscript(value=Name(id='means', ctx=Load()), slice=Tuple(elts=[Constant(value=1), Constant(value=0)], ctx=Load()), ctx=Load())))], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='collinear_logp', ctx=Store()), Name(id='uncollinear_logp', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parameters', ctx=Load()), attr='double', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='points', ctx=Load()), attr='double', ctx=Load()), args=[], keywords=[])], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Name(id='collinear_logp', ctx=Load()), Constant(value=4)], keywords=[])), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertLess', ctx=Load()), args=[Name(id='uncollinear_logp', ctx=Load()), UnaryOp(op=USub(), operand=Constant(value=10))], keywords=[]))], orelse=[]), Assign(targets=[Name(id='k', ctx=Store())], value=Constant(value=1e-08)), For(target=Name(id='dim', ctx=Store()), iter=Name(id='dims', ctx=Load()), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Name(id='dim', ctx=Load())]))])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=2), Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[Constant(value=2), Constant(value=1)], keywords=[]), op=Add(), right=Constant(value=0.1)), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Name(id='means', ctx=Load())), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=2), Constant(value=1), Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], keywords=[]))])), Assign(targets=[Name(id='points', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='stack', ctx=Load()), args=[List(elts=[BinOp(left=Subscript(value=Name(id='means', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Constant(value=0)], ctx=Load()), ctx=Load()), op=Mult(), right=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[])), BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Name(id='dim', ctx=Load())], keywords=[]), op=Sub(), right=BinOp(left=Constant(value=0.5), op=Mult(), right=Subscript(value=Name(id='means', ctx=Load()), slice=Tuple(elts=[Constant(value=1), Constant(value=0)], ctx=Load()), ctx=Load())))], ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Tuple(elts=[Name(id='collinear_logp', ctx=Store()), Name(id='uncollinear_logp', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='points', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Name(id='collinear_logp', ctx=Load()), Name(id='uncollinear_logp', ctx=Load())], keywords=[keyword(arg='places', value=Constant(value=6))]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_logpdf_mixture_weights', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check output for equal weights and one-hot weights.\n\n        Double precision is used.\n        ')), Assign(targets=[Name(id='dims', ctx=Store())], value=List(elts=[Constant(value=2), Constant(value=3), Constant(value=5), Constant(value=1024), Constant(value=4086)], ctx=Load())), Assign(targets=[Name(id='k', ctx=Store())], value=Constant(value=100000000.0)), For(target=Name(id='dim', ctx=Store()), iter=Name(id='dims', ctx=Load()), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim'), Constant(value='max_logk')], values=[Name(id='dim', ctx=Load()), Constant(value=None)]))])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), AugAssign(target=Name(id='means', ctx=Store()), op=Div(), value=Call(func=Attribute(value=Attribute(value=Name(id='torch', ctx=Load()), attr='linalg', ctx=Load()), attr='norm', ctx=Load()), args=[Name(id='means', ctx=Load())], keywords=[keyword(arg='dim', value=UnaryOp(op=USub(), operand=Constant(value=1))), keyword(arg='keepdim', value=Constant(value=True))])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='log', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Constant(value=1))], keywords=[])], keywords=[])), keyword(arg='means', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='stack', ctx=Load()), args=[BinOp(left=List(elts=[Name(id='means', ctx=Load())], ctx=Load()), op=Mult(), right=Constant(value=1))], keywords=[])), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], keywords=[]))])), Assign(targets=[Name(id='points', ctx=Store())], value=BinOp(left=Name(id='means', ctx=Load()), op=Mult(), right=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), op=Add(), right=Constant(value=0.1)))), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='logp', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Call(func=Attribute(value=Name(id='parameters', ctx=Load()), attr='double', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='points', ctx=Load()), attr='double', ctx=Load()), args=[], keywords=[])], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='logp', ctx=Load()), Subscript(value=Name(id='logp', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=0.01))])], keywords=[]))], orelse=[]), For(target=Name(id='dim', ctx=Store()), iter=Name(id='dims', ctx=Load()), body=[Assign(targets=[Name(id='k', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='random', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Constant(value=2))), Assign(targets=[Name(id='non_zero', ctx=Store())], value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='randint', ctx=Load()), args=[Constant(value=0), BinOp(left=Constant(value=1), op=Sub(), right=Constant(value=1))], keywords=[])), Assign(targets=[Name(id='means', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='points', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=10), Name(id='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Name(id='dim', ctx=Load())]))])), Assign(targets=[Name(id='priors', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[]), op=Add(), right=Constant(value=1e-10))), Assign(targets=[Subscript(value=Name(id='priors', ctx=Load()), slice=Tuple(elts=[Constant(value=0), Name(id='non_zero', ctx=Load())], ctx=Load()), ctx=Store())], value=Constant(value=1)), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Name(id='priors', ctx=Load()), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Name(id='means', ctx=Load())), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], keywords=[]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='logp1', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='points', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Name(id='dim', ctx=Load())]))])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[])), keyword(arg='means', value=Subscript(value=Name(id='means', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(lower=Name(id='non_zero', ctx=Load()), upper=BinOp(left=Name(id='non_zero', ctx=Load()), op=Add(), right=Constant(value=1)))], ctx=Load()), ctx=Load())), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='full', ctx=Load()), args=[Tuple(elts=[Constant(value=1), Constant(value=1), Constant(value=1)], ctx=Load()), Name(id='k', ctx=Load())], keywords=[]))], keywords=[]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='logp2', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='points', ctx=Load())], keywords=[]), attr='numpy', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='logp1', ctx=Load()), Name(id='logp2', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_logpdf_integral', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test integral of vMF is equal to 1.')), Assign(targets=[Name(id='dims', ctx=Store())], value=List(elts=[Constant(value=2), Constant(value=3), Constant(value=5)], ctx=Load())), For(target=Name(id='dim', ctx=Store()), iter=Name(id='dims', ctx=Load()), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Name(id='dim', ctx=Load())]))])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Constant(value=1)], keywords=[])), keyword(arg='means', value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Constant(value=1), Name(id='dim', ctx=Load())], keywords=[])), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[BinOp(left=Constant(value=1), op=Div(), right=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[Constant(value=1), Constant(value=1), Constant(value=1)], keywords=[]))], keywords=[]))])), Assign(targets=[Name(id='sample', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1000), Name(id='dim', ctx=Load())], keywords=[])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='pdfs', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='sample', ctx=Load())], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[]))]), Assign(targets=[Name(id='surface', ctx=Store())], value=BinOp(left=BinOp(left=Constant(value=2), op=Mult(), right=BinOp(left=Attribute(value=Name(id='np', ctx=Load()), attr='pi', ctx=Load()), op=Pow(), right=BinOp(left=Name(id='dim', ctx=Load()), op=Div(), right=Constant(value=2)))), op=Div(), right=Call(func=Attribute(value=Attribute(value=Name(id='scipy', ctx=Load()), attr='special', ctx=Load()), attr='gamma', ctx=Load()), args=[BinOp(left=Name(id='dim', ctx=Load()), op=Div(), right=Constant(value=2))], keywords=[]))), Assign(targets=[Name(id='integral', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='pdfs', ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]), op=Mult(), right=Name(id='surface', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Name(id='integral', ctx=Load()), Constant(value=1)], keywords=[keyword(arg='delta', value=Constant(value=0.2))]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_pdf_product', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[For(target=Name(id='d', ctx=Store()), iter=List(elts=[Constant(value=2), Constant(value=3)], ctx=Load()), body=[Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Name(id='d', ctx=Load())]))])), Assign(targets=[Name(id='parameters1', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Constant(value=3), Attribute(value=Name(id='distribution', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[])), Assign(targets=[Name(id='parameters2', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=1), Constant(value=3), Attribute(value=Name(id='distribution', ctx=Load()), attr='num_parameters', ctx=Load())], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='prod_distribution', ctx=Store()), Name(id='prod_parameters', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='pdf_product', ctx=Load()), args=[Name(id='parameters1', ctx=Load()), Name(id='parameters2', ctx=Load())], keywords=[])), Assign(targets=[Name(id='points', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='randn', ctx=Load()), args=[Constant(value=2), Constant(value=3), Attribute(value=Name(id='distribution', ctx=Load()), attr='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logpdf_gt', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters1', ctx=Load()), Name(id='points', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters2', ctx=Load()), Name(id='points', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logpdf', ctx=Store())], value=Call(func=Attribute(value=Name(id='prod_distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='prod_parameters', ctx=Load()), Name(id='points', ctx=Load())], keywords=[])), Assign(targets=[Name(id='points0', ctx=Store())], value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='zeros', ctx=Load()), args=[Attribute(value=Name(id='distribution', ctx=Load()), attr='dim', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logpdf0_gt', ctx=Store())], value=BinOp(left=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters1', ctx=Load()), Name(id='points0', ctx=Load())], keywords=[]), op=Add(), right=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters2', ctx=Load()), Name(id='points0', ctx=Load())], keywords=[]))), Assign(targets=[Name(id='logpdf_gt', ctx=Store())], value=BinOp(left=Name(id='logpdf_gt', ctx=Load()), op=Sub(), right=Name(id='logpdf0_gt', ctx=Load()))), Assign(targets=[Name(id='logpdf0', ctx=Store())], value=Call(func=Attribute(value=Name(id='prod_distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='prod_parameters', ctx=Load()), Name(id='points0', ctx=Load())], keywords=[])), Assign(targets=[Name(id='logpdf', ctx=Store())], value=BinOp(left=Name(id='logpdf', ctx=Load()), op=Sub(), right=Name(id='logpdf0', ctx=Load()))), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertTrue', ctx=Load()), args=[Call(func=Attribute(value=Name(id='logpdf', ctx=Load()), attr='allclose', ctx=Load()), args=[Name(id='logpdf_gt', ctx=Load())], keywords=[keyword(arg='atol', value=Constant(value=1e-06))])], keywords=[]))], orelse=[])], decorator_list=[]), FunctionDef(name='test_sampling', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Test MLS is equal to estimation by sampling.')), Assign(targets=[Name(id='distribution', ctx=Store())], value=Call(func=Name(id='VMFDistribution', ctx=Load()), args=[], keywords=[keyword(arg='config', value=Dict(keys=[Constant(value='dim')], values=[Constant(value=2)]))])), Assign(targets=[Name(id='parameters', ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='join_parameters', ctx=Load()), args=[], keywords=[keyword(arg='log_probs', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[Constant(value=0.25)], ctx=Load())], ctx=Load())], keywords=[]), attr='log', ctx=Load()), args=[], keywords=[])), keyword(arg='means', value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[List(elts=[UnaryOp(op=USub(), operand=Constant(value=2)), Constant(value=0)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[]), attr='float', ctx=Load()), args=[], keywords=[])), keyword(arg='hidden_ik', value=Call(func=Attribute(value=Attribute(value=Name(id='distribution', ctx=Load()), attr='_parametrization', ctx=Load()), attr='ipositive', ctx=Load()), args=[Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='tensor', ctx=Load()), args=[List(elts=[List(elts=[List(elts=[Constant(value=0.5)], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])], keywords=[]))])), With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='no_grad', ctx=Load()), args=[], keywords=[]))], body=[Assign(targets=[Name(id='mls_gt', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logmls', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='parameters', ctx=Load())], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='sample', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='sample', ctx=Load()), args=[Name(id='parameters', ctx=Load()), List(elts=[Constant(value=1000000)], ctx=Load())], keywords=[])), Assign(targets=[Name(id='mls', ctx=Store())], value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='distribution', ctx=Load()), attr='logpdf', ctx=Load()), args=[Name(id='parameters', ctx=Load()), Name(id='sample', ctx=Load())], keywords=[]), attr='exp', ctx=Load()), args=[], keywords=[]), attr='mean', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]))]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertAlmostEqual', ctx=Load()), args=[Name(id='mls', ctx=Load()), Name(id='mls_gt', ctx=Load())], keywords=[keyword(arg='places', value=Constant(value=3))]))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])