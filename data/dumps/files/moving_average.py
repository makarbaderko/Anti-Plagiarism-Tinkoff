Module(body=[ImportFrom(module='etna.models.seasonal_ma', names=[alias(name='SeasonalMovingAverageModel')], level=0), ClassDef(name='MovingAverageModel', bases=[Name(id='SeasonalMovingAverageModel', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='MovingAverageModel averages previous series values to forecast future one.\n\n    .. math::\n        y_{t} = \\frac{\\sum_{i=1}^{n} y_{t-i} }{n},\n\n    where :math:`n` is window size.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='window', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=5)]), body=[Expr(value=Constant(value='\n        Init MovingAverageModel.\n\n        Parameters\n        ----------\n        window: int\n            number of history points to average\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='window', ctx=Store())], value=Name(id='window', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Name(id='window', ctx=Load())), keyword(arg='seasonality', value=Constant(value=1))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='MovingAverageModel')], ctx=Load()))], type_ignores=[])