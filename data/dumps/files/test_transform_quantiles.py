Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pytest')]), ImportFrom(module='etna.transforms', names=[alias(name='AddConstTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='BoxCoxTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='LogTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='MaxAbsScalerTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='MinMaxScalerTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='RobustScalerTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='StandardScalerTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='YeoJohnsonTransform')], level=0), FunctionDef(name='test_standard_scaler_dummy_mean_shift_for_quantiles_per_segment', args=arguments(posonlyargs=[], args=[arg(arg='toy_dataset_with_mean_shift_in_target')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    This test checks that StandardScalerTransform.fit_transform + StandardScalerTransform.inverse_transform\n    does not affect target's quantiles.\n    ")), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Name(id='toy_dataset_with_mean_shift_in_target', ctx=Load())), Assign(targets=[Name(id='scaler', ctx=Store())], value=Call(func=Name(id='StandardScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='with_std', value=Constant(value=False))])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='scaler', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='scaler', ctx=Load()), attr='inverse_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=3)], ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_standard_scaler_dummy_mean_shift_for_quantiles_macro', args=arguments(posonlyargs=[], args=[arg(arg='toy_dataset_with_mean_shift_in_target')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='This test checks that StandardScalerTransform.inverse_transform works correctly in macro mode.')), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Name(id='toy_dataset_with_mean_shift_in_target', ctx=Load())), Assign(targets=[Name(id='scaler', ctx=Store())], value=Call(func=Name(id='StandardScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='with_std', value=Constant(value=False)), keyword(arg='mode', value=Constant(value='macro'))])), Assign(targets=[Name(id='mean_1', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='mean_2', ctx=Store())], value=Call(func=Attribute(value=Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='scaler', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='scaler', ctx=Load()), attr='inverse_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1)], ctx=Load()), ctx=Load()), op=Sub(), right=BinOp(left=BinOp(left=Name(id='mean_1', ctx=Load()), op=Add(), right=Name(id='mean_2', ctx=Load())), op=Div(), right=Constant(value=2))), op=Add(), right=Name(id='mean_1', ctx=Load()))], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=3)], ctx=Load()), ctx=Load()), op=Sub(), right=BinOp(left=BinOp(left=Name(id='mean_1', ctx=Load()), op=Add(), right=Name(id='mean_2', ctx=Load())), op=Div(), right=Constant(value=2))), op=Add(), right=Name(id='mean_2', ctx=Load()))], keywords=[]))], decorator_list=[]), FunctionDef(name='test_add_constant_dummy', args=arguments(posonlyargs=[], args=[arg(arg='toy_dataset_equal_targets_and_quantiles')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="\n    This test checks that inverse_transform transforms forecast's quantiles the same way with target itself and\n    transform does not affect quantiles.\n    ")), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Name(id='toy_dataset_equal_targets_and_quantiles', ctx=Load())), Assign(targets=[Name(id='shift', ctx=Store())], value=Constant(value=10.0)), Assign(targets=[Name(id='add_constant', ctx=Store())], value=Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='value', value=Name(id='shift', ctx=Load()))])), Assign(targets=[Name(id='toy_dataset_transformed', ctx=Store())], value=Call(func=Attribute(value=Name(id='add_constant', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Call(func=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='toy_dataset_transformed', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), op=Sub(), right=Name(id='shift', ctx=Load())), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[BinOp(left=Subscript(value=Attribute(value=Name(id='toy_dataset_transformed', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), op=Sub(), right=Name(id='shift', ctx=Load())), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=3)], ctx=Load()), ctx=Load())], keywords=[])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='add_constant', ctx=Load()), attr='inverse_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=3)], ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='test_dummy_all', args=arguments(posonlyargs=[], args=[arg(arg='toy_dataset_equal_targets_and_quantiles'), arg(arg='transform')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value="This test checks that inverse_transform transforms forecast's quantiles the same way with target itself.")), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Name(id='toy_dataset_equal_targets_and_quantiles', ctx=Load())), Assign(targets=[Name(id='_', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='fit_transform', ctx=Load()), args=[Call(func=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Name(id='toy_dataset', ctx=Store())], value=Call(func=Attribute(value=Name(id='transform', ctx=Load()), attr='inverse_transform', ctx=Load()), args=[Name(id='toy_dataset', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=0)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=1)], ctx=Load()), ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='testing', ctx=Load()), attr='assert_allclose', ctx=Load()), args=[Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=2)], ctx=Load()), ctx=Load()), Subscript(value=Attribute(value=Name(id='toy_dataset', ctx=Load()), attr='iloc', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value=3)], ctx=Load()), ctx=Load())], keywords=[]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='transform'), Tuple(elts=[Call(func=Name(id='StandardScalerTransform', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='AddConstTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='value', value=Constant(value=10))]), Call(func=Name(id='YeoJohnsonTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='LogTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='base', value=Constant(value=2))]), Call(func=Name(id='BoxCoxTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='RobustScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='MaxAbsScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))]), Call(func=Name(id='MinMaxScalerTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target'))])], ctx=Load())], keywords=[])])], type_ignores=[])