Module(body=[ImportFrom(module='typing', names=[alias(name='Dict')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='pytest')]), ImportFrom(module='numpy.random', names=[alias(name='RandomState')], level=0), ImportFrom(module='sklearn.ensemble', names=[alias(name='RandomForestRegressor')], level=0), ImportFrom(module='etna.analysis', names=[alias(name='ModelRelevanceTable')], level=0), ImportFrom(module='etna.analysis.feature_selection', names=[alias(name='mrmr')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.datasets.datasets_generation', names=[alias(name='generate_ar_df')], level=0), FunctionDef(name='df_with_regressors', args=arguments(posonlyargs=[], args=[], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='num_segments', ctx=Store())], value=Constant(value=3)), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='start_time', value=Constant(value='2020-01-01')), keyword(arg='periods', value=Constant(value=300)), keyword(arg='ar_coef', value=List(elts=[Constant(value=1)], ctx=Load())), keyword(arg='sigma', value=Constant(value=1)), keyword(arg='n_segments', value=Name(id='num_segments', ctx=Load())), keyword(arg='random_seed', value=Constant(value=0)), keyword(arg='freq', value=Constant(value='D'))])), Assign(targets=[Name(id='example_segment', ctx=Store())], value=Subscript(value=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), attr='unique', ctx=Load()), args=[], keywords=[]), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='timestamp', ctx=Store())], value=Subscript(value=Subscript(value=Name(id='df', ctx=Load()), slice=Compare(left=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), ops=[Eq()], comparators=[Name(id='example_segment', ctx=Load())]), ctx=Load()), slice=Constant(value='timestamp'), ctx=Load())), Assign(targets=[Name(id='df_exog', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='timestamp')], values=[Name(id='timestamp', ctx=Load())])], keywords=[])), Assign(targets=[Name(id='num_useless', ctx=Store())], value=Constant(value=12)), Assign(targets=[Name(id='df_regressors_useless', ctx=Store())], value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='start_time', value=Constant(value='2020-01-01')), keyword(arg='periods', value=Constant(value=300)), keyword(arg='ar_coef', value=List(elts=[Constant(value=1)], ctx=Load())), keyword(arg='sigma', value=Constant(value=1)), keyword(arg='n_segments', value=Name(id='num_useless', ctx=Load())), keyword(arg='random_seed', value=Constant(value=1)), keyword(arg='freq', value=Constant(value='D'))])), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='segment', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Name(id='df_regressors_useless', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='regressor', ctx=Store())], value=Attribute(value=Subscript(value=Subscript(value=Name(id='df_regressors_useless', ctx=Load()), slice=Compare(left=Subscript(value=Name(id='df_regressors_useless', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), ops=[Eq()], comparators=[Name(id='segment', ctx=Load())]), ctx=Load()), slice=Constant(value='target'), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Subscript(value=Name(id='df_exog', ctx=Load()), slice=JoinedStr(values=[Constant(value='regressor_useless_'), FormattedValue(value=Name(id='i', ctx=Load()), conversion=-1)]), ctx=Store())], value=Name(id='regressor', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='df_regressors_useful', ctx=Store())], value=Call(func=Attribute(value=Name(id='df', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), Assign(targets=[Name(id='sampler', ctx=Store())], value=Attribute(value=Call(func=Name(id='RandomState', ctx=Load()), args=[], keywords=[keyword(arg='seed', value=Constant(value=2))]), attr='normal', ctx=Load())), For(target=Tuple(elts=[Name(id='i', ctx=Store()), Name(id='segment', ctx=Store())], ctx=Store()), iter=Call(func=Name(id='enumerate', ctx=Load()), args=[Call(func=Attribute(value=Subscript(value=Name(id='df_regressors_useful', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[]), body=[Assign(targets=[Name(id='regressor', ctx=Store())], value=Attribute(value=Subscript(value=Subscript(value=Name(id='df_regressors_useful', ctx=Load()), slice=Compare(left=Subscript(value=Name(id='df_regressors_useful', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), ops=[Eq()], comparators=[Name(id='segment', ctx=Load())]), ctx=Load()), slice=Constant(value='target'), ctx=Load()), attr='values', ctx=Load())), Assign(targets=[Name(id='noise', ctx=Store())], value=Call(func=Name(id='sampler', ctx=Load()), args=[], keywords=[keyword(arg='scale', value=Constant(value=0.05)), keyword(arg='size', value=Attribute(value=Name(id='regressor', ctx=Load()), attr='shape', ctx=Load()))])), Assign(targets=[Subscript(value=Name(id='df_exog', ctx=Load()), slice=JoinedStr(values=[Constant(value='regressor_useful_'), FormattedValue(value=Name(id='i', ctx=Load()), conversion=-1)]), ctx=Store())], value=BinOp(left=Name(id='regressor', ctx=Load()), op=Add(), right=Name(id='noise', ctx=Load())))], orelse=[]), Assign(targets=[Name(id='classic_exog_list', ctx=Store())], value=List(elts=[], ctx=Load())), For(target=Name(id='segment', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='segment'), ctx=Load()), attr='unique', ctx=Load()), args=[], keywords=[]), body=[Assign(targets=[Name(id='tmp', ctx=Store())], value=Call(func=Attribute(value=Name(id='df_exog', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[keyword(arg='deep', value=Constant(value=True))])), Assign(targets=[Subscript(value=Name(id='tmp', ctx=Load()), slice=Constant(value='segment'), ctx=Store())], value=Name(id='segment', ctx=Load())), Expr(value=Call(func=Attribute(value=Name(id='classic_exog_list', ctx=Load()), attr='append', ctx=Load()), args=[Name(id='tmp', ctx=Load())], keywords=[]))], orelse=[]), Assign(targets=[Name(id='df_exog_all_segments', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='concat', ctx=Load()), args=[Name(id='classic_exog_list', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df', ctx=Store())], value=Subscript(value=Name(id='df', ctx=Load()), slice=Compare(left=Subscript(value=Name(id='df', ctx=Load()), slice=Constant(value='timestamp'), ctx=Load()), ops=[LtE()], comparators=[Subscript(value=Name(id='timestamp', ctx=Load()), slice=Constant(value=200), ctx=Load())]), ctx=Load())), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), keyword(arg='df_exog', value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_exog_all_segments', ctx=Load())], keywords=[])), keyword(arg='freq', value=Constant(value='D'))])), Return(value=Dict(keys=[Constant(value='df'), Constant(value='target'), Constant(value='regressors')], values=[Call(func=Attribute(value=Name(id='ts', ctx=Load()), attr='to_pandas', ctx=Load()), args=[], keywords=[]), Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[]), Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df_exog_all_segments', ctx=Load())], keywords=[])]))], decorator_list=[Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load())], returns=Subscript(value=Name(id='Dict', ctx=Load()), slice=Tuple(elts=[Name(id='str', ctx=Load()), Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load())], ctx=Load()), ctx=Load())), FunctionDef(name='test_mrmr_right_regressors', args=arguments(posonlyargs=[], args=[arg(arg='df_with_regressors'), arg(arg='relevance_method'), arg(arg='expected_regressors')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='relevance_table', ctx=Store())], value=Call(func=Name(id='relevance_method', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Subscript(value=Name(id='df_with_regressors', ctx=Load()), slice=Constant(value='target'), ctx=Load())), keyword(arg='df_exog', value=Subscript(value=Name(id='df_with_regressors', ctx=Load()), slice=Constant(value='regressors'), ctx=Load())), keyword(arg='model', value=Call(func=Name(id='RandomForestRegressor', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Name(id='selected_regressors', ctx=Store())], value=Call(func=Name(id='mrmr', ctx=Load()), args=[], keywords=[keyword(arg='relevance_table', value=Name(id='relevance_table', ctx=Load())), keyword(arg='regressors', value=Subscript(value=Name(id='df_with_regressors', ctx=Load()), slice=Constant(value='regressors'), ctx=Load())), keyword(arg='top_k', value=Constant(value=3))])), Assert(test=Compare(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='selected_regressors', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='expected_regressors', ctx=Load())], keywords=[])]))], decorator_list=[Call(func=Attribute(value=Attribute(value=Name(id='pytest', ctx=Load()), attr='mark', ctx=Load()), attr='parametrize', ctx=Load()), args=[Constant(value='relevance_method, expected_regressors'), List(elts=[Tuple(elts=[Call(func=Name(id='ModelRelevanceTable', ctx=Load()), args=[], keywords=[]), List(elts=[Constant(value='regressor_useful_0'), Constant(value='regressor_useful_1'), Constant(value='regressor_useful_2')], ctx=Load())], ctx=Load())], ctx=Load())], keywords=[])]), FunctionDef(name='test_mrmr_not_depend_on_columns_order', args=arguments(posonlyargs=[], args=[arg(arg='df_with_regressors')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Tuple(elts=[Name(id='df', ctx=Store()), Name(id='regressors', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='df_with_regressors', ctx=Load()), slice=Constant(value='df'), ctx=Load()), Subscript(value=Name(id='df_with_regressors', ctx=Load()), slice=Constant(value='regressors'), ctx=Load())], ctx=Load())), Assign(targets=[Name(id='relevance_table', ctx=Store())], value=Call(func=Call(func=Name(id='ModelRelevanceTable', ctx=Load()), args=[], keywords=[]), args=[], keywords=[keyword(arg='df', value=Name(id='df', ctx=Load())), keyword(arg='df_exog', value=Name(id='regressors', ctx=Load())), keyword(arg='model', value=Call(func=Name(id='RandomForestRegressor', ctx=Load()), args=[], keywords=[]))])), Assign(targets=[Name(id='expected_answer', ctx=Store())], value=Call(func=Name(id='mrmr', ctx=Load()), args=[], keywords=[keyword(arg='relevance_table', value=Name(id='relevance_table', ctx=Load())), keyword(arg='regressors', value=Name(id='regressors', ctx=Load())), keyword(arg='top_k', value=Constant(value=5))])), Assign(targets=[Name(id='columns', ctx=Store())], value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Attribute(value=Call(func=Attribute(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='columns', ctx=Load()), attr='get_level_values', ctx=Load()), args=[Constant(value='feature')], keywords=[]), attr='unique', ctx=Load()), args=[], keywords=[])], keywords=[])), For(target=Name(id='i', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=10)], keywords=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='shuffle', ctx=Load()), args=[Name(id='columns', ctx=Load())], keywords=[])), Assign(targets=[Name(id='answer', ctx=Store())], value=Call(func=Name(id='mrmr', ctx=Load()), args=[], keywords=[keyword(arg='relevance_table', value=Subscript(value=Name(id='relevance_table', ctx=Load()), slice=Name(id='columns', ctx=Load()), ctx=Load())), keyword(arg='regressors', value=Subscript(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Slice(), ctx=Load()), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Name(id='columns', ctx=Load())], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Load())), keyword(arg='top_k', value=Constant(value=5))])), Assert(test=Compare(left=Name(id='answer', ctx=Load()), ops=[Eq()], comparators=[Name(id='expected_answer', ctx=Load())]))], orelse=[])], decorator_list=[]), FunctionDef(name='high_relevance_high_redundancy_problem', args=arguments(posonlyargs=[], args=[arg(arg='periods')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[Assign(targets=[Name(id='relevance_table', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='regressor_1'), Constant(value='regressor_2'), Constant(value='regressor_3')], values=[List(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=1)], ctx=Load())])], keywords=[keyword(arg='index', value=List(elts=[Constant(value='segment_1'), Constant(value='segment_2')], ctx=Load()))])), Assign(targets=[Name(id='regressors', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-01')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=1))]), attr='rename', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=Dict(keys=[Constant(value='target')], values=[Constant(value='regressor_1')]))])), Assign(targets=[Subscript(value=Name(id='regressors', ctx=Load()), slice=Constant(value='regressor_2'), ctx=Store())], value=Subscript(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-01')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=1))]), slice=Constant(value='target'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='regressors', ctx=Load()), slice=Constant(value='regressor_3'), ctx=Store())], value=Subscript(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-01')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=2))]), slice=Constant(value='target'), ctx=Load())), Assign(targets=[Name(id='regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='regressors', ctx=Load())], keywords=[])), Return(value=Dict(keys=[Constant(value='relevance_table'), Constant(value='regressors'), Constant(value='expected_answer')], values=[Name(id='relevance_table', ctx=Load()), Name(id='regressors', ctx=Load()), List(elts=[Constant(value='regressor_1'), Constant(value='regressor_3')], ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='high_relevance_high_redundancy_problem_diff_starts', args=arguments(posonlyargs=[], args=[arg(arg='periods')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=10)]), body=[Assign(targets=[Name(id='relevance_table', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='DataFrame', ctx=Load()), args=[Dict(keys=[Constant(value='regressor_1'), Constant(value='regressor_2'), Constant(value='regressor_3')], values=[List(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=1)], ctx=Load()), List(elts=[Constant(value=1), Constant(value=1)], ctx=Load())])], keywords=[keyword(arg='index', value=List(elts=[Constant(value='segment_1'), Constant(value='segment_2')], ctx=Load()))])), Assign(targets=[Name(id='regressors', ctx=Store())], value=Call(func=Attribute(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-04')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=1))]), attr='rename', ctx=Load()), args=[], keywords=[keyword(arg='columns', value=Dict(keys=[Constant(value='target')], values=[Constant(value='regressor_1')]))])), Assign(targets=[Subscript(value=Name(id='regressors', ctx=Load()), slice=Constant(value='regressor_2'), ctx=Store())], value=Subscript(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-01')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=1))]), slice=Constant(value='target'), ctx=Load())), Assign(targets=[Subscript(value=Name(id='regressors', ctx=Load()), slice=Constant(value='regressor_3'), ctx=Store())], value=Subscript(value=Call(func=Name(id='generate_ar_df', ctx=Load()), args=[], keywords=[keyword(arg='periods', value=Name(id='periods', ctx=Load())), keyword(arg='n_segments', value=Constant(value=2)), keyword(arg='start_time', value=Constant(value='2000-01-07')), keyword(arg='freq', value=Constant(value='D')), keyword(arg='random_seed', value=Constant(value=2))]), slice=Constant(value='target'), ctx=Load())), Assign(targets=[Name(id='regressors', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='regressors', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Slice(upper=Constant(value=2)), ctx=Load()), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value='regressor_1')], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), Assign(targets=[Subscript(value=Attribute(value=Name(id='regressors', ctx=Load()), attr='loc', ctx=Load()), slice=Tuple(elts=[Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Slice(upper=Constant(value=4)), ctx=Load()), Subscript(value=Attribute(value=Name(id='pd', ctx=Load()), attr='IndexSlice', ctx=Load()), slice=Tuple(elts=[Slice(), Constant(value='regressor_3')], ctx=Load()), ctx=Load())], ctx=Load()), ctx=Store())], value=Attribute(value=Name(id='np', ctx=Load()), attr='NaN', ctx=Load())), Return(value=Dict(keys=[Constant(value='relevance_table'), Constant(value='regressors'), Constant(value='expected_answer')], values=[Name(id='relevance_table', ctx=Load()), Name(id='regressors', ctx=Load()), List(elts=[Constant(value='regressor_1'), Constant(value='regressor_3')], ctx=Load())]))], decorator_list=[Call(func=Attribute(value=Name(id='pytest', ctx=Load()), attr='fixture', ctx=Load()), args=[], keywords=[])]), FunctionDef(name='test_mrmr_select_less_redundant_regressor', args=arguments(posonlyargs=[], args=[arg(arg='high_relevance_high_redundancy_problem')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check that transform selects the less redundant regressor out of regressors with same relevance.')), Assign(targets=[Tuple(elts=[Name(id='relevance_table', ctx=Store()), Name(id='regressors', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='high_relevance_high_redundancy_problem', ctx=Load()), slice=Constant(value='relevance_table'), ctx=Load()), Subscript(value=Name(id='high_relevance_high_redundancy_problem', ctx=Load()), slice=Constant(value='regressors'), ctx=Load())], ctx=Load())), Assign(targets=[Name(id='selected_regressors', ctx=Store())], value=Call(func=Name(id='mrmr', ctx=Load()), args=[], keywords=[keyword(arg='relevance_table', value=Name(id='relevance_table', ctx=Load())), keyword(arg='regressors', value=Name(id='regressors', ctx=Load())), keyword(arg='top_k', value=Constant(value=2))])), Assert(test=Compare(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='selected_regressors', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='set', ctx=Load()), args=[Subscript(value=Name(id='high_relevance_high_redundancy_problem', ctx=Load()), slice=Constant(value='expected_answer'), ctx=Load())], keywords=[])]))], decorator_list=[]), FunctionDef(name='test_mrmr_select_less_redundant_regressor_diff_start', args=arguments(posonlyargs=[], args=[arg(arg='high_relevance_high_redundancy_problem_diff_starts')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Check that transform selects the less redundant regressor out of regressors with same relevance.')), Assign(targets=[Tuple(elts=[Name(id='relevance_table', ctx=Store()), Name(id='regressors', ctx=Store())], ctx=Store())], value=Tuple(elts=[Subscript(value=Name(id='high_relevance_high_redundancy_problem_diff_starts', ctx=Load()), slice=Constant(value='relevance_table'), ctx=Load()), Subscript(value=Name(id='high_relevance_high_redundancy_problem_diff_starts', ctx=Load()), slice=Constant(value='regressors'), ctx=Load())], ctx=Load())), Assign(targets=[Name(id='selected_regressors', ctx=Store())], value=Call(func=Name(id='mrmr', ctx=Load()), args=[], keywords=[keyword(arg='relevance_table', value=Name(id='relevance_table', ctx=Load())), keyword(arg='regressors', value=Name(id='regressors', ctx=Load())), keyword(arg='top_k', value=Constant(value=2))])), Assert(test=Compare(left=Call(func=Name(id='set', ctx=Load()), args=[Name(id='selected_regressors', ctx=Load())], keywords=[]), ops=[Eq()], comparators=[Call(func=Name(id='set', ctx=Load()), args=[Subscript(value=Name(id='high_relevance_high_redundancy_problem_diff_starts', ctx=Load()), slice=Constant(value='expected_answer'), ctx=Load())], keywords=[])]))], decorator_list=[])], type_ignores=[])