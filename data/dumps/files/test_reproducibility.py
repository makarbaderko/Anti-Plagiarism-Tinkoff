Module(body=[Import(names=[alias(name='os')]), Import(names=[alias(name='sys')]), Import(names=[alias(name='tempfile')]), ImportFrom(module='collections', names=[alias(name='OrderedDict')], level=0), ImportFrom(module='unittest', names=[alias(name='TestCase'), alias(name='main')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), Import(names=[alias(name='yaml')]), ImportFrom(module='torchvision', names=[alias(name='transforms')], level=0), ImportFrom(module='probabilistic_embeddings', names=[alias(name='commands')], level=0), ClassDef(name='Namespace', bases=[], keywords=[], body=[Assign(targets=[Name(id='ARGS', ctx=Store())], value=List(elts=[Constant(value='cmd'), Constant(value='data'), Constant(value='name'), Constant(value='logger'), Constant(value='config'), Constant(value='train_root'), Constant(value='checkpoint'), Constant(value='no_strict_init'), Constant(value='from_stage'), Constant(value='from_seed')], ctx=Load())), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], kwarg=arg(arg='kwargs'), defaults=[]), body=[Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), attr='update', ctx=Load()), args=[Name(id='kwargs', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='__getattr__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='key')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[If(test=Compare(left=Name(id='key', ctx=Load()), ops=[NotIn()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='ARGS', ctx=Load())]), body=[Raise(exc=Call(func=Name(id='AttributeError', ctx=Load()), args=[Name(id='key', ctx=Load())], keywords=[]))], orelse=[]), Return(value=Call(func=Attribute(value=Attribute(value=Name(id='self', ctx=Load()), attr='__dict__', ctx=Load()), attr='get', ctx=Load()), args=[Name(id='key', ctx=Load()), Constant(value=None)], keywords=[]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='CONFIG', ctx=Store())], value=Dict(keys=[Constant(value='fp16'), Constant(value='dataset_params'), Constant(value='model_params'), Constant(value='trainer_params'), Constant(value='num_evaluation_seeds')], values=[Constant(value=False), Dict(keys=[Constant(value='name'), Constant(value='batch_size'), Constant(value='num_workers'), Constant(value='num_valid_workers'), Constant(value='num_validation_folds')], values=[Constant(value='debug-openset'), Constant(value=4), Constant(value=0), Constant(value=0), Constant(value=2)]), Dict(keys=[Constant(value='embedder_params')], values=[Dict(keys=[Constant(value='pretrained'), Constant(value='model_type')], values=[Constant(value=False), Constant(value='resnet18')])]), Dict(keys=[Constant(value='optimizer_params'), Constant(value='num_epochs')], values=[Dict(keys=[Constant(value='lr')], values=[Constant(value=0.0001)]), Constant(value=2)]), Constant(value=2)])), ClassDef(name='TestReproducibility', bases=[Name(id='TestCase', ctx=Load())], keywords=[], body=[FunctionDef(name='test_train', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Name(id='results', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_run', ctx=Load()), args=[], keywords=[keyword(arg='seed', value=Constant(value=0))]), generators=[comprehension(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='r', ctx=Store()), iter=Subscript(value=Name(id='results', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_num_not_equal', ctx=Load()), args=[Name(id='r', ctx=Load()), Subscript(value=Name(id='results', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), Constant(value=0)], keywords=[]))], orelse=[]), Assign(targets=[Name(id='results2', ctx=Store())], value=ListComp(elt=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_run', ctx=Load()), args=[], keywords=[keyword(arg='seed', value=Constant(value=1))]), generators=[comprehension(target=Name(id='_', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Constant(value=2)], keywords=[]), ifs=[], is_async=0)])), For(target=Name(id='r', ctx=Store()), iter=Subscript(value=Name(id='results2', ctx=Load()), slice=Slice(lower=Constant(value=1)), ctx=Load()), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_num_not_equal', ctx=Load()), args=[Name(id='r', ctx=Load()), Subscript(value=Name(id='results2', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), Constant(value=0)], keywords=[]))], orelse=[]), Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertGreater', ctx=Load()), args=[Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_num_not_equal', ctx=Load()), args=[Subscript(value=Name(id='results2', ctx=Load()), slice=Constant(value=0), ctx=Load()), Subscript(value=Name(id='results', ctx=Load()), slice=Constant(value=0), ctx=Load())], keywords=[]), Constant(value=0)], keywords=[]))], decorator_list=[]), FunctionDef(name='_run', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='seed')], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=None)]), body=[With(items=[withitem(context_expr=Call(func=Attribute(value=Name(id='tempfile', ctx=Load()), attr='TemporaryDirectory', ctx=Load()), args=[], keywords=[]), optional_vars=Name(id='root', ctx=Store()))], body=[Assign(targets=[Name(id='config', ctx=Store())], value=Call(func=Attribute(value=Name(id='CONFIG', ctx=Load()), attr='copy', ctx=Load()), args=[], keywords=[])), If(test=Compare(left=Name(id='seed', ctx=Load()), ops=[IsNot()], comparators=[Constant(value=None)]), body=[Assign(targets=[Subscript(value=Name(id='config', ctx=Load()), slice=Constant(value='seed'), ctx=Store())], value=Name(id='seed', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='config_path', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='config.yaml')], keywords=[])), With(items=[withitem(context_expr=Call(func=Name(id='open', ctx=Load()), args=[Name(id='config_path', ctx=Load()), Constant(value='w')], keywords=[]), optional_vars=Name(id='fp', ctx=Store()))], body=[Expr(value=Call(func=Attribute(value=Name(id='yaml', ctx=Load()), attr='safe_dump', ctx=Load()), args=[Name(id='config', ctx=Load()), Name(id='fp', ctx=Load())], keywords=[]))]), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='Namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='train')), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config_path', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard')), keyword(arg='train_root', value=Name(id='root', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='train', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Name(id='args', ctx=Store())], value=Call(func=Name(id='Namespace', ctx=Load()), args=[], keywords=[keyword(arg='cmd', value=Constant(value='test')), keyword(arg='checkpoint', value=Call(func=Attribute(value=Attribute(value=Name(id='os', ctx=Load()), attr='path', ctx=Load()), attr='join', ctx=Load()), args=[Name(id='root', ctx=Load()), Constant(value='checkpoints'), Constant(value='best.pth')], keywords=[])), keyword(arg='data', value=Name(id='root', ctx=Load())), keyword(arg='config', value=Name(id='config_path', ctx=Load())), keyword(arg='logger', value=Constant(value='tensorboard'))])), Assign(targets=[Name(id='metrics', ctx=Store())], value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='test', ctx=Load()), args=[Name(id='args', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='metrics', ctx=Load()), slice=Constant(value='checkpoint_hash'), ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='mean', ctx=Load()), args=[ListComp(elt=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='v', ctx=Load()), attr='sum', ctx=Load()), args=[], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]), generators=[comprehension(target=Name(id='v', ctx=Store()), iter=Call(func=Attribute(value=Subscript(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='load', ctx=Load()), args=[Attribute(value=Name(id='args', ctx=Load()), attr='checkpoint', ctx=Load())], keywords=[]), slice=Constant(value='model_model_state_dict'), ctx=Load()), attr='values', ctx=Load()), args=[], keywords=[]), ifs=[], is_async=0)])], keywords=[]))]), Return(value=Name(id='metrics', ctx=Load()))], decorator_list=[]), FunctionDef(name='_num_not_equal', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='d1'), arg(arg='d2')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='assertEqual', ctx=Load()), args=[Call(func=Name(id='set', ctx=Load()), args=[Name(id='d1', ctx=Load())], keywords=[]), Call(func=Name(id='set', ctx=Load()), args=[Name(id='d2', ctx=Load())], keywords=[])], keywords=[])), Assign(targets=[Name(id='n', ctx=Store())], value=Constant(value=0)), For(target=Name(id='k', ctx=Store()), iter=Name(id='d1', ctx=Load()), body=[Assign(targets=[Name(id='v1', ctx=Store())], value=Subscript(value=Name(id='d1', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load())), Assign(targets=[Name(id='v2', ctx=Store())], value=Subscript(value=Name(id='d2', ctx=Load()), slice=Name(id='k', ctx=Load()), ctx=Load())), If(test=Call(func=Name(id='isinstance', ctx=Load()), args=[Name(id='v1', ctx=Load()), Tuple(elts=[Name(id='dict', ctx=Load()), Name(id='OrderedDict', ctx=Load())], ctx=Load())], keywords=[]), body=[AugAssign(target=Name(id='n', ctx=Store()), op=Add(), value=Call(func=Attribute(value=Name(id='self', ctx=Load()), attr='_num_not_equal', ctx=Load()), args=[Name(id='v1', ctx=Load()), Name(id='v2', ctx=Load())], keywords=[]))], orelse=[AugAssign(target=Name(id='n', ctx=Store()), op=Add(), value=Compare(left=Call(func=Name(id='abs', ctx=Load()), args=[BinOp(left=Name(id='v1', ctx=Load()), op=Sub(), right=Name(id='v2', ctx=Load()))], keywords=[]), ops=[Gt()], comparators=[Constant(value=1e-06)]))])], orelse=[]), Return(value=Name(id='n', ctx=Load()))], decorator_list=[])], decorator_list=[]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Attribute(value=Name(id='commands', ctx=Load()), attr='setup', ctx=Load()), args=[], keywords=[])), Expr(value=Call(func=Name(id='main', ctx=Load()), args=[], keywords=[]))], orelse=[])], type_ignores=[])