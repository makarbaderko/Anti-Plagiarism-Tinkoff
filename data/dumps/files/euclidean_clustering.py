Module(body=[ImportFrom(module='typing', names=[alias(name='TYPE_CHECKING')], level=0), ImportFrom(module='etna.clustering.distances.euclidean_distance', names=[alias(name='EuclideanDistance')], level=0), ImportFrom(module='etna.clustering.hierarchical.base', names=[alias(name='HierarchicalClustering')], level=0), If(test=Name(id='TYPE_CHECKING', ctx=Load()), body=[ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0)], orelse=[]), ClassDef(name='EuclideanClustering', bases=[Name(id='HierarchicalClustering', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Hierarchical clustering with euclidean distance.\n\n    Examples\n    --------\n    >>> from etna.clustering import EuclideanClustering\n    >>> from etna.datasets import TSDataset\n    >>> from etna.datasets import generate_ar_df\n    >>> ts = generate_ar_df(periods = 40, start_time = "2000-01-01", n_segments = 10)\n    >>> ts = TSDataset(TSDataset.to_dataset(ts), freq="D")\n    >>> model = EuclideanClustering()\n    >>> model.build_distance_matrix(ts)\n    >>> model.build_clustering_algo(n_clusters=3, linkage="average")\n    >>> segment2cluster = model.fit_predict()\n    >>> segment2cluster\n    {\'segment_0\': 2,\n     \'segment_1\': 1,\n     \'segment_2\': 0,\n     \'segment_3\': 1,\n     \'segment_4\': 1,\n     \'segment_5\': 0,\n     \'segment_6\': 0,\n     \'segment_7\': 0,\n     \'segment_8\': 2,\n     \'segment_9\': 2}\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Create instance of EuclideanClustering.')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='distance', value=Call(func=Name(id='EuclideanDistance', ctx=Load()), args=[], keywords=[]))]))], decorator_list=[]), FunctionDef(name='build_distance_matrix', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='ts', annotation=Constant(value='TSDataset'))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Build distance matrix with euclidean distance.\n\n        Parameters\n        ----------\n        ts:\n            TSDataset with series to build distance matrix\n        ')), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='build_distance_matrix', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='EuclideanClustering')], ctx=Load()))], type_ignores=[])