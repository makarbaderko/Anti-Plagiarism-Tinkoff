Module(body=[ImportFrom(module='etna.models.seasonal_ma', names=[alias(name='SeasonalMovingAverageModel')], level=0), ClassDef(name='NaiveModel', bases=[Name(id='SeasonalMovingAverageModel', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Naive model predicts t-th value of series with its (t - lag) value.\n\n    .. math::\n        y_{t} = y_{t-s},\n\n    where :math:`s` is lag.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='lag', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=1)]), body=[Expr(value=Constant(value='\n        Init NaiveModel.\n\n        Parameters\n        ----------\n        lag: int\n            lag for new value prediction\n        ')), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='lag', ctx=Store())], value=Name(id='lag', ctx=Load())), Expr(value=Call(func=Attribute(value=Call(func=Name(id='super', ctx=Load()), args=[], keywords=[]), attr='__init__', ctx=Load()), args=[], keywords=[keyword(arg='window', value=Constant(value=1)), keyword(arg='seasonality', value=Name(id='lag', ctx=Load()))]))], decorator_list=[])], decorator_list=[]), Assign(targets=[Name(id='__all__', ctx=Store())], value=List(elts=[Constant(value='NaiveModel')], ctx=Load()))], type_ignores=[])