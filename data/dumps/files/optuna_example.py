Module(body=[Import(names=[alias(name='random')]), ImportFrom(module='functools', names=[alias(name='partial')], level=0), ImportFrom(module='pathlib', names=[alias(name='Path')], level=0), ImportFrom(module='typing', names=[alias(name='Optional')], level=0), Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='optuna')]), Import(names=[alias(name='pandas', asname='pd')]), Import(names=[alias(name='typer')]), ImportFrom(module='etna.datasets', names=[alias(name='TSDataset')], level=0), ImportFrom(module='etna.datasets', names=[alias(name='generate_ar_df')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='WandbLogger')], level=0), ImportFrom(module='etna.loggers', names=[alias(name='tslogger')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MAE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='MSE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='SMAPE')], level=0), ImportFrom(module='etna.metrics', names=[alias(name='Sign')], level=0), ImportFrom(module='etna.models', names=[alias(name='CatBoostModelMultiSegment')], level=0), ImportFrom(module='etna.pipeline', names=[alias(name='Pipeline')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='LagTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='SegmentEncoderTransform')], level=0), ImportFrom(module='etna.transforms', names=[alias(name='StandardScalerTransform')], level=0), Assign(targets=[Name(id='FILE_PATH', ctx=Store())], value=Call(func=Name(id='Path', ctx=Load()), args=[Name(id='__file__', ctx=Load())], keywords=[])), Assign(targets=[Name(id='app', ctx=Store())], value=Call(func=Attribute(value=Name(id='typer', ctx=Load()), attr='Typer', ctx=Load()), args=[], keywords=[])), FunctionDef(name='set_seed', args=arguments(posonlyargs=[], args=[arg(arg='seed', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=42)]), body=[Expr(value=Call(func=Attribute(value=Name(id='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Expr(value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='init_logger', args=arguments(posonlyargs=[], args=[arg(arg='config', annotation=Name(id='dict', ctx=Load())), arg(arg='project', annotation=Name(id='str', ctx=Load())), arg(arg='tags', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='list', ctx=Load()), ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='wandb-sweeps'), List(elts=[Constant(value='test'), Constant(value='sweeps')], ctx=Load())]), body=[Assign(targets=[Attribute(value=Name(id='tslogger', ctx=Load()), attr='loggers', ctx=Store())], value=List(elts=[], ctx=Load())), Assign(targets=[Name(id='wblogger', ctx=Store())], value=Call(func=Name(id='WandbLogger', ctx=Load()), args=[], keywords=[keyword(arg='project', value=Name(id='project', ctx=Load())), keyword(arg='tags', value=Name(id='tags', ctx=Load())), keyword(arg='config', value=Name(id='config', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='tslogger', ctx=Load()), attr='add', ctx=Load()), args=[Name(id='wblogger', ctx=Load())], keywords=[]))], decorator_list=[]), FunctionDef(name='dataloader', args=arguments(posonlyargs=[], args=[arg(arg='file_path', annotation=Name(id='Path', ctx=Load())), arg(arg='freq', annotation=Name(id='str', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value='D')]), body=[Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='pd', ctx=Load()), attr='read_csv', ctx=Load()), args=[Name(id='file_path', ctx=Load())], keywords=[])), Assign(targets=[Name(id='df', ctx=Store())], value=Call(func=Attribute(value=Name(id='TSDataset', ctx=Load()), attr='to_dataset', ctx=Load()), args=[Name(id='df', ctx=Load())], keywords=[])), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='TSDataset', ctx=Load()), args=[], keywords=[keyword(arg='df', value=Name(id='df', ctx=Load())), keyword(arg='freq', value=Name(id='freq', ctx=Load()))])), Return(value=Name(id='ts', ctx=Load()))], decorator_list=[], returns=Name(id='TSDataset', ctx=Load())), FunctionDef(name='objective', args=arguments(posonlyargs=[], args=[arg(arg='trial', annotation=Attribute(value=Name(id='optuna', ctx=Load()), attr='Trial', ctx=Load())), arg(arg='metric_name', annotation=Name(id='str', ctx=Load())), arg(arg='ts', annotation=Name(id='TSDataset', ctx=Load())), arg(arg='horizon', annotation=Name(id='int', ctx=Load())), arg(arg='lags', annotation=Name(id='int', ctx=Load())), arg(arg='seed', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='Optuna objective function.')), Expr(value=Call(func=Name(id='set_seed', ctx=Load()), args=[Name(id='seed', ctx=Load())], keywords=[])), Assign(targets=[Name(id='pipeline', ctx=Store())], value=Call(func=Name(id='Pipeline', ctx=Load()), args=[], keywords=[keyword(arg='model', value=Call(func=Name(id='CatBoostModelMultiSegment', ctx=Load()), args=[], keywords=[keyword(arg='iterations', value=Call(func=Attribute(value=Name(id='trial', ctx=Load()), attr='suggest_int', ctx=Load()), args=[Constant(value='iterations'), Constant(value=10), Constant(value=100)], keywords=[])), keyword(arg='depth', value=Call(func=Attribute(value=Name(id='trial', ctx=Load()), attr='suggest_int', ctx=Load()), args=[Constant(value='depth'), Constant(value=1), Constant(value=12)], keywords=[]))])), keyword(arg='transforms', value=List(elts=[Call(func=Name(id='StandardScalerTransform', ctx=Load()), args=[Constant(value='target')], keywords=[]), Call(func=Name(id='SegmentEncoderTransform', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='LagTransform', ctx=Load()), args=[], keywords=[keyword(arg='in_column', value=Constant(value='target')), keyword(arg='lags', value=Call(func=Name(id='list', ctx=Load()), args=[Call(func=Name(id='range', ctx=Load()), args=[Name(id='horizon', ctx=Load()), BinOp(left=Name(id='horizon', ctx=Load()), op=Add(), right=Call(func=Attribute(value=Name(id='trial', ctx=Load()), attr='suggest_int', ctx=Load()), args=[Constant(value='lags'), Constant(value=1), Name(id='lags', ctx=Load())], keywords=[]))], keywords=[])], keywords=[]))])], ctx=Load())), keyword(arg='horizon', value=Name(id='horizon', ctx=Load()))])), Expr(value=Call(func=Name(id='init_logger', ctx=Load()), args=[Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='to_dict', ctx=Load()), args=[], keywords=[])], keywords=[])), Assign(targets=[Tuple(elts=[Name(id='metrics', ctx=Store()), Name(id='_', ctx=Store()), Name(id='_', ctx=Store())], ctx=Store())], value=Call(func=Attribute(value=Name(id='pipeline', ctx=Load()), attr='backtest', ctx=Load()), args=[], keywords=[keyword(arg='ts', value=Name(id='ts', ctx=Load())), keyword(arg='metrics', value=List(elts=[Call(func=Name(id='MAE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='SMAPE', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='Sign', ctx=Load()), args=[], keywords=[]), Call(func=Name(id='MSE', ctx=Load()), args=[], keywords=[])], ctx=Load()))])), Return(value=Call(func=Attribute(value=Subscript(value=Name(id='metrics', ctx=Load()), slice=Name(id='metric_name', ctx=Load()), ctx=Load()), attr='mean', ctx=Load()), args=[], keywords=[]))], decorator_list=[]), FunctionDef(name='run_optuna', args=arguments(posonlyargs=[], args=[arg(arg='horizon', annotation=Name(id='int', ctx=Load())), arg(arg='metric_name', annotation=Name(id='str', ctx=Load())), arg(arg='storage', annotation=Name(id='str', ctx=Load())), arg(arg='study_name', annotation=Subscript(value=Name(id='Optional', ctx=Load()), slice=Name(id='str', ctx=Load()), ctx=Load())), arg(arg='n_trials', annotation=Name(id='int', ctx=Load())), arg(arg='file_path', annotation=Name(id='Path', ctx=Load())), arg(arg='direction', annotation=Name(id='str', ctx=Load())), arg(arg='freq', annotation=Name(id='str', ctx=Load())), arg(arg='lags', annotation=Name(id='int', ctx=Load())), arg(arg='seed', annotation=Name(id='int', ctx=Load()))], kwonlyargs=[], kw_defaults=[], defaults=[Constant(value=14), Constant(value='MAE'), Constant(value='sqlite:///optuna.db'), Constant(value=None), Constant(value=200), BinOp(left=BinOp(left=Subscript(value=Attribute(value=Name(id='FILE_PATH', ctx=Load()), attr='parents', ctx=Load()), slice=Constant(value=1), ctx=Load()), op=Div(), right=Constant(value='data')), op=Div(), right=Constant(value='example_dataset.csv')), Constant(value='minimize'), Constant(value='D'), Constant(value=24), Constant(value=11)]), body=[Expr(value=Constant(value='\n    Run optuna optimization for CatBoostModelMultiSegment.\n    ')), Assign(targets=[Name(id='ts', ctx=Store())], value=Call(func=Name(id='dataloader', ctx=Load()), args=[Name(id='file_path', ctx=Load())], keywords=[keyword(arg='freq', value=Name(id='freq', ctx=Load()))])), Assign(targets=[Name(id='study', ctx=Store())], value=Call(func=Attribute(value=Name(id='optuna', ctx=Load()), attr='create_study', ctx=Load()), args=[], keywords=[keyword(arg='storage', value=Name(id='storage', ctx=Load())), keyword(arg='study_name', value=Name(id='study_name', ctx=Load())), keyword(arg='sampler', value=Call(func=Attribute(value=Attribute(value=Name(id='optuna', ctx=Load()), attr='samplers', ctx=Load()), attr='TPESampler', ctx=Load()), args=[], keywords=[keyword(arg='multivariate', value=Constant(value=True)), keyword(arg='group', value=Constant(value=True))])), keyword(arg='load_if_exists', value=Constant(value=True)), keyword(arg='direction', value=Name(id='direction', ctx=Load()))])), Expr(value=Call(func=Attribute(value=Name(id='study', ctx=Load()), attr='optimize', ctx=Load()), args=[Call(func=Name(id='partial', ctx=Load()), args=[Name(id='objective', ctx=Load())], keywords=[keyword(arg='metric_name', value=Name(id='metric_name', ctx=Load())), keyword(arg='ts', value=Name(id='ts', ctx=Load())), keyword(arg='horizon', value=Name(id='horizon', ctx=Load())), keyword(arg='lags', value=Name(id='lags', ctx=Load())), keyword(arg='seed', value=Name(id='seed', ctx=Load()))])], keywords=[keyword(arg='n_trials', value=Name(id='n_trials', ctx=Load()))]))], decorator_list=[Call(func=Attribute(value=Name(id='app', ctx=Load()), attr='command', ctx=Load()), args=[], keywords=[])]), If(test=Compare(left=Name(id='__name__', ctx=Load()), ops=[Eq()], comparators=[Constant(value='__main__')]), body=[Expr(value=Call(func=Attribute(value=Name(id='typer', ctx=Load()), attr='run', ctx=Load()), args=[Name(id='run_optuna', ctx=Load())], keywords=[]))], orelse=[])], type_ignores=[])