Module(body=[Import(names=[alias(name='numpy', asname='np')]), Import(names=[alias(name='torch')]), ImportFrom(module='PIL', names=[alias(name='Image')], level=0), ClassDef(name='Cutout', bases=[Name(id='object', ctx=Load())], keywords=[], body=[Expr(value=Constant(value='Randomly mask out one or more patches from an image.\n    Args:\n        n_holes (int): Number of patches to cut out of each image.\n        size (int): The length (in pixels) of each square patch.\n        probability (float): Probability to apply CutOut.\n    ')), FunctionDef(name='__init__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='n_holes'), arg(arg='size'), arg(arg='probability')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='n_holes', ctx=Store())], value=Name(id='n_holes', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Store())], value=Name(id='size', ctx=Load())), Assign(targets=[Attribute(value=Name(id='self', ctx=Load()), attr='p', ctx=Store())], value=Name(id='probability', ctx=Load()))], decorator_list=[]), FunctionDef(name='__call__', args=arguments(posonlyargs=[], args=[arg(arg='self'), arg(arg='img')], kwonlyargs=[], kw_defaults=[], defaults=[]), body=[Expr(value=Constant(value='\n        Args:\n            img : PIL image of size (C, H, W).\n        Returns:\n            PIL image: Image with n_holes of dimension length x length cut out of it.\n        ')), If(test=Compare(left=Call(func=Attribute(value=Call(func=Attribute(value=Name(id='torch', ctx=Load()), attr='rand', ctx=Load()), args=[List(elts=[Constant(value=1)], ctx=Load())], keywords=[]), attr='item', ctx=Load()), args=[], keywords=[]), ops=[Gt()], comparators=[Attribute(value=Name(id='self', ctx=Load()), attr='p', ctx=Load())]), body=[Return(value=Name(id='img', ctx=Load()))], orelse=[]), Assign(targets=[Name(id='img', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='array', ctx=Load()), args=[Name(id='img', ctx=Load())], keywords=[])), Assign(targets=[Name(id='h', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='img', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=0), ctx=Load())), Assign(targets=[Name(id='w', ctx=Store())], value=Subscript(value=Attribute(value=Name(id='img', ctx=Load()), attr='shape', ctx=Load()), slice=Constant(value=1), ctx=Load())), Assign(targets=[Name(id='mask', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='ones', ctx=Load()), args=[Tuple(elts=[Name(id='h', ctx=Load()), Name(id='w', ctx=Load())], ctx=Load()), Attribute(value=Name(id='np', ctx=Load()), attr='float32', ctx=Load())], keywords=[])), For(target=Name(id='n', ctx=Store()), iter=Call(func=Name(id='range', ctx=Load()), args=[Attribute(value=Name(id='self', ctx=Load()), attr='n_holes', ctx=Load())], keywords=[]), body=[Assign(targets=[Name(id='y', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Name(id='h', ctx=Load())], keywords=[])), Assign(targets=[Name(id='x', ctx=Store())], value=Call(func=Attribute(value=Attribute(value=Name(id='np', ctx=Load()), attr='random', ctx=Load()), attr='randint', ctx=Load()), args=[Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Name(id='y1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='y', ctx=Load()), op=Sub(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='h', ctx=Load())], keywords=[])), Assign(targets=[Name(id='y2', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='y', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='h', ctx=Load())], keywords=[])), Assign(targets=[Name(id='x1', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='x', ctx=Load()), op=Sub(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Name(id='x2', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='clip', ctx=Load()), args=[BinOp(left=Name(id='x', ctx=Load()), op=Add(), right=BinOp(left=Attribute(value=Name(id='self', ctx=Load()), attr='length', ctx=Load()), op=FloorDiv(), right=Constant(value=2))), Constant(value=0), Name(id='w', ctx=Load())], keywords=[])), Assign(targets=[Subscript(value=Name(id='mask', ctx=Load()), slice=Tuple(elts=[Slice(lower=Name(id='y1', ctx=Load()), upper=Name(id='y2', ctx=Load())), Slice(lower=Name(id='x1', ctx=Load()), upper=Name(id='x2', ctx=Load()))], ctx=Load()), ctx=Store())], value=Constant(value=0.0))], orelse=[]), Assign(targets=[Name(id='mask', ctx=Store())], value=Call(func=Attribute(value=Name(id='np', ctx=Load()), attr='repeat', ctx=Load()), args=[Subscript(value=Name(id='mask', ctx=Load()), slice=Tuple(elts=[Slice(), Slice(), Attribute(value=Name(id='np', ctx=Load()), attr='newaxis', ctx=Load())], ctx=Load()), ctx=Load()), Constant(value=3)], keywords=[keyword(arg='axis', value=Constant(value=2))])), Assign(targets=[Name(id='img', ctx=Store())], value=BinOp(left=Name(id='img', ctx=Load()), op=Mult(), right=Name(id='mask', ctx=Load()))), Return(value=Call(func=Attribute(value=Name(id='Image', ctx=Load()), attr='fromarray', ctx=Load()), args=[Call(func=Attribute(value=Name(id='img', ctx=Load()), attr='astype', ctx=Load()), args=[Attribute(value=Name(id='np', ctx=Load()), attr='uint8', ctx=Load())], keywords=[])], keywords=[]))], decorator_list=[])], decorator_list=[])], type_ignores=[])